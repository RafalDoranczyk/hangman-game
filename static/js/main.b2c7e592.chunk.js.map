{"version":3,"sources":["components/Layout/Layout.js","components/DrawingAndInfoSection/HangmanDrawing/HangmanParts/HangmanParts.js","components/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing.js","components/DrawingAndInfoSection/GameInfo/GameInfo.js","components/DrawingAndInfoSection/DrawingAndInfoSection.js","components/PhraseToGuessSection/Letters/Letter/Letter.js","components/PhraseToGuessSection/Letters/Letters.js","components/PhraseToGuessSection/PhraseToGuessSection.js","components/LettersToClickSection/LetterToClick/LetterToClick.js","components/LettersToClickSection/LettersToClickSection.js","containers/App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","Layout","styled","div","_templateObject2","layout","props","react_default","a","createElement","Fragment","children","GallowsBasis","HangmanParts_templateObject","GallowBranch","HangmanParts_templateObject2","GallowTopBranch","_templateObject3","GallowsNoose","_templateObject4","_ref","mistakesLeft","Head","_templateObject5","_ref2","Body","_templateObject6","_ref3","LeftArm","_templateObject7","_ref4","RightArm","_templateObject8","_ref5","LeftLeg","_templateObject9","_ref6","RightLeg","_templateObject10","_ref7","HangmanDrawingWrapper","HangmanDrawing_templateObject","hangmanDrawingSection","GameInfoWrapper","GameInfo_templateObject","Info","GameInfo_templateObject2","Category","p","GameInfo_templateObject3","Hint","GameInfo_templateObject4","MistakesLeft","GameInfo_templateObject5","TimeToNextLetterWrapper","GameInfo_templateObject6","GameInfoSection","timeToNextLetter","DrawingAndInfoSectionWrapper","DrawingAndInfoSection_templateObject","DrawingAndInfoSection","HangmanDrawing","GameInfo","LetterWrapper","span","Letter_templateObject","letter","letterObj","isLetterShowed","LettersWrapper","Letters_templateObject","BreakLine","Letters_templateObject2","letters","phraseToGuess","map","Letter","key","id","PhraseToGuessWrapper","PhraseToGuessSection_templateObject","PhraseToGuess","Letters","LetterToClick_templateObject","isClicked","isHit","letterToClick","clickLetter","LetterToClick_Letter","onClick","LettersToClickSection_templateObject","LettersToClick","lettersToClick","LetterToClick","e","toUpperCase","LettersToClickSection_LettersWrapper","App","state","startTimeToNextLetterHandler","_this","ID","setInterval","setState","isSelectedLetterInPhraseHandler","selectedLetterObj","letterInPhrase","find","selectedLetter","forEach","clickOrPressKeyLetterHandler","pressedOrClickedLetter","_this$state","clickedLetter","target","textContent","index","findIndex","clearInterval","prevProps","prevState","_this2","this","filter","phrase","length","filteredLetters","autoClicked","Math","floor","random","setTimeout","_this3","document","addEventListener","Object","toConsumableArray","push","removeEventListener","console","log","_this$state2","Layout_Layout","components_DrawingAndInfoSection_DrawingAndInfoSection","PhraseToGuessSection","LettersToClickSection","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2c7e592.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*{\r\nmargin: 0;\r\npadding: 0;\r\nbox-sizing: border-box;\r\nfont-weight: normal;\r\ncolor:white;\r\n}\r\n:root{\r\n    font-size: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n`\r\n\r\nconst Layout = styled.div`\r\nbackground-color: #444;\r\nheight: 100vh;\r\noverflow: hidden;\r\ndisplay: flex;\r\nflex-flow: column wrap;\r\njustify-content: space-evenly;\r\nalign-items: center;\r\n`\r\n\r\nconst layout = (props) =>\r\n    (\r\n        <>\r\n            <GlobalStyle />\r\n            <Layout>{props.children}</Layout>\r\n        </>\r\n    )\r\n\r\nexport default layout;","import styled from 'styled-components';\r\n\r\nexport const GallowsBasis = styled.div`\r\nposition: absolute;\r\nbottom: 5%;\r\nleft: 5%;\r\nheight: .3rem;\r\nwidth: 70%;\r\nbackground-color: #fff;\r\n`\r\nexport const GallowBranch = styled.div`\r\nposition: absolute;\r\nheight: 90%;\r\nleft: 5%;\r\nbottom: 5%;\r\nwidth: .4rem;\r\nbackground-color: #fff;\r\n&::after{\r\n    content: '';\r\n    position: absolute;\r\n    top: 0%;\r\n    left: 300%;\r\n    transform: rotate(35deg);\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 4rem;\r\n}\r\n`\r\n\r\nexport const GallowTopBranch = styled.div`\r\nright: 50%;\r\nposition: absolute;\r\nleft: 5%;\r\ntop: 5%;\r\nheight: .4rem;\r\nbackground-color: #fff;\r\n`\r\nexport const GallowsNoose = styled.div`\r\nposition: absolute;\r\ntop: 5%;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: .4rem;\r\nbottom: 82.5%;\r\nbackground-color: #fff;\r\nopacity: ${({ mistakesLeft }) => mistakesLeft <= 6 ? '1' : '0'};\r\ntransition: .8s;\r\n\r\n`\r\nexport const Head = styled.div`\r\n    position: absolute;\r\n    top: 17.5%;\r\n    left: 50%;\r\n    width: 3.5rem;\r\n    height: 3.5rem;\r\n    transform: translate(-50%);\r\n    border-radius: 50%;\r\n    border: .1rem solid white;\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 5 ? '1' : '0'};\r\n    transition: .8s;\r\n\r\n    ::after,::before{\r\n        content: '';\r\n        position: absolute;\r\n        top: 20%;\r\n        width: 10%;\r\n        height: 10%;\r\n        border-radius: 50%;\r\n        background-color: white;\r\n    }\r\n    ::after{\r\n        left: 25%;\r\n    \r\n    }\r\n    ::before{\r\n        right: 25%;\r\n    }\r\n`\r\n\r\nexport const Body = styled.div`\r\n    height: 6rem;\r\n    border-radius: 20%;\r\n    width: .3rem;\r\n    background-color: #fff;\r\n    position: absolute;\r\n    top: calc(17.5% + 3.5rem);\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 4 ? '1' : '0'};\r\n    transition: .8s;\r\n\r\n`\r\n\r\n\r\n\r\nexport const LeftArm = styled.div`\r\n position: absolute;\r\n top: 42.5%;\r\n left: 50%;\r\n width: 3rem;\r\n height: .2rem;\r\n background-color: #fff;\r\n transform: translateX(-100%) rotate(-30deg);\r\n transform-origin: top right;\r\n border-radius: 30%;\r\n opacity: ${({ mistakesLeft }) => mistakesLeft <= 3 ? '1' : '0'};\r\n    transition: .8s;\r\n`\r\nexport const RightArm = styled.div`\r\nposition: absolute;\r\ntop: 42.5%;\r\n right: 50%;\r\n width: 3rem;\r\n height: .2rem;\r\n background-color: #fff;\r\n transform: translateX(100%) rotate(30deg);\r\n transform-origin: top left;\r\n border-radius: 30%;\r\n opacity: ${({ mistakesLeft }) => mistakesLeft <= 2 ? '1' : '0'};\r\n    transition: .8s;\r\n`\r\n\r\nexport const LeftLeg = styled.div`\r\n   position: absolute;\r\n   top: calc(17.5% + 3.5rem + 5.8rem);\r\n left: 50%;\r\n width: 3.5rem;\r\n height: .2rem;\r\n background-color: #fff;\r\n transform: translateX(-100%) rotate(-50deg);\r\n transform-origin: top right;\r\n border-radius: 30%;\r\n opacity: ${({ mistakesLeft }) => mistakesLeft <= 1 ? '1' : '0'};\r\n    transition: .8s;\r\n`\r\n\r\nexport const RightLeg = styled.div`\r\n   position: absolute;\r\n   top: calc(17.5% + 3.5rem + 5.8rem);\r\n right: 50%;\r\n width: 3.5rem;\r\n height: .2rem;\r\n background-color: #fff;\r\n transform: translateX(100%) rotate(50deg);\r\n transform-origin: top left;\r\n border-radius: 30%;\r\n opacity: ${({ mistakesLeft }) => mistakesLeft <= 0 ? '1' : '0'};\r\n    transition: .8s;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Body, Head, LeftArm, LeftLeg, RightArm, GallowsBasis, RightLeg, GallowBranch, GallowTopBranch, GallowsNoose } from './HangmanParts/HangmanParts'\r\n\r\nconst HangmanDrawingWrapper = styled.div`\r\nflex-basis: 50%;\r\nbackground-color: #0B091F;\r\nposition: relative;\r\ntop: 0;\r\nleft: 0;\r\n`\r\n\r\n\r\n\r\n\r\nconst hangmanDrawingSection = ({ mistakesLeft }) => {\r\n\r\n\r\n\r\n    return (\r\n        <HangmanDrawingWrapper>\r\n            <GallowsBasis />\r\n            <GallowBranch />\r\n            <GallowTopBranch />\r\n            <GallowsNoose\r\n                mistakesLeft={mistakesLeft} />\r\n            <Head mistakesLeft={mistakesLeft} />\r\n            <Body mistakesLeft={mistakesLeft} />\r\n            <LeftArm mistakesLeft={mistakesLeft} />\r\n            <LeftLeg mistakesLeft={mistakesLeft} />\r\n            <RightArm mistakesLeft={mistakesLeft} />\r\n            <RightLeg mistakesLeft={mistakesLeft} />\r\n\r\n\r\n        </HangmanDrawingWrapper>\r\n    )\r\n\r\n}\r\nexport default hangmanDrawingSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GameInfoWrapper = styled.div`\r\nflex-basis: 50%;\r\nbackground-color: #D6D6D8;\r\ndisplay: flex;\r\nflex-flow: row nowrap;\r\njustify-content: flex-end;\r\ntext-align: center;\r\n\r\n*{\r\n    color: #000;\r\n  \r\n}\r\nspan{\r\n    display: block;\r\n    width: 80%;\r\n    margin: 1rem auto;\r\n}\r\n`\r\nconst Info = styled.div`\r\nflex-basis: 87.5%;\r\n/* background-color: red; */\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\njustify-content: space-around;\r\nalign-items: flex-end;\r\n`\r\n\r\nconst Category = styled.p`\r\n    flex-basis: 100%;\r\n    height: 30%;\r\n    font-weight: 700;\r\n`\r\nconst Hint = styled.p`\r\n    flex-basis: 100%;\r\n    height: 30%;\r\n    font-weight: 700;\r\n`\r\nconst MistakesLeft = styled.div`\r\nflex-basis: 40%;\r\nheight: 20%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 2rem;\r\nbackground-color: #0B091F;\r\nborder-radius: 20%;\r\ncolor: #D6D6D8;\r\n`\r\n\r\n\r\nconst TimeToNextLetterWrapper = styled.div`\r\nflex-basis: 40%;\r\nheight: 20%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 2rem;\r\nbackground-color: #000;\r\nborder-radius: 20%;\r\ncolor: #D6D6D8;\r\n`\r\n\r\n\r\nconst GameInfoSection = ({ timeToNextLetter, mistakesLeft }) => {\r\n    return (\r\n        <GameInfoWrapper>\r\n            <Info>\r\n                <Category>Category: <span>Famous Buildings </span> </Category>\r\n                <Hint>Hint: <span> One of the highest buildings in Europe</span></Hint>\r\n                <MistakesLeft>{mistakesLeft}</MistakesLeft>\r\n                <TimeToNextLetterWrapper>{timeToNextLetter} </TimeToNextLetterWrapper>\r\n            </Info>\r\n        </GameInfoWrapper>\r\n    );\r\n}\r\n\r\nexport default GameInfoSection;","import React from 'react';\r\nimport HangmanDrawing from './HangmanDrawing/HangmanDrawing';\r\nimport GameInfo from './GameInfo/GameInfo';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DrawingAndInfoSectionWrapper = styled.div`\r\nflex-basis: 35%;\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-flow: row nowrap;\r\noverflow: hidden;\r\nposition: relative;\r\ntop: 0;\r\nleft: 0;\r\n&::after{\r\n    content: '';\r\n    position: absolute;\r\n    top: -10%;\r\n    left: 35%;\r\n    right: 48%;\r\n    height: 200%;\r\n    transform: rotate(5deg);\r\n    background-color:#0B091F;\r\n}\r\n`\r\nconst DrawingAndInfoSection = ({ timeToNextLetter, mistakesLeft }) => (\r\n    <DrawingAndInfoSectionWrapper>\r\n\r\n        <HangmanDrawing\r\n            mistakesLeft={mistakesLeft}\r\n        />\r\n        <GameInfo\r\n            mistakesLeft={mistakesLeft}\r\n            timeToNextLetter={timeToNextLetter}\r\n        />\r\n    </DrawingAndInfoSectionWrapper>\r\n)\r\n\r\nexport default DrawingAndInfoSection;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components';\r\n\r\nconst LetterWrapper = styled.span`\r\ndisplay: block;\r\nheight: 1.5rem;\r\nwidth: 1.5rem;\r\nfont-size: 2rem;\r\nmargin-left: 1rem;\r\n`\r\n\r\n\r\nconst letter = ({ letterObj }) => {\r\n    return (\r\n        <LetterWrapper>\r\n\r\n            {letterObj.isLetterShowed ? letterObj.letter : \"_\"}\r\n        </LetterWrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default letter;","import React from 'react';\r\nimport Letter from './Letter/Letter';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\nflex-basis: 90%;\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\nalign-items: center;\r\njustify-content: center;\r\nalign-content: space-around;\r\ntext-align: center;\r\n`\r\nconst BreakLine = styled.div`\r\nflex-basis: 100%;\r\nheight: 1%;\r\n`\r\n\r\n\r\n\r\nconst letters = ({ phraseToGuess }) => {\r\n\r\n    const letters = phraseToGuess.map(letterObj => {\r\n        let letters;\r\n        if (letterObj.letter !== \" \") {\r\n            letters = <Letter\r\n                key={letterObj.id}\r\n                letterObj={letterObj}\r\n            />\r\n        }\r\n        else if (letterObj.letter === \" \") {\r\n            letters = <BreakLine />\r\n        }\r\n        return letters;\r\n    }\r\n    )\r\n\r\n    return (\r\n        <LettersWrapper>\r\n            {letters}\r\n\r\n        </LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default letters;","import React from 'react';\r\nimport Letters from './Letters/Letters';\r\nimport styled from 'styled-components';\r\n\r\nconst PhraseToGuessWrapper = styled.div`\r\nflex-basis: 25%;\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-flow: column wrap;\r\njustify-content: space-around;\r\nalign-items: center;\r\nbackground-color: #000;\r\ncolor: #050311;\r\n`\r\n\r\nconst PhraseToGuess = ({ phraseToGuess }) => {\r\n\r\n    return (\r\n        <PhraseToGuessWrapper>\r\n            <Letters\r\n\r\n                phraseToGuess={phraseToGuess}\r\n            />\r\n\r\n        </PhraseToGuessWrapper>\r\n    );\r\n}\r\n\r\nexport default PhraseToGuess;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Letter = styled.span`\r\nflex-basis: 10%;\r\nheight: 15%;\r\nmargin: .5rem;\r\nfont-size: 1.5rem;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nborder-radius: 5px;\r\nfont-weight: 400;\r\ntransform: ${({ isClicked }) => isClicked && 'translateY(.3rem)'};  \r\nbox-shadow:${({ isClicked, isHit }) => isHit ? '0 .5rem 0 0 #69a982' : isClicked ? '0 .5rem  0 0 #6f2232' : '0 0 .1rem 0 #D6D6D8'};\r\ncolor: ${({ isClicked }) => isClicked ? '#53516F' : '#D6D6D8'};\r\nbackground-color: ${({ isClicked }) => isClicked ? '#15142E' : '#000'};\r\nopacity: ${({ isClicked }) => isClicked ? '.5' : '1'};\r\ntransition-duration: .1s;\r\ntransition-property: color, background-color, opacity, box-shadow;\r\ncursor: pointer;\r\n`\r\n\r\nconst letterToClick = ({ letter, clickLetter, isHit, isClicked }) => {\r\n\r\n\r\n    return (\r\n        <Letter\r\n\r\n            isClicked={isClicked}\r\n            onClick={clickLetter}\r\n            isHit={isHit}\r\n        >\r\n            {letter}\r\n        </Letter>\r\n    )\r\n}\r\n\r\nexport default letterToClick;","import React from 'react';\r\nimport LetterToClick from './LetterToClick/LetterToClick';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\nflex-basis: 40%;\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-color: #0B091F;\r\n`\r\n\r\nconst LettersToClick = ({ lettersToClick, clickLetter }) => {\r\n\r\n    const letters = lettersToClick.map(letterToClick => (\r\n        <LetterToClick\r\n            clickLetter={(e, key) => clickLetter(e, key)}\r\n            isClicked={letterToClick.isClicked}\r\n            key={letterToClick.letter}\r\n            isHit={letterToClick.isHit}\r\n            letter={letterToClick.letter.toUpperCase()} />\r\n    ))\r\n\r\n    return (\r\n        <LettersWrapper>\r\n            {letters}\r\n        </LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default LettersToClick;","import React, { Component } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport DrawingAndInfoSectionWrapper from '../components/DrawingAndInfoSection/DrawingAndInfoSection';\nimport PhraseToGuessSection from '../components/PhraseToGuessSection/PhraseToGuessSection';\nimport LettersToClickSection from '../components/LettersToClickSection/LettersToClickSection';\n\n\nconst API = ' https://hangman-239ba.firebaseio.com/.json';\n\nclass App extends Component {\n\n  state = {\n    phraseToGuess: [],          //phrase comes from API in componentDidMount\n    lettersToClick: [           //letters in layout, possible to click or press (keyboard)\n      { letter: 'a', isClicked: false, isHit: false },\n      { letter: 'b', isClicked: false, isHit: false },\n      { letter: 'c', isClicked: false, isHit: false },\n      { letter: 'd', isClicked: false, isHit: false },\n      { letter: 'e', isClicked: false, isHit: false },\n      { letter: 'f', isClicked: false, isHit: false },\n      { letter: 'g', isClicked: false, isHit: false },\n      { letter: 'h', isClicked: false, isHit: false },\n      { letter: 'i', isClicked: false, isHit: false },\n      { letter: 'j', isClicked: false, isHit: false },\n      { letter: 'k', isClicked: false, isHit: false },\n      { letter: 'l', isClicked: false, isHit: false },\n      { letter: 'm', isClicked: false, isHit: false },\n      { letter: 'n', isClicked: false, isHit: false },\n      { letter: 'o', isClicked: false, isHit: false },\n      { letter: 'p', isClicked: false, isHit: false },\n      { letter: 'q', isClicked: false, isHit: false },\n      { letter: 'r', isClicked: false, isHit: false },\n      { letter: 's', isClicked: false, isHit: false },\n      { letter: 't', isClicked: false, isHit: false },\n      { letter: 'u', isClicked: false, isHit: false },\n      { letter: 'v', isClicked: false, isHit: false },\n      { letter: 'w', isClicked: false, isHit: false },\n      { letter: 'y', isClicked: false, isHit: false },\n      { letter: 'x', isClicked: false, isHit: false },\n      { letter: 'z', isClicked: false, isHit: false },\n    ],\n    timeToNextLetter: 5,        //if time === 0 => random letter is clicked \n    mistakesLeft: 7,            // if we select wrong letter => mistakes--. If mistakes ===0 => game is over\n  }\n\n  startTimeToNextLetterHandler = () => {\n    this.ID = setInterval(() => {\n      this.setState({ timeToNextLetter: this.state.timeToNextLetter - 1 })\n    }, 1000);\n  }\n\n  isSelectedLetterInPhraseHandler = (selectedLetterObj) => {\n    const { phraseToGuess } = this.state\n    const letterInPhrase = phraseToGuess.find(letterObj => letterObj.letter === selectedLetterObj.letter.toUpperCase())\n    const selectedLetter = selectedLetterObj.letter.toUpperCase()\n    selectedLetterObj.isClicked = true;\n    if (letterInPhrase) {\n      selectedLetterObj.isHit = true;\n      phraseToGuess.forEach(letterObj => {\n        if (letterObj.letter === selectedLetter) {\n          letterObj.isLetterShowed = true;\n        }\n      })\n    }\n    else {\n      this.setState({ mistakesLeft: this.state.mistakesLeft - 1 })\n    }\n  }\n\n  clickOrPressKeyLetterHandler = (e, key) => {\n    if (this.state.timeToNextLetter === 0) return;\n    const { lettersToClick, phraseToGuess, } = this.state\n    const clickedLetter = e.target.textContent\n    let pressedOrClickedLetter;\n\n    if (key) {\n      pressedOrClickedLetter = key.toUpperCase()\n    }\n    else if (clickedLetter) {\n      pressedOrClickedLetter = e.target.textContent;\n    }\n\n    const index = lettersToClick.findIndex(letter => letter.letter.toUpperCase() === pressedOrClickedLetter);\n\n    if (index === -1 || lettersToClick[index].isClicked) return\n\n    const selectedLetterObj = lettersToClick[index]\n    this.isSelectedLetterInPhraseHandler(selectedLetterObj)\n    clearInterval(this.ID)\n    this.setState({ phraseToGuess, lettersToClick, timeToNextLetter: 5 });\n    this.startTimeToNextLetterHandler();\n\n  }\n\n  //autoclick letter\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.timeToNextLetter !== this.state.timeToNextLetter) {\n      const { phraseToGuess } = this.state\n      const lettersToClick = prevState.lettersToClick;\n\n      if (phraseToGuess.filter(phrase => !phrase.isLetterShowed).length === 0) return; // if the phrase is guessed\n      if (lettersToClick.filter(letterObj => !letterObj.isClicked).length === 0) return; // if all letters are clicked\n\n      const filteredLetters = lettersToClick.filter(letterToClick => !letterToClick.isClicked);\n      const random = Math.floor(Math.random() * filteredLetters.length);\n      //this is random clicked letter\n      const autoClicked = filteredLetters[random];\n\n      if (this.state.timeToNextLetter === 0) {\n        this.isSelectedLetterInPhraseHandler(autoClicked);\n        this.setState({ phraseToGuess, lettersToClick });\n        clearInterval(this.ID);\n        setTimeout(() => {\n          this.setState({ timeToNextLetter: 5 })\n          this.startTimeToNextLetterHandler();\n        }, 1000)\n      }\n\n    }\n\n  }\n\n  componentDidMount() {\n\n    // this.startTimeToNextLetterHandler()\n    document.addEventListener('keypress', (e) => this.clickOrPressKeyLetterHandler(e, e.key));\n    const fetchedPhrase = 'The Eiffel Tower';\n    const { phraseToGuess } = this.state;\n    [...fetchedPhrase].map((phrase, index) => {\n      return phraseToGuess.push({\n        letter: phrase.toUpperCase(),\n        id: index,\n        isLetterShowed: false,\n      })\n    })\n    phraseToGuess.filter(letterObj => (\n      letterObj.letter === \" \" || letterObj.letter === \",\" || letterObj.letter === \"-\" ? letterObj.isLetterShowed = true : letterObj.isLetterShowed = false)\n    )\n    this.setState({ phraseToGuess })\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.clickOrPressKeyLetterHandler)\n  }\n\n  render() {\n    console.log((this.state.phraseToGuess.filter(phrase => !phrase.isLetterShowed)))\n    const {\n      phraseToGuess,\n      lettersToClick,\n      timeToNextLetter,\n      mistakesLeft\n    } = this.state\n\n    return (\n\n      <Layout>\n        <DrawingAndInfoSectionWrapper\n          mistakesLeft={mistakesLeft}\n          timeToNextLetter={timeToNextLetter}\n        />\n        <PhraseToGuessSection\n          phraseToGuess={phraseToGuess}\n        />\n        <LettersToClickSection\n          lettersToClick={lettersToClick}\n          clickLetter={this.clickOrPressKeyLetterHandler}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}