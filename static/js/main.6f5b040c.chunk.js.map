{"version":3,"sources":["styled.d.ts","Layout/Layout.tsx","components/StartPage/style.tsx","components/StartGameButton/style.tsx","components/StartGameButton/StartGameButton.tsx","components/StartPage/StartPage.tsx","components/InGamePage/styles.tsx","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/styles.tsx","components/Hangman/style.tsx","components/Hangman/Hangman.tsx","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing.tsx","components/InGamePage/DrawingAndInfoSection/GameInfo/styles.tsx","components/InGamePage/DrawingAndInfoSection/GameInfo/GameInfo.tsx","components/InGamePage/DrawingAndInfoSection/styles.tsx","components/InGamePage/DrawingAndInfoSection/DrawingAndInfoSection.tsx","components/InGamePage/PhraseToGuessSection/Letters/Letter/styles.tsx","components/InGamePage/PhraseToGuessSection/Letters/Letter/Letter.tsx","components/InGamePage/PhraseToGuessSection/Letters/styles.tsx","components/InGamePage/PhraseToGuessSection/Letters/Letters.tsx","components/InGamePage/PhraseToGuessSection/styles.tsx","components/InGamePage/PhraseToGuessSection/PhraseToGuessSection.tsx","components/InGamePage/LettersToClickSection/style.tsx","components/InGamePage/LettersToClickSection/LetterToClick/style.tsx","components/InGamePage/LettersToClickSection/LetterToClick/LetterToClick.tsx","components/InGamePage/LettersToClickSection/LettersToClickSection.tsx","components/InGamePage/InGamePage.tsx","components/EndGamePage/styles.tsx","hoc/Firebase/context.js","components/EndGamePage/EndGamePage.tsx","hoc/Firebase/Firebase.js","hoc/Firebase/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["myTheme","colors","man","gallow","GlobalStyle","createGlobalStyle","_templateObject","LayoutWrapper","styled","div","_templateObject2","Layout","_ref","children","react_default","a","createElement","styled_components_browser_esm","theme","Fragment","StartPageWrapper","style_templateObject","isGameInProgress","isGameEnded","Heading","h1","style_templateObject2","Text","p","_templateObject3","Important","_templateObject4","StartGameButtonStyle","button","StartGameButton_style_templateObject","StartGameButton","isLoading","onClick","react","disabled","StartPage","startGame","components_StartGameButton_StartGameButton","InGamePageWrapper","styles_templateObject","_ref2","_ref3","HangmanDrawingWrapper","HangmanDrawing_styles_templateObject","HangmanWrapper","styles_templateObject2","StylesForAllParts","font","css","Hangman_style_templateObject","GallowParts","Hangman_style_templateObject2","ManParts","style_templateObject3","GallowsBasis","style_templateObject4","GallowBranch","_templateObject5","GallowTopBranch","_templateObject6","GallowsNoose","_templateObject7","_ref4","mistakesLeft","Head","_templateObject8","_ref5","_ref6","Body","_templateObject9","_ref7","StylesForArms","_templateObject10","RightArm","_templateObject11","_ref8","LeftArm","_templateObject12","_ref9","StylesForLegs","_templateObject13","LeftLeg","_templateObject14","_ref10","RightLeg","_templateObject15","_ref11","Hangman","HangmanDrawingSection","components_Hangman_Hangman","GameInfoWrapper","GameInfo_styles_templateObject","CategoryTitle","GameInfo_styles_templateObject2","HintTitle","styles_templateObject3","Category","span","styles_templateObject4","Hint","styles_templateObject5","BoxWrapper","styles_templateObject6","Box","styles_templateObject7","MistakesLeft","styles_templateObject8","TimeToNextLetter","styles_templateObject9","timeToNextLetter","GameInfoSection","category","hint","DrawingAndInfoSectionWrapper","DrawingAndInfoSection_styles_templateObject","DrawingAndInfoSection","HangmanDrawing","GameInfo","LetterWrapper","isGameWon","Letter_styles_templateObject","Letter","isLetterShowed","letter","LettersWrapper","Letters_styles_templateObject","BreakLine","Letters_styles_templateObject2","Letters","phraseToGuess","letters","map","letterObj","Letters_Letter_Letter","key","id","PhraseToGuessWrapper","PhraseToGuessSection_styles_templateObject","PhraseToGuess","PhraseToGuessSection_Letters_Letters","LettersToClickSection_style_templateObject","isClicked","isHit","LetterToClick_style_templateObject","LetterToClick","clickLetter","style_Letter","LettersToClick","lettersToClick","letterToClick","LettersToClickSection_LetterToClick_LetterToClick","_clickLetter","_x","apply","this","arguments","toString","e","toUpperCase","style_LettersWrapper","InGamePage","InGamePage_DrawingAndInfoSection_DrawingAndInfoSection","PhraseToGuessSection","LettersToClickSection","Component","EndGameWrapper","EndGamePage_styles_templateObject","Title","EndGamePage_styles_templateObject2","Subtitle","EndGamePage_styles_templateObject3","TitbitOrPhrase","EndGamePage_styles_templateObject4","EndGamePage","titbit","guessedPhrase","FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","Object","classCallCheck","app","initializeApp","db","database","TIME_TO_NEXT_LETTER","MISTAKES_LEFT","initialState","allPhrasesFromApi","phraseInfo","App","state","fetchAllPhrasesHandler","_this","setState","props","firebase","ref","once","snapshot","entries","val","obj","startGameHandler","randomPhrase","giveRandomPhraseHandler","giveRandom","i","Math","floor","random","assertThisInitialized","randomCategory","length","allQuestionsInThisCategory","randomQuestion","phrase","_randomQuestion$","toConsumableArray","index","clickOrPressKeyHandler","keydownLetter","_this$state","keyPressedOrClickedLetter","target","textContent","findIndex","selectedLetterObj","checkIfLetterIsInPhraseHandler","autoClickLetter","_assertThisInitialize2","notClickedLetters","filter","startTimeToNextLetterHandler","_this$state2","slicedPhrase","slice","slicedLettersToClick","letterToClickIndex","letterInPhrase","find","forEach","isPhraseGuessed","checkIfAllLettersAreShowed","clearInterval","ID","setInterval","includes","_this2","document","addEventListener","prevProps","prevState","_this$state3","removeEventListener","_this$state4","src_Layout_Layout","components_StartPage_StartPage","components_InGamePage_InGamePage","components_EndGamePage_EndGamePage","withFirebase","Consumer","assign","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","value","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f5b040c.chunk.js","sourcesContent":["import \"styled-components\";\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\ndeclare module \"styled-components\" {\r\n  export interface DefaultTheme {\r\n    colors: {\r\n      man: string;\r\n      gallow: string;\r\n    };\r\n  }\r\n}\r\n\r\nconst myTheme: DefaultTheme = {\r\n  colors: { man: \"#EADCCE\", gallow: \"#C47C35\" }\r\n};\r\nexport default myTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport myTheme from \"../styled.d\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody{\r\n  background-color: #644364;\r\n}\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n \r\n}\r\n* ::after, * ::before{\r\n    position: absolute;\r\n    content: '';\r\n}\r\n\r\n\r\n:root{\r\n    color: #000;\r\n    font-size: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n`;\r\nconst LayoutWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 100%;\r\n  width: 100%;\r\n  transform: translate(-50%, -50%);\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 1000px) {\r\n    height: 70%;\r\n    width: 70%;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <ThemeProvider theme={myTheme}>\r\n    <>\r\n      <GlobalStyle />\r\n      <LayoutWrapper>{children}</LayoutWrapper>\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  readonly isGameInProgress: boolean;\r\n  readonly isGameEnded: boolean;\r\n}\r\n\r\nexport const StartPageWrapper = styled.div<Props>`\r\n  min-height: 100%;\r\n  border-radius: 10px;\r\n\r\n  border: 1px solid #fff;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  text-align: justify;\r\n  line-height: 140%;\r\n  opacity: ${({ isGameInProgress, isGameEnded }) =>\r\n    isGameInProgress || isGameEnded ? \"0\" : \"1\"};\r\n  background-color: #644364;\r\n  transition: 0.4s linear opacity;\r\n  font-size: 1.6rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const Heading = styled.h1`\r\n  font-size: 24px;\r\n  color: #fff;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  color: #ccc;\r\n  font-size: 14px;\r\n  width: 90%;\r\n`;\r\n\r\nexport const Important = styled(Text)`\r\n  color: #fff;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StartGameButtonStyle = styled.button`\r\n  height: 45px;\r\n  width: 180px;\r\n  border-radius: 5px;\r\n  background-color: #977697;\r\n  color: #fff;\r\n  border: none;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #a998a9;\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport * as S from \"./style\";\r\nimport PropTypes from \"prop-types\";\r\nexport interface Props {\r\n  isLoading?: boolean;\r\n  onClick: () => void;\r\n  isGameEnded: boolean;\r\n}\r\n\r\nconst StartGameButton: React.SFC<Props> = ({\r\n  isLoading,\r\n  onClick,\r\n  isGameEnded\r\n}) => {\r\n  return (\r\n    <S.StartGameButtonStyle disabled={isLoading} onClick={onClick}>\r\n      {isLoading\r\n        ? \"Fetching phrases...\"\r\n        : isGameEnded\r\n        ? \"Play again\"\r\n        : \"Start game!\"}\r\n    </S.StartGameButtonStyle>\r\n  );\r\n};\r\n\r\nStartGameButton.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  onClick: PropTypes.func.isRequired,\r\n  isGameEnded: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default StartGameButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./style\";\r\nimport StartGameButton from \"../StartGameButton/StartGameButton\";\r\n\r\ninterface Props {\r\n  isGameInProgress: boolean;\r\n  isGameEnded: boolean;\r\n  isLoading: boolean;\r\n  startGame: () => void;\r\n}\r\n\r\nconst StartPage: React.SFC<Props> = ({\r\n  isGameInProgress,\r\n  isGameEnded,\r\n  isLoading,\r\n  startGame\r\n}) => {\r\n  return (\r\n    <S.StartPageWrapper\r\n      isGameEnded={isGameEnded}\r\n      isGameInProgress={isGameInProgress}\r\n    >\r\n      <S.Heading>Hangman</S.Heading>\r\n      <S.Text>\r\n        This is a version of the classic game of hangman in which you try to\r\n        guess the phrase before the man is hung.\r\n      </S.Text>\r\n      <S.Text>\r\n        To play you click on the letters to reveal the phrase. If the phrase\r\n        contains the letter, then it is revealed, but if not - a part of the\r\n        hangman picture is drawn. When the picture is completely drawn, the man\r\n        is hung and the game ends.\r\n      </S.Text>\r\n      <S.Important>\r\n        Be careful! By clicking your first letter you will start the countdown.\r\n        If you don't choose a letter - it will be chosen for you after 5\r\n        seconds! Every time you pick a letter, the countdown will refresh.\r\n      </S.Important>\r\n\r\n      <StartGameButton\r\n        isGameEnded={isGameEnded}\r\n        isLoading={isLoading}\r\n        onClick={startGame}\r\n      />\r\n    </S.StartPageWrapper>\r\n  );\r\n};\r\n\r\nStartPage.propTypes = {\r\n  isGameInProgress: PropTypes.bool.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  isGameEnded: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default StartPage;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameInProgress: boolean;\r\n  isGameEnded: boolean;\r\n}\r\n\r\nexport const InGamePageWrapper = styled.div<Props>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  transform: ${({ isGameInProgress, isGameEnded }) =>\r\n    isGameInProgress || isGameEnded ? \"scale(1)\" : \"scale(0)\"};\r\n  opacity: ${({ isGameInProgress, isGameEnded }) =>\r\n    isGameInProgress || isGameEnded ? \"1\" : \"0\"};\r\n  transition: ${({ isGameEnded }) =>\r\n    isGameEnded ? \".4s .4s linear opacity\" : \".4s linear opacity\"};\r\n  font-size: 1rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HangmanDrawingWrapper = styled.div`\r\n  flex-basis: 50%;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #222333;\r\n`;\r\n\r\nexport const HangmanWrapper = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  z-index: 1;\r\n\r\n  * {\r\n    position: absolute;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\n// IF U WANT TO USE THIS COMPONENT => WRAPPER FOR IT NEEDS POSITION RELATIVE, SOME WIDTH AND HEIGHT AND *{\r\n//     POSITION: ABSOLUTE\r\n//               }\r\n\r\nexport interface Props {\r\n  readonly mistakesLeft: number;\r\n  readonly font?: string;\r\n}\r\n\r\n//HangmanDrawingParts\r\nconst StylesForAllParts = styled.div<Props>(\r\n  ({ font }) => css`\r\n    /* GIVE FONT PROPS IF U WANT MAKE BIGGER HANGMAN */\r\n    font-size: ${font ? font : \"10px\"};\r\n    transition: 1s;\r\n    @media (min-width: 1000px) {\r\n      font-size: ${font ? font : \"15px\"};\r\n    }\r\n  `\r\n);\r\n\r\nconst GallowParts = styled(StylesForAllParts)<Props>(\r\n  ({ theme }) => css`\r\n    background-color: ${theme.colors.gallow};\r\n    &::after,\r\n    &::before {\r\n      background-color: ${theme.colors.gallow};\r\n    }\r\n  `\r\n);\r\n\r\nconst ManParts = styled(StylesForAllParts)<Props>(\r\n  ({ theme }) => css`\r\n    background-color: ${theme.colors.man};\r\n    &::after,\r\n    &::before {\r\n      background-color: ${theme.colors.man};\r\n    }\r\n  `\r\n);\r\n\r\nexport const GallowsBasis = styled(GallowParts)`\r\n  bottom: 1%;\r\n  height: 1em;\r\n  left: 2%;\r\n  width: 40%;\r\n`;\r\nexport const GallowBranch = styled(GallowParts)`\r\n  bottom: 1%;\r\n  height: 95%;\r\n  left: 2%;\r\n  width: 1em;\r\n`;\r\nexport const GallowTopBranch = styled(GallowParts)`\r\n  top: 4%;\r\n  height: 0.8em;\r\n  left: 2%;\r\n  width: 60%;\r\n`;\r\nexport const GallowsNoose = styled(GallowParts)`\r\n  top: 4%;\r\n  height: 20%;\r\n  left: 61%;\r\n  width: 0.7em;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 6 ? \"1\" : \"0\")};\r\n`;\r\nexport const Head = styled(ManParts)`\r\n  height: 4em;\r\n  width: 4em;\r\n  left: calc(61% + 0.35em);\r\n  top: 25%;\r\n  transform: translateX(-50%);\r\n  border-radius: 50%;\r\n  background-color: transparent;\r\n  border: 3px solid ${({ theme }) => theme.colors.man};\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 5 ? \"1\" : \"0\")};\r\n  ::after,\r\n  ::before {\r\n    top: 20%;\r\n    height: 10%;\r\n    width: 10%;\r\n    border-radius: 50%;\r\n  }\r\n  ::after {\r\n    left: 25%;\r\n  }\r\n  ::before {\r\n    right: 25%;\r\n  }\r\n`;\r\nexport const Body = styled(ManParts)`\r\n  top: calc(25% + 4em);\r\n  height: 25%;\r\n  left: calc(61% + 0.35em);\r\n  width: 0.5em;\r\n  transform: translateX(-50%);\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 4 ? \"1\" : \"0\")};\r\n`;\r\nexport const StylesForArms = styled(ManParts)`\r\n  height: 0.4em;\r\n  width: 3em;\r\n  border-radius: 30%;\r\n  top: calc(25% + 4em + 7.5%);\r\n`;\r\n\r\nexport const RightArm = styled(StylesForArms)`\r\n  left: calc(61% + 0.35em);\r\n  transform: rotate(-30deg);\r\n  transform-origin: top right;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 3 ? \"1\" : \"0\")};\r\n`;\r\nexport const LeftArm = styled(StylesForArms)`\r\n  left: calc(61% + 0.35em - 3em);\r\n  transform: rotate(30deg);\r\n  transform-origin: top left;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 2 ? \"1\" : \"0\")};\r\n`;\r\nexport const StylesForLegs = styled(ManParts)`\r\n  top: calc(50% + 4em);\r\n  border-radius: 30%;\r\n  width: 0.4em;\r\n  height: 3.2em;\r\n  left: calc(61% + 0.35em);\r\n`;\r\nexport const LeftLeg = styled(StylesForLegs)`\r\n  transform: translateX(-50%) rotate(50deg);\r\n  transform-origin: top right;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 1 ? \"1\" : \"0\")};\r\n`;\r\nexport const RightLeg = styled(StylesForLegs)`\r\n  left: calc(61%);\r\n  transform: translateX(50%) rotate(-50deg);\r\n  transform-origin: top left;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 0 ? \"1\" : \"0\")};\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Props } from \"./style\";\r\nimport * as S from \"./style\";\r\nconst Hangman: React.FC<Props> = ({ mistakesLeft }) => {\r\n  return (\r\n    <>\r\n      <S.GallowsBasis mistakesLeft={mistakesLeft} />\r\n      <S.GallowBranch mistakesLeft={mistakesLeft} />\r\n      <S.GallowTopBranch mistakesLeft={mistakesLeft} />\r\n      <S.GallowsNoose mistakesLeft={mistakesLeft} />\r\n      <S.Head mistakesLeft={mistakesLeft} />\r\n      <S.Body mistakesLeft={mistakesLeft} />\r\n      <S.LeftArm mistakesLeft={mistakesLeft} />\r\n      <S.LeftLeg mistakesLeft={mistakesLeft} />\r\n      <S.RightArm mistakesLeft={mistakesLeft} />\r\n      <S.RightLeg mistakesLeft={mistakesLeft} />\r\n    </>\r\n  );\r\n};\r\n\r\nHangman.propTypes = {\r\n  mistakesLeft: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Hangman;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Hangman from \"../../../Hangman/Hangman\";\r\n\r\ninterface Props {\r\n  mistakesLeft: number;\r\n}\r\n\r\nconst HangmanDrawingSection: React.FC<Props> = ({ mistakesLeft }) => (\r\n  <S.HangmanDrawingWrapper>\r\n    <S.HangmanWrapper>\r\n      <Hangman mistakesLeft={mistakesLeft} />\r\n    </S.HangmanWrapper>\r\n  </S.HangmanDrawingWrapper>\r\n);\r\n\r\nHangmanDrawingSection.propTypes = {\r\n  mistakesLeft: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HangmanDrawingSection;\r\n","import styled from \"styled-components\";\r\nimport { number } from \"prop-types\";\r\n\r\ninterface Props {\r\n  timeToNextLetter: number;\r\n}\r\n\r\nexport const GameInfoWrapper = styled.div`\r\n  flex-basis: 50%;\r\n  padding: 5px;\r\n  background-color: #fce5fc;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: #3d2f3d;\r\n  font-size: 12px;\r\n  line-height: 140%;\r\n  @media (min-width: 1000px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const CategoryTitle = styled.p`\r\n  font-weight: 700;\r\n`;\r\nexport const HintTitle = styled.p`\r\n  font-weight: 700;\r\n`;\r\nexport const Category = styled.span`\r\n  font-style: italic;\r\n`;\r\nexport const Hint = styled.span`\r\n  font-style: italic;\r\n`;\r\nexport const BoxWrapper = styled.div`\r\n  flex-basis: 30%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 45%;\r\n  height: 35px;\r\n  border-radius: 9px 0 9px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #977697;\r\n  color: white;\r\n  position: relative;\r\n  font-size: 16px;\r\n  &::after {\r\n    top: -20px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 20px;\r\n    color: #111;\r\n    font-size: 0.6em;\r\n  }\r\n`;\r\n\r\nexport const MistakesLeft = styled(Box)`\r\n  &::after {\r\n    content: \"Mistakes left\";\r\n  }\r\n`;\r\nexport const TimeToNextLetter = styled(Box)<Props>`\r\n  transition: 0.3s linear opacity;\r\n  background-color: #533253;\r\n  opacity: ${({ timeToNextLetter }) => (timeToNextLetter === 0 ? \".4\" : \"1\")};\r\n  &::after {\r\n    content: \"Next letter in\";\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  timeToNextLetter: number;\r\n  mistakesLeft: number;\r\n  category: string;\r\n  hint: string;\r\n}\r\n\r\nconst GameInfoSection: React.FC<Props> = ({\r\n  timeToNextLetter,\r\n  mistakesLeft,\r\n  category,\r\n  hint\r\n}) => {\r\n  return (\r\n    <S.GameInfoWrapper>\r\n      <S.CategoryTitle>Category</S.CategoryTitle>\r\n      <S.Category>{category}</S.Category>\r\n      <S.HintTitle>Hint</S.HintTitle>\r\n      <S.Hint>{hint}</S.Hint>\r\n\r\n      <S.BoxWrapper>\r\n        <S.MistakesLeft>{mistakesLeft}</S.MistakesLeft>\r\n        <S.TimeToNextLetter timeToNextLetter={timeToNextLetter}>\r\n          {timeToNextLetter}\r\n        </S.TimeToNextLetter>\r\n      </S.BoxWrapper>\r\n    </S.GameInfoWrapper>\r\n  );\r\n};\r\n\r\nGameInfoSection.propTypes = {\r\n  timeToNextLetter: PropTypes.number.isRequired,\r\n  mistakesLeft: PropTypes.number.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  hint: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GameInfoSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DrawingAndInfoSectionWrapper = styled.div`\r\n  flex-basis: 40%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-basis: 100%;\r\n    width: 60%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport HangmanDrawing from \"./HangmanDrawing/HangmanDrawing\";\r\nimport GameInfo from \"./GameInfo/GameInfo\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  timeToNextLetter: number;\r\n  mistakesLeft: number;\r\n  category: string;\r\n  hint: string;\r\n}\r\n\r\nconst DrawingAndInfoSection: React.FC<Props> = ({\r\n  timeToNextLetter,\r\n  mistakesLeft,\r\n  category,\r\n  hint\r\n}) => {\r\n  return (\r\n    <S.DrawingAndInfoSectionWrapper>\r\n      <HangmanDrawing mistakesLeft={mistakesLeft} />\r\n      <GameInfo\r\n        category={category}\r\n        hint={hint}\r\n        mistakesLeft={mistakesLeft}\r\n        timeToNextLetter={timeToNextLetter}\r\n      />\r\n    </S.DrawingAndInfoSectionWrapper>\r\n  );\r\n};\r\n\r\nDrawingAndInfoSection.propTypes = {\r\n  timeToNextLetter: PropTypes.number.isRequired,\r\n  mistakesLeft: PropTypes.number.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  hint: PropTypes.string.isRequired\r\n};\r\nexport default DrawingAndInfoSection;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameWon: boolean;\r\n}\r\n\r\nexport const LetterWrapper = styled.span<Props>(\r\n  ({ isGameWon }) => css`\r\n    display: block;\r\n    height: 0.7em;\r\n    width: 0.7em;\r\n    font-size: 1.6em;\r\n    margin: 0 0.8em;\r\n    color: ${isGameWon ? \"#fed123\" : \"#dbd4eb\"};\r\n    @media (orientation: landscape) {\r\n      margin: 0 0.4em;\r\n    }\r\n  `\r\n);\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\ninterface Props {\r\n  isLetterShowed: boolean;\r\n  letter: string;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst Letter: React.FC<Props> = ({ isLetterShowed, letter, isGameWon }) => (\r\n  <S.LetterWrapper isGameWon={isGameWon}>\r\n    {isLetterShowed ? letter : \"__\"}\r\n  </S.LetterWrapper>\r\n);\r\n\r\nLetter.propTypes = {\r\n  isLetterShowed: PropTypes.bool.isRequired,\r\n  letter: PropTypes.string.isRequired,\r\n  isGameWon: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Letter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LettersWrapper = styled.div`\r\n  flex-basis: 90%;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-content: space-around;\r\n  text-align: center;\r\n`;\r\n\r\nexport const BreakLine = styled.div`\r\n  flex-basis: 100%;\r\n  height: 1%;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Letter from \"./Letter/Letter\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  phraseToGuess: Array<any>;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst Letters: React.FC<Props> = ({ phraseToGuess, isGameWon }) => {\r\n  const letters = phraseToGuess.map(letterObj => {\r\n    let letters;\r\n    if (letterObj.letter !== \" \") {\r\n      letters = (\r\n        <Letter\r\n          key={letterObj.id}\r\n          isLetterShowed={letterObj.isLetterShowed}\r\n          letter={letterObj.letter}\r\n          isGameWon={isGameWon}\r\n        />\r\n      );\r\n    } else if (letterObj.letter === \" \") {\r\n      letters = <S.BreakLine key={letterObj.id} />;\r\n    }\r\n    return letters;\r\n  });\r\n\r\n  return <S.LettersWrapper>{letters}</S.LettersWrapper>;\r\n};\r\n\r\nLetters.propTypes = {\r\n  phraseToGuess: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isGameWon: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Letters;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PhraseToGuessWrapper = styled.div`\r\n  flex-basis: 25%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: space-around;\r\n  border-radius: 5px;\r\n  background-color: #644364;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-basis: 40%;\r\n    width: 40%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Letters from \"./Letters/Letters\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  phraseToGuess: Array<any>;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst PhraseToGuess: React.FC<Props> = ({ phraseToGuess, isGameWon }) => (\r\n  <S.PhraseToGuessWrapper>\r\n    <Letters isGameWon={isGameWon} phraseToGuess={phraseToGuess} />\r\n  </S.PhraseToGuessWrapper>\r\n);\r\n\r\nPhraseToGuess.propTypes = {\r\n  phraseToGuess: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isGameWon: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default PhraseToGuess;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LettersWrapper = styled.div`\r\n  flex-basis: 35%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #977697;\r\n  font-size: 1.5rem;\r\n  @media (orientation: landscape) {\r\n    flex-grow: 1;\r\n    width: 40%;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isClicked: boolean;\r\n  isHit: boolean;\r\n  disabled: any;\r\n}\r\n\r\nexport const Letter = styled.button<Props>(\r\n  ({ isClicked, isHit, disabled }) => css`\r\n    flex-basis: 10%;\r\n    border: none;\r\n    height: 15%;\r\n    margin: 1% 2%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    font-weight: 700;\r\n    opacity: ${disabled && \".4\"};\r\n    transition: 0.2s ease all;\r\n    transform: ${isClicked && \"scale(0.9)\"};\r\n    background-color: ${isHit ? \"#69a982\" : isClicked ? \"#d92121\" : \"#fff\"};\r\n    color: #977697;\r\n    cursor: pointer;\r\n    :hover {\r\n      box-shadow: ${!isClicked && \"0 0 5px 5px #ddd\"};\r\n    }\r\n  `\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./style\";\r\n\r\ninterface Props {\r\n  letter: string;\r\n  isHit: boolean;\r\n  isClicked: boolean;\r\n  clickLetter: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\r\n  timeToNextLetter: number;\r\n}\r\n\r\nconst LetterToClick: React.FC<Props> = ({\r\n  letter,\r\n  clickLetter,\r\n  isHit,\r\n  isClicked,\r\n  timeToNextLetter\r\n}) => (\r\n  <S.Letter\r\n    disabled={timeToNextLetter === 0 && true}\r\n    onClick={clickLetter}\r\n    isClicked={isClicked}\r\n    isHit={isHit}\r\n  >\r\n    {letter}\r\n  </S.Letter>\r\n);\r\n\r\nLetterToClick.propTypes = {\r\n  letter: PropTypes.string.isRequired,\r\n  isHit: PropTypes.bool.isRequired,\r\n  isClicked: PropTypes.bool.isRequired,\r\n  clickLetter: PropTypes.func.isRequired,\r\n  timeToNextLetter: PropTypes.number.isRequired\r\n};\r\n\r\nexport default LetterToClick;\r\n","import React from \"react\";\r\nimport * as S from \"./style\";\r\nimport PropTypes from \"prop-types\";\r\nimport LetterToClick from \"./LetterToClick/LetterToClick\";\r\n\r\ninterface Props {\r\n  lettersToClick: Array<any>;\r\n  clickLetter: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\r\n  timeToNextLetter: number;\r\n}\r\n\r\nconst LettersToClick: React.FC<Props> = ({\r\n  lettersToClick,\r\n  clickLetter,\r\n  timeToNextLetter\r\n}) => {\r\n  const letters = lettersToClick.map(letterToClick => (\r\n    <LetterToClick\r\n      timeToNextLetter={timeToNextLetter}\r\n      clickLetter={e => clickLetter(e)}\r\n      isClicked={letterToClick.isClicked}\r\n      key={letterToClick.letter}\r\n      isHit={letterToClick.isHit}\r\n      letter={letterToClick.letter.toUpperCase()}\r\n    />\r\n  ));\r\n\r\n  return <S.LettersWrapper>{letters}</S.LettersWrapper>;\r\n};\r\n\r\nLettersToClick.propTypes = {\r\n  lettersToClick: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  clickLetter: PropTypes.func.isRequired,\r\n  timeToNextLetter: PropTypes.number.isRequired\r\n};\r\nexport default LettersToClick;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport DrawingAndInfoSection from \"./DrawingAndInfoSection/DrawingAndInfoSection\";\r\nimport PhraseToGuessSection from \"./PhraseToGuessSection/PhraseToGuessSection\";\r\nimport LettersToClickSection from \"./LettersToClickSection/LettersToClickSection\";\r\n\r\ninterface Props {\r\n  clickLetter: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\r\n  mistakesLeft: number;\r\n  timeToNextLetter: number;\r\n  phraseToGuess: Array<any>;\r\n  hint: string;\r\n  category: string;\r\n  lettersToClick: Array<any>;\r\n  isGameInProgress: boolean;\r\n  isGameEnded: boolean;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst InGamePage: React.FC<Props> = ({\r\n  mistakesLeft,\r\n  timeToNextLetter,\r\n  phraseToGuess,\r\n  category,\r\n  hint,\r\n  lettersToClick,\r\n  clickLetter,\r\n  isGameInProgress,\r\n  isGameEnded,\r\n  isGameWon\r\n}) => {\r\n  return (\r\n    <S.InGamePageWrapper\r\n      isGameEnded={isGameEnded}\r\n      isGameInProgress={isGameInProgress}\r\n    >\r\n      <DrawingAndInfoSection\r\n        category={category}\r\n        hint={hint}\r\n        mistakesLeft={mistakesLeft}\r\n        timeToNextLetter={timeToNextLetter}\r\n      />\r\n      <PhraseToGuessSection\r\n        phraseToGuess={phraseToGuess}\r\n        isGameWon={isGameWon}\r\n      />\r\n      <LettersToClickSection\r\n        timeToNextLetter={timeToNextLetter}\r\n        lettersToClick={lettersToClick}\r\n        clickLetter={clickLetter}\r\n      />\r\n    </S.InGamePageWrapper>\r\n  );\r\n};\r\n\r\nInGamePage.propTypes = {\r\n  mistakesLeft: PropTypes.number.isRequired,\r\n  timeToNextLetter: PropTypes.number.isRequired,\r\n  phraseToGuess: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  hint: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  lettersToClick: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  clickLetter: PropTypes.func.isRequired,\r\n  isGameInProgress: PropTypes.bool.isRequired,\r\n  isGameEnded: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default InGamePage;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameEnded: boolean;\r\n}\r\n\r\nexport const EndGameWrapper = styled.div<Props>(\r\n  ({ isGameEnded }) => css`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 35%;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    transform: ${isGameEnded ? \"translateY(0)\" : \"translateY(-100%)\"};\r\n    opacity: ${isGameEnded ? \"1\" : \"0\"};\r\n    transition: ${isGameEnded ? \" 0.5s 0.8s linear all\" : \"0.3s ease all\"};\r\n    background-color: #644364;\r\n    color: white;\r\n    @media (orientation: landscape) {\r\n      bottom: 0;\r\n      right: 40%;\r\n    }\r\n  `\r\n);\r\n\r\nexport const Title = styled.p`\r\n  font-size: 22px;\r\n`;\r\nexport const Subtitle = styled.p`\r\n  font-size: 18px;\r\n`;\r\nexport const TitbitOrPhrase = styled.div`\r\n  width: 85%;\r\n  color: #f9fc4e;\r\n  text-align: center;\r\n  max-height: 130px;\r\n  overflow: auto;\r\n`;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport StartGameButton from \"../StartGameButton/StartGameButton\";\r\ninterface Props {\r\n  isGameEnded: boolean;\r\n  isGameWon: boolean;\r\n  phraseToGuess: Array<any>;\r\n  onClick: () => void;\r\n  titbit?: string;\r\n}\r\n\r\nconst EndGamePage: React.FC<Props> = ({\r\n  isGameEnded,\r\n  isGameWon,\r\n  phraseToGuess,\r\n  onClick,\r\n  titbit\r\n}) => {\r\n  const guessedPhrase = phraseToGuess.map(({ letter }) => letter);\r\n  return (\r\n    <S.EndGameWrapper isGameEnded={isGameEnded}>\r\n      <S.Title>{isGameWon ? \"Excellent!\" : `Try again!`}</S.Title>\r\n      <S.Subtitle>\r\n        {isGameWon ? \"Fun Fact\" : \"The correct phrase was\"}\r\n      </S.Subtitle>\r\n\r\n      <S.TitbitOrPhrase>{isGameWon ? titbit : guessedPhrase}</S.TitbitOrPhrase>\r\n\r\n      <StartGameButton isGameEnded={isGameEnded} onClick={onClick} />\r\n    </S.EndGameWrapper>\r\n  );\r\n};\r\n\r\nEndGamePage.propTypes = {\r\n  isGameEnded: PropTypes.bool.isRequired,\r\n  isGameWon: PropTypes.bool.isRequired,\r\n  phraseToGuess: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  titbit: PropTypes.string\r\n};\r\n\r\nexport default EndGamePage;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyC6vn4EfK3J_Cad5dnysic1OZv3vP7hQ0Q\",\r\n  authDomain: \"hangman-239ba.firebaseapp.com\",\r\n  databaseURL: \"https://hangman-239ba.firebaseio.com\",\r\n  projectId: \"hangman-239ba\",\r\n  storageBucket: \"hangman-239ba.appspot.com\",\r\n  messagingSenderId: \"101819977682\",\r\n  appId: \"1:101819977682:web:0362f0cb597b13dc\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.db = app.database();\r\n  }\r\n\r\n  // REFERENCES\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./Firebase\";\r\n\r\nexport { FirebaseContext, withFirebase };\r\n\r\nexport default Firebase;\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport StartPage from \"../components/StartPage/StartPage\";\r\nimport InGamePage from \"../components/InGamePage/InGamePage\";\r\nimport EndGamePage from \"../components/EndGamePage/EndGamePage\";\r\nimport { withFirebase } from \"../hoc/Firebase\";\r\nconst TIME_TO_NEXT_LETTER = 5;\r\nconst MISTAKES_LEFT = 7;\r\nconst INITIAL_LETTERS_TO_CLICK = [\r\n  { letter: \"Q\", isClicked: false, isHit: false },\r\n  { letter: \"W\", isClicked: false, isHit: false },\r\n  { letter: \"E\", isClicked: false, isHit: false },\r\n  { letter: \"R\", isClicked: false, isHit: false },\r\n  { letter: \"T\", isClicked: false, isHit: false },\r\n  { letter: \"Y\", isClicked: false, isHit: false },\r\n  { letter: \"U\", isClicked: false, isHit: false },\r\n  { letter: \"I\", isClicked: false, isHit: false },\r\n  { letter: \"O\", isClicked: false, isHit: false },\r\n  { letter: \"P\", isClicked: false, isHit: false },\r\n  { letter: \"A\", isClicked: false, isHit: false },\r\n  { letter: \"S\", isClicked: false, isHit: false },\r\n  { letter: \"D\", isClicked: false, isHit: false },\r\n  { letter: \"F\", isClicked: false, isHit: false },\r\n  { letter: \"G\", isClicked: false, isHit: false },\r\n  { letter: \"H\", isClicked: false, isHit: false },\r\n  { letter: \"J\", isClicked: false, isHit: false },\r\n  { letter: \"K\", isClicked: false, isHit: false },\r\n  { letter: \"L\", isClicked: false, isHit: false },\r\n  { letter: \"Z\", isClicked: false, isHit: false },\r\n  { letter: \"X\", isClicked: false, isHit: false },\r\n  { letter: \"C\", isClicked: false, isHit: false },\r\n  { letter: \"V\", isClicked: false, isHit: false },\r\n  { letter: \"B\", isClicked: false, isHit: false },\r\n  { letter: \"N\", isClicked: false, isHit: false },\r\n  { letter: \"M\", isClicked: false, isHit: false }\r\n];\r\n\r\nconst initialState = {\r\n  allPhrasesFromApi: [],\r\n  isGameInProgress: false,\r\n  isGameEnded: false,\r\n  isGameWon: false,\r\n  isLoading: false,\r\n  phraseToGuess: [],\r\n  phraseInfo: {\r\n    category: \"\",\r\n    hint: \"\",\r\n    titbit: \"\"\r\n  },\r\n  lettersToClick: INITIAL_LETTERS_TO_CLICK,\r\n  timeToNextLetter: TIME_TO_NEXT_LETTER, //if time === 0 => random letter is clicked\r\n  mistakesLeft: MISTAKES_LEFT // if we select wrong letter => mistakes--. If mistakes ===0 => game is over\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...initialState\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", e =>\r\n      this.clickOrPressKeyHandler(e, e.key)\r\n    );\r\n    this.fetchAllPhrasesHandler();\r\n  }\r\n\r\n  fetchAllPhrasesHandler = () => {\r\n    this.setState({ isLoading: true });\r\n    this.props.firebase.db.ref().once(\"value\", snapshot => {\r\n      const allPhrasesFromApi = Object.entries(snapshot.val()).map(obj => obj);\r\n      this.setState({\r\n        allPhrasesFromApi,\r\n        isLoading: false\r\n      });\r\n    });\r\n  };\r\n\r\n  startGameHandler = () => {\r\n    const randomPhrase = this.giveRandomPhraseHandler();\r\n    const { phraseToGuess, phraseInfo } = randomPhrase;\r\n\r\n    this.setState({\r\n      isGameInProgress: true,\r\n      phraseToGuess,\r\n      phraseInfo,\r\n      isGameEnded: false,\r\n      isGameWon: false,\r\n      lettersToClick: [\r\n        { letter: \"Q\", isClicked: false, isHit: false },\r\n        { letter: \"W\", isClicked: false, isHit: false },\r\n        { letter: \"E\", isClicked: false, isHit: false },\r\n        { letter: \"R\", isClicked: false, isHit: false },\r\n        { letter: \"T\", isClicked: false, isHit: false },\r\n        { letter: \"Y\", isClicked: false, isHit: false },\r\n        { letter: \"U\", isClicked: false, isHit: false },\r\n        { letter: \"I\", isClicked: false, isHit: false },\r\n        { letter: \"O\", isClicked: false, isHit: false },\r\n        { letter: \"P\", isClicked: false, isHit: false },\r\n        { letter: \"A\", isClicked: false, isHit: false },\r\n        { letter: \"S\", isClicked: false, isHit: false },\r\n        { letter: \"D\", isClicked: false, isHit: false },\r\n        { letter: \"F\", isClicked: false, isHit: false },\r\n        { letter: \"G\", isClicked: false, isHit: false },\r\n        { letter: \"H\", isClicked: false, isHit: false },\r\n        { letter: \"J\", isClicked: false, isHit: false },\r\n        { letter: \"K\", isClicked: false, isHit: false },\r\n        { letter: \"L\", isClicked: false, isHit: false },\r\n        { letter: \"Z\", isClicked: false, isHit: false },\r\n        { letter: \"X\", isClicked: false, isHit: false },\r\n        { letter: \"C\", isClicked: false, isHit: false },\r\n        { letter: \"V\", isClicked: false, isHit: false },\r\n        { letter: \"B\", isClicked: false, isHit: false },\r\n        { letter: \"N\", isClicked: false, isHit: false },\r\n        { letter: \"M\", isClicked: false, isHit: false }\r\n      ],\r\n      timeToNextLetter: TIME_TO_NEXT_LETTER,\r\n      mistakesLeft: MISTAKES_LEFT\r\n    });\r\n  };\r\n\r\n  giveRandom = i => Math.floor(Math.random() * i);\r\n\r\n  giveRandomPhraseHandler = () => {\r\n    const { allPhrasesFromApi } = this.state;\r\n    const { giveRandom } = this;\r\n\r\n    const randomCategory =\r\n      allPhrasesFromApi[giveRandom(allPhrasesFromApi.length)];\r\n\r\n    const allQuestionsInThisCategory = Object.entries(randomCategory[1]).map(\r\n      obj => obj\r\n    );\r\n    const randomQuestion =\r\n      allQuestionsInThisCategory[giveRandom(allQuestionsInThisCategory.length)];\r\n\r\n    const category = randomCategory[0];\r\n    const phrase = randomQuestion[0];\r\n    const { hint, titbit } = randomQuestion[1];\r\n\r\n    const phraseToGuess = [...phrase].map((letter, index) => ({\r\n      id: index,\r\n      letter: letter.toUpperCase(),\r\n      isLetterShowed:\r\n        letter === \",\" || letter === \"-\" || letter === \" \" ? true : false\r\n    }));\r\n\r\n    return {\r\n      phraseToGuess,\r\n      phraseInfo: {\r\n        category,\r\n        hint,\r\n        titbit\r\n      }\r\n    };\r\n  };\r\n\r\n  clickOrPressKeyHandler = (e, keydownLetter) => {\r\n    const {\r\n      isGameInProgress,\r\n      timeToNextLetter,\r\n      isGameEnded,\r\n      lettersToClick\r\n    } = this.state;\r\n\r\n    if (!isGameInProgress || isGameEnded || timeToNextLetter === 0) {\r\n      return;\r\n    } else {\r\n      let keyPressedOrClickedLetter;\r\n\r\n      if (keydownLetter) {\r\n        keyPressedOrClickedLetter = keydownLetter.toUpperCase();\r\n      } else if (e.target.textContent) {\r\n        keyPressedOrClickedLetter = e.target.textContent;\r\n      }\r\n\r\n      const index = lettersToClick.findIndex(\r\n        ({ letter }) => letter === keyPressedOrClickedLetter\r\n      );\r\n\r\n      if (index === -1 || lettersToClick[index].isClicked) {\r\n        return;\r\n      } else {\r\n        const selectedLetterObj = lettersToClick[index];\r\n        return this.checkIfLetterIsInPhraseHandler(selectedLetterObj);\r\n      }\r\n    }\r\n  };\r\n\r\n  autoClickLetter = () => {\r\n    const { checkIfLetterIsInPhraseHandler, giveRandom } = this;\r\n    const { lettersToClick } = this.state;\r\n    const notClickedLetters = lettersToClick.filter(\r\n      letter => !letter.isClicked\r\n    );\r\n    const random = giveRandom(notClickedLetters.length);\r\n    const selectedLetter = notClickedLetters[random];\r\n    return checkIfLetterIsInPhraseHandler(selectedLetter);\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //END GAME HANDLER\r\n    const { timeToNextLetter, mistakesLeft } = this.state;\r\n\r\n    if (prevState.mistakesLeft !== mistakesLeft && mistakesLeft === 0) {\r\n      clearInterval(this.ID);\r\n      this.setState({ isGameEnded: true, isGameInProgress: false });\r\n    }\r\n\r\n    if (\r\n      prevState.timeToNextLetter !== timeToNextLetter &&\r\n      timeToNextLetter === -1\r\n    ) {\r\n      this.autoClickLetter();\r\n      this.setState({ timeToNextLetter: TIME_TO_NEXT_LETTER });\r\n    }\r\n  }\r\n\r\n  checkIfLetterIsInPhraseHandler = selectedLetterObj => {\r\n    this.startTimeToNextLetterHandler();\r\n    const { phraseToGuess, lettersToClick } = this.state;\r\n    const slicedPhrase = phraseToGuess.slice();\r\n    const slicedLettersToClick = lettersToClick.slice();\r\n\r\n    const letterToClickIndex = slicedLettersToClick.findIndex(\r\n      obj => obj.letter === selectedLetterObj.letter\r\n    );\r\n    slicedLettersToClick[letterToClickIndex].isClicked = true;\r\n\r\n    const letterInPhrase = phraseToGuess.find(\r\n      obj => obj.letter === selectedLetterObj.letter\r\n    );\r\n\r\n    if (letterInPhrase) {\r\n      slicedLettersToClick[letterToClickIndex].isHit = true;\r\n      slicedPhrase.forEach(\r\n        obj =>\r\n          obj.letter === selectedLetterObj.letter && (obj.isLetterShowed = true)\r\n      );\r\n      const isPhraseGuessed = this.checkIfAllLettersAreShowed();\r\n      if (isPhraseGuessed) {\r\n        clearInterval(this.ID);\r\n        this.setState({\r\n          isGameInProgress: false,\r\n          isGameEnded: true,\r\n          isGameWon: true\r\n        });\r\n      } else if (!isPhraseGuessed) {\r\n        this.setState({\r\n          phraseToGuess: slicedPhrase,\r\n          lettersToClick: slicedLettersToClick\r\n        });\r\n      }\r\n    } else if (!letterInPhrase) {\r\n      slicedLettersToClick[letterToClickIndex].isHit = false;\r\n      this.setState({\r\n        mistakesLeft: this.state.mistakesLeft - 1,\r\n        timeToNextLetter: TIME_TO_NEXT_LETTER\r\n      });\r\n    }\r\n  };\r\n\r\n  startTimeToNextLetterHandler = () => {\r\n    clearInterval(this.ID);\r\n    this.ID = setInterval(() => {\r\n      this.setState({ timeToNextLetter: this.state.timeToNextLetter - 1 });\r\n    }, 1000);\r\n  };\r\n\r\n  checkIfAllLettersAreShowed = () => {\r\n    const { phraseToGuess } = this.state;\r\n    const arrayOfBoolean = phraseToGuess.map(obj => obj.isLetterShowed);\r\n    const areAllLettersShowed = !arrayOfBoolean.includes(false);\r\n    return areAllLettersShowed;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.clickOrPressKeyHandler());\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      phraseToGuess,\r\n      lettersToClick,\r\n      timeToNextLetter,\r\n      mistakesLeft,\r\n      isGameInProgress,\r\n      isGameEnded,\r\n      phraseInfo,\r\n      isGameWon,\r\n      isLoading\r\n    } = this.state;\r\n\r\n    const { category, hint, titbit } = phraseInfo;\r\n\r\n    return (\r\n      <Layout isGameInProgress={isGameInProgress}>\r\n        <StartPage\r\n          phraseToGuess={phraseToGuess}\r\n          isGameEnded={isGameEnded}\r\n          isGameInProgress={isGameInProgress}\r\n          startGame={this.startGameHandler}\r\n          isLoading={isLoading}\r\n        />\r\n        <InGamePage\r\n          isGameEnded={isGameEnded}\r\n          isGameInProgress={isGameInProgress}\r\n          category={category}\r\n          hint={hint}\r\n          phraseToGuess={phraseToGuess}\r\n          lettersToClick={lettersToClick}\r\n          timeToNextLetter={timeToNextLetter}\r\n          mistakesLeft={mistakesLeft}\r\n          clickLetter={this.clickOrPressKeyHandler}\r\n          isGameWon={isGameWon}\r\n        />\r\n        <EndGamePage\r\n          titbit={titbit}\r\n          onClick={this.startGameHandler}\r\n          phraseToGuess={phraseToGuess}\r\n          isGameWon={isGameWon}\r\n          isGameEnded={isGameEnded}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App.js\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Firebase, { FirebaseContext } from \"./hoc/Firebase\";\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}