{"version":3,"sources":["theme/theme.js","components/Layout/Layout.js","components/DrawingAndInfoSection/HangmanDrawing/HangmanParts/HangmanParts.js","components/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing.js","components/DrawingAndInfoSection/GameInfo/GameInfo.js","components/DrawingAndInfoSection/DrawingAndInfoSection.js","components/PhraseToGuessSection/Letters/Letter/Letter.js","components/PhraseToGuessSection/Letters/Letters.js","components/PhraseToGuessSection/PhraseToGuessSection.js","components/LettersToClickSection/LetterToClick/LetterToClick.js","components/LettersToClickSection/LettersToClickSection.js","containers/App.js","serviceWorker.js","index.js"],"names":["theme","colors","white","black","gray","deep","green","red","GlobalStyle","createGlobalStyle","_templateObject","_ref","Layout","styled","div","_templateObject2","layout","props","react_default","a","createElement","styled_components_browser_esm","Fragment","children","StylesForAllParts","HangmanParts_templateObject","_ref2","GallowsBasis","HangmanParts_templateObject2","GallowBranch","_templateObject3","GallowTopBranch","_templateObject4","GallowsNoose","_templateObject5","_ref3","mistakesLeft","Head","_templateObject6","_ref4","Body","_templateObject7","_ref5","StylesForArms","_templateObject8","StylesForLegs","_templateObject9","LeftArm","_templateObject10","_ref6","RightArm","_templateObject11","_ref7","LeftLeg","_templateObject12","_ref8","RightLeg","_templateObject13","_ref9","HangmanDrawingWrapper","HangmanDrawing_templateObject","hangmanDrawingSection","GameInfoWrapper","GameInfo_templateObject","Info","GameInfo_templateObject2","Category","p","GameInfo_templateObject3","Hint","GameInfo_templateObject4","MistakesLeft","GameInfo_templateObject5","TimeToNextLetterWrapper","GameInfo_templateObject6","GameInfoSection","timeToNextLetter","DrawingAndInfoSectionWrapper","DrawingAndInfoSection_templateObject","DrawingAndInfoSection","HangmanDrawing","GameInfo","LetterWrapper","span","Letter_templateObject","letter","letterObj","isLetterShowed","LettersWrapper","Letters_templateObject","BreakLine","Letters_templateObject2","letters","phraseToGuess","map","Letter","key","id","PhraseToGuessWrapper","PhraseToGuessSection_templateObject","PhraseToGuess","Letters","LetterToClick_templateObject","isClicked","isHit","concat","letterToClick","clickLetter","LetterToClick_Letter","onClick","LettersToClickSection_templateObject","LettersToClick","lettersToClick","LetterToClick","e","toUpperCase","LettersToClickSection_LettersWrapper","App","state","startTimeToNextLetterHandler","_this","ID","setInterval","setState","isSelectedLetterInPhraseHandler","selectedLetterObj","letterInPhrase","find","selectedLetter","forEach","clickOrPressKeyLetterHandler","pressedOrClickedLetter","_this$state","clickedLetter","target","textContent","index","findIndex","clearInterval","prevProps","prevState","_this2","this","filter","phrase","length","filteredLetters","autoClicked","Math","floor","random","setTimeout","_this3","document","addEventListener","Object","toConsumableArray","push","removeEventListener","console","log","_this$state2","Layout_Layout","components_DrawingAndInfoSection_DrawingAndInfoSection","PhraseToGuessSection","LettersToClickSection","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fab880c8.chunk.js","sourcesContent":["export const theme = {\r\n\r\n    colors: {\r\n        white: '#fff',\r\n        black: '#000',\r\n        gray: '#D6D6D8',\r\n        deep: '#0B091F',\r\n        green: '#69a982',\r\n        red: '#6f2232',\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport { theme } from '../../theme/theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-weight: normal;\r\n    color:${({ theme }) => theme.colors.black};\r\n}\r\n* ::after, * ::before{\r\n    position: absolute;\r\n    content: '';\r\n}\r\n\r\n\r\n:root{\r\n    font-size: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\nbody{\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n \r\n}\r\n`\r\nconst Layout = styled.div`\r\n\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst layout = props =>\r\n    (\r\n        <ThemeProvider theme={theme}>\r\n            <>\r\n                <GlobalStyle />\r\n                <Layout>{props.children}</Layout>\r\n            </>\r\n        </ThemeProvider>\r\n\r\n    )\r\n\r\nexport default layout;","import styled from 'styled-components';\r\n\r\nconst StylesForAllParts = styled.div`\r\n    position: absolute;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    transition: .8s;\r\n    &::after,&::before{\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n    }\r\n`\r\n\r\nexport const GallowsBasis = styled(StylesForAllParts)`\r\n    top: 95%;\r\n    height: .3rem;\r\n    left: 5%;\r\n    width: 70%;\r\n`\r\n\r\nexport const GallowBranch = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    bottom: 5%;\r\n    left: 5%;\r\n    width: .4rem;\r\n    &::after{\r\n        top: 0%;\r\n        height: 4rem;\r\n        left: 300%;\r\n        width: 100%;\r\n        transform: rotate(35deg);\r\n    }\r\n`\r\n\r\nexport const GallowTopBranch = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    height: .4rem;\r\n    left: 5%;\r\n    right: 50%;\r\n`\r\n\r\nexport const GallowsNoose = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    bottom: 82.5%;\r\n    left: 50%;\r\n    width: .4rem;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 6 ? '1' : '0'};\r\n`\r\n\r\nexport const Head = styled(StylesForAllParts)`\r\n    top: 17.5%;\r\n    height: 3.5rem;\r\n    left: 50%;\r\n    width: 3.5rem;\r\n    transform: translate(-50%);\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 5 ? '1' : '0'};\r\n    border: .1rem solid white;\r\n    border-radius: 50%;\r\n\r\n    background-color: transparent;\r\n    ::after,::before{\r\n        top: 20%;\r\n        height: 10%;\r\n        width: 10%;\r\n        border-radius: 50%;\r\n    }\r\n    ::after{\r\n        left: 25%;\r\n    \r\n    }\r\n    ::before{\r\n        right: 25%;\r\n    }\r\n`\r\n\r\nexport const Body = styled(StylesForAllParts)`\r\n    top: calc(17.5% + 3.5rem);\r\n    height: 6rem;\r\n    left: 50%;\r\n    width: .3rem;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 4 ? '1' : '0'};\r\n`\r\n\r\nconst StylesForArms = styled(StylesForAllParts)`\r\n   top: 40%;\r\n   height: .2rem;\r\n   width: 3rem;\r\n   border-radius: 30%;\r\n`\r\n\r\n\r\nconst StylesForLegs = styled(StylesForAllParts)`\r\n    top: calc(17.5% + 3.5rem + 5.8rem);\r\n    width: 3.5rem;\r\n    height: .2rem;\r\n    border-radius: 30%;\r\n\r\n`\r\n\r\nexport const LeftArm = styled(StylesForArms)`\r\n    left: 50%;\r\n    transform: translateX(-100%) rotate(-30deg);\r\n    transform-origin: top right;\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 3 ? '1' : '0'};\r\n\r\n`\r\n\r\nexport const RightArm = styled(StylesForArms)`\r\n    right: 50%;\r\n    transform: translateX(100%) rotate(30deg);\r\n    transform-origin: top left;\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 2 ? '1' : '0'};\r\n`\r\n\r\nexport const LeftLeg = styled(StylesForLegs)`\r\n    left: 50%;\r\n    transform: translateX(-100%) rotate(-50deg);\r\n    transform-origin: top right;\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 1 ? '1' : '0'};\r\n\r\n`\r\n\r\nexport const RightLeg = styled(StylesForLegs)`\r\n    right: 50%;\r\n    transform: translateX(100%) rotate(50deg);\r\n    transform-origin: top left;\r\n    opacity: ${({ mistakesLeft }) => mistakesLeft <= 0 ? '1' : '0'};\r\n\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Body, Head, LeftArm, LeftLeg, RightArm, GallowsBasis, RightLeg, GallowBranch, GallowTopBranch, GallowsNoose } from './HangmanParts/HangmanParts';\r\n\r\nconst HangmanDrawingWrapper = styled.div`\r\n    flex-basis: 50%;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n`\r\n\r\nconst hangmanDrawingSection = ({ mistakesLeft }) => (\r\n    <HangmanDrawingWrapper>\r\n\r\n        <GallowsBasis />\r\n        <GallowBranch />\r\n        <GallowTopBranch />\r\n        <GallowsNoose mistakesLeft={mistakesLeft} />\r\n        <Head mistakesLeft={mistakesLeft} />\r\n        <Body mistakesLeft={mistakesLeft} />\r\n        <LeftArm mistakesLeft={mistakesLeft} />\r\n        <LeftLeg mistakesLeft={mistakesLeft} />\r\n        <RightArm mistakesLeft={mistakesLeft} />\r\n        <RightLeg mistakesLeft={mistakesLeft} />\r\n\r\n    </HangmanDrawingWrapper>\r\n)\r\nexport default hangmanDrawingSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GameInfoWrapper = styled.div`\r\n    flex-basis: 50%;\r\n    background-color: ${({ theme }) => theme.colors.gray};\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-end;\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\nspan{\r\n    display: block;\r\n}\r\n\r\n`\r\nconst Info = styled.div`\r\n    flex-basis: 92.5%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;\r\n    align-items: flex-end;\r\n`\r\n\r\nconst Category = styled.p`\r\n    flex-basis: 100%;\r\n    height: 25%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: space-around;\r\n    font-weight: 700;\r\n`\r\nconst Hint = styled.p`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: space-around;\r\n    height: 40%;\r\n    font-weight: 700;\r\n`\r\n\r\nconst MistakesLeft = styled.div`\r\n    flex-basis: 40%;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 2rem;\r\n    margin-bottom: .1rem;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n    border-radius: 100px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n    &::before{\r\n        top: 50%;\r\n        transform: translate(-90%, -50%);\r\n        left: 0;\r\n        width: 5rem;\r\n        height: 1rem;\r\n        border-radius: 20%;\r\n        background-color: ${({ theme }) => theme.colors.deep};\r\n    }\r\n`\r\n\r\n\r\nconst TimeToNextLetterWrapper = styled.div`\r\n    flex-basis: 40%;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: .1rem;\r\n    font-size: 2rem;\r\n    background-color: ${({ theme }) => theme.colors.black};\r\n    border-radius: 100px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n    &::before{\r\n        top: 100%;\r\n        transform: translate(-50%, -10%);\r\n        left: 50%;\r\n        width: 1rem;\r\n        height: 3rem;\r\n        border-radius: 20%;\r\n        background-color:${({ theme }) => theme.colors.black};\r\n    }\r\n`\r\n\r\nconst GameInfoSection = ({ timeToNextLetter, mistakesLeft }) => (\r\n    <GameInfoWrapper>\r\n        <Info>\r\n            <Category>Category <span>Famous Buildings </span> </Category>\r\n            <Hint>Hint <span> One of the highest buildings in Europe</span></Hint>\r\n            <MistakesLeft>{mistakesLeft}</MistakesLeft>\r\n            <TimeToNextLetterWrapper>{timeToNextLetter} </TimeToNextLetterWrapper>\r\n        </Info>\r\n    </GameInfoWrapper>\r\n)\r\n\r\nexport default GameInfoSection;","import React from 'react';\r\nimport HangmanDrawing from './HangmanDrawing/HangmanDrawing';\r\nimport GameInfo from './GameInfo/GameInfo';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DrawingAndInfoSectionWrapper = styled.div`\r\n    flex-basis: 35%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    overflow: hidden;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    &::after{\r\n        top: -10%;\r\n        left: 35%;\r\n        right: 47%;\r\n        height: 110%;\r\n        transform: rotate(5deg);\r\n        background-color:${({ theme }) => theme.colors.deep};\r\n    }\r\n`\r\nconst DrawingAndInfoSection = ({ timeToNextLetter, mistakesLeft }) => (\r\n\r\n    <DrawingAndInfoSectionWrapper>\r\n        <HangmanDrawing\r\n            mistakesLeft={mistakesLeft}\r\n        />\r\n        <GameInfo\r\n            mistakesLeft={mistakesLeft}\r\n            timeToNextLetter={timeToNextLetter}\r\n        />\r\n    </DrawingAndInfoSectionWrapper>\r\n)\r\n\r\nexport default DrawingAndInfoSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LetterWrapper = styled.span`\r\n    display: block;\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    font-size: 2rem;\r\n    margin-left: 1.4rem;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n`\r\n\r\nconst letter = ({ letterObj }) => (\r\n\r\n    <LetterWrapper>\r\n        {letterObj.isLetterShowed ? letterObj.letter : \"__\"}\r\n    </LetterWrapper>\r\n\r\n);\r\n\r\n\r\nexport default letter;","import React from 'react';\r\nimport Letter from './Letter/Letter';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\n\r\n    flex-basis: 90%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: space-around;\r\n    text-align: center;\r\n\r\n`\r\n\r\nconst BreakLine = styled.div`\r\n\r\n    flex-basis: 100%;\r\n    height: 1%;\r\n\r\n`\r\n\r\n\r\n\r\nconst letters = ({ phraseToGuess }) => {\r\n\r\n    const letters = phraseToGuess.map(letterObj => {\r\n        let letters;\r\n        if (letterObj.letter !== \" \") {\r\n            letters = <Letter\r\n                key={letterObj.id}\r\n                letterObj={letterObj} />\r\n        }\r\n        else if (letterObj.letter === \" \") {\r\n            letters = <BreakLine\r\n                key={letterObj.id} />\r\n        }\r\n        return letters;\r\n    })\r\n\r\n    return (\r\n\r\n        <LettersWrapper>{letters}</LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default letters;","import React from 'react';\r\nimport Letters from './Letters/Letters';\r\nimport styled from 'styled-components';\r\n\r\nconst PhraseToGuessWrapper = styled.div`\r\n    flex-basis: 25%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-around;\r\n    background-color: ${({ theme }) => theme.colors.black};\r\n`\r\n\r\nconst PhraseToGuess = ({ phraseToGuess }) => (\r\n\r\n    <PhraseToGuessWrapper>\r\n\r\n        <Letters phraseToGuess={phraseToGuess} />\r\n\r\n    </PhraseToGuessWrapper>\r\n\r\n)\r\n\r\nexport default PhraseToGuess;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Letter = styled.span`\r\n\r\n    flex-basis: 10%;\r\n    height: 15%;\r\n    margin: .5rem;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    font-weight: 400;\r\n    transform: ${({ isClicked }) => isClicked && 'translateY(.3rem)'};  \r\n    box-shadow:${({ isClicked, isHit, theme }) =>\r\n        isHit ? `0 .5rem 0 0 ${theme.colors.green}`\r\n            : isClicked ? `0 .5rem  0 0 ${theme.colors.red}`\r\n                : `0 0 .1rem 0 ${theme.colors.gray}`};\r\n    background-color: ${({ isClicked, theme }) => isClicked ? theme.colors.deep : theme.colors.black};\r\n    opacity: ${({ isClicked }) => isClicked ? '.8' : '1'};\r\n    transition-duration: .1s;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    cursor: pointer;\r\n\r\n\r\n`\r\n\r\nconst letterToClick = ({ letter, clickLetter, isHit, isClicked }) => (\r\n\r\n    <Letter\r\n        isClicked={isClicked}\r\n        onClick={clickLetter}\r\n        isHit={isHit}\r\n    >\r\n        {letter}\r\n    </Letter>\r\n)\r\n\r\nexport default letterToClick;","import React from 'react';\r\nimport LetterToClick from './LetterToClick/LetterToClick';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\n\r\n    flex-basis: 40%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n\r\n`\r\n\r\nconst LettersToClick = ({ lettersToClick, clickLetter }) => {\r\n\r\n    const letters = lettersToClick.map(letterToClick => (\r\n        <LetterToClick\r\n            clickLetter={(e, key) => clickLetter(e, key)}\r\n            isClicked={letterToClick.isClicked}\r\n            key={letterToClick.letter}\r\n            isHit={letterToClick.isHit}\r\n            letter={letterToClick.letter.toUpperCase()} />\r\n    ))\r\n\r\n    return (\r\n        <LettersWrapper>\r\n            {letters}\r\n        </LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default LettersToClick;","import React, { Component } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport DrawingAndInfoSectionWrapper from '../components/DrawingAndInfoSection/DrawingAndInfoSection';\nimport PhraseToGuessSection from '../components/PhraseToGuessSection/PhraseToGuessSection';\nimport LettersToClickSection from '../components/LettersToClickSection/LettersToClickSection';\n\n\n// const API = ' https://hangman-239ba.firebaseio.com/.json';\n\nclass App extends Component {\n\n  state = {\n    phraseToGuess: [],          //phrase comes from API in componentDidMount\n    lettersToClick: [           //letters in layout, possible to click or press (keyboard)\n      { letter: 'a', isClicked: false, isHit: false },\n      { letter: 'b', isClicked: false, isHit: false },\n      { letter: 'c', isClicked: false, isHit: false },\n      { letter: 'd', isClicked: false, isHit: false },\n      { letter: 'e', isClicked: false, isHit: false },\n      { letter: 'f', isClicked: false, isHit: false },\n      { letter: 'g', isClicked: false, isHit: false },\n      { letter: 'h', isClicked: false, isHit: false },\n      { letter: 'i', isClicked: false, isHit: false },\n      { letter: 'j', isClicked: false, isHit: false },\n      { letter: 'k', isClicked: false, isHit: false },\n      { letter: 'l', isClicked: false, isHit: false },\n      { letter: 'm', isClicked: false, isHit: false },\n      { letter: 'n', isClicked: false, isHit: false },\n      { letter: 'o', isClicked: false, isHit: false },\n      { letter: 'p', isClicked: false, isHit: false },\n      { letter: 'q', isClicked: false, isHit: false },\n      { letter: 'r', isClicked: false, isHit: false },\n      { letter: 's', isClicked: false, isHit: false },\n      { letter: 't', isClicked: false, isHit: false },\n      { letter: 'u', isClicked: false, isHit: false },\n      { letter: 'v', isClicked: false, isHit: false },\n      { letter: 'w', isClicked: false, isHit: false },\n      { letter: 'y', isClicked: false, isHit: false },\n      { letter: 'x', isClicked: false, isHit: false },\n      { letter: 'z', isClicked: false, isHit: false },\n    ],\n    timeToNextLetter: 5,        //if time === 0 => random letter is clicked \n    mistakesLeft: 7,            // if we select wrong letter => mistakes--. If mistakes ===0 => game is over\n  }\n\n  startTimeToNextLetterHandler = () => {\n    this.ID = setInterval(() => {\n      this.setState({ timeToNextLetter: this.state.timeToNextLetter - 1 })\n    }, 1000);\n  }\n\n  isSelectedLetterInPhraseHandler = (selectedLetterObj) => {\n    const { phraseToGuess } = this.state\n    const letterInPhrase = phraseToGuess.find(letterObj => letterObj.letter === selectedLetterObj.letter.toUpperCase())\n    const selectedLetter = selectedLetterObj.letter.toUpperCase()\n    selectedLetterObj.isClicked = true;\n    if (letterInPhrase) {\n      selectedLetterObj.isHit = true;\n      phraseToGuess.forEach(letterObj => {\n        if (letterObj.letter === selectedLetter) {\n          letterObj.isLetterShowed = true;\n        }\n      })\n    }\n    else {\n      this.setState({ mistakesLeft: this.state.mistakesLeft - 1 })\n    }\n  }\n\n  clickOrPressKeyLetterHandler = (e, key) => {\n    if (this.state.timeToNextLetter === 0) return;\n    const { lettersToClick, phraseToGuess, } = this.state\n    const clickedLetter = e.target.textContent\n    let pressedOrClickedLetter;\n\n    if (key) {\n      pressedOrClickedLetter = key.toUpperCase()\n    }\n    else if (clickedLetter) {\n      pressedOrClickedLetter = e.target.textContent;\n    }\n\n    const index = lettersToClick.findIndex(letter => letter.letter.toUpperCase() === pressedOrClickedLetter);\n\n    if (index === -1 || lettersToClick[index].isClicked) return\n\n    const selectedLetterObj = lettersToClick[index]\n    this.isSelectedLetterInPhraseHandler(selectedLetterObj)\n    clearInterval(this.ID)\n    this.setState({ phraseToGuess, lettersToClick, timeToNextLetter: 5 });\n    this.startTimeToNextLetterHandler();\n\n  }\n\n  //autoclick letter\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.timeToNextLetter !== this.state.timeToNextLetter) {\n      const { phraseToGuess } = this.state\n      const lettersToClick = prevState.lettersToClick;\n\n      if (phraseToGuess.filter(phrase => !phrase.isLetterShowed).length === 0) return; // if the phrase is guessed\n      if (lettersToClick.filter(letterObj => !letterObj.isClicked).length === 0) return; // if all letters are clicked\n\n      const filteredLetters = lettersToClick.filter(letterToClick => !letterToClick.isClicked);\n      const random = Math.floor(Math.random() * filteredLetters.length);\n      //this is random clicked letter\n      const autoClicked = filteredLetters[random];\n\n      if (this.state.timeToNextLetter === 0) {\n        this.isSelectedLetterInPhraseHandler(autoClicked);\n        this.setState({ phraseToGuess, lettersToClick });\n        clearInterval(this.ID);\n        setTimeout(() => {\n          this.setState({ timeToNextLetter: 5 })\n          this.startTimeToNextLetterHandler();\n        }, 1000)\n      }\n\n    }\n\n  }\n\n  componentDidMount() {\n\n    // this.startTimeToNextLetterHandler()\n    document.addEventListener('keypress', (e) => this.clickOrPressKeyLetterHandler(e, e.key));\n    const fetchedPhrase = 'The Eiffel Tower';\n    const { phraseToGuess } = this.state;\n    [...fetchedPhrase].map((phrase, index) => {\n      return phraseToGuess.push({\n        letter: phrase.toUpperCase(),\n        id: index,\n        isLetterShowed: false,\n      })\n    })\n    phraseToGuess.filter(letterObj => (\n      letterObj.letter === \" \" || letterObj.letter === \",\" || letterObj.letter === \"-\" ? letterObj.isLetterShowed = true : letterObj.isLetterShowed = false)\n    )\n    this.setState({ phraseToGuess })\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.clickOrPressKeyLetterHandler)\n  }\n\n  render() {\n    console.log((this.state.phraseToGuess.filter(phrase => !phrase.isLetterShowed)))\n    const {\n      phraseToGuess,\n      lettersToClick,\n      timeToNextLetter,\n      mistakesLeft\n    } = this.state\n\n    return (\n\n      <Layout>\n        <DrawingAndInfoSectionWrapper\n          mistakesLeft={mistakesLeft}\n          timeToNextLetter={timeToNextLetter}\n        />\n        <PhraseToGuessSection\n          phraseToGuess={phraseToGuess}\n        />\n        <LettersToClickSection\n          lettersToClick={lettersToClick}\n          clickLetter={this.clickOrPressKeyLetterHandler}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}