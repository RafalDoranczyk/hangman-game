{"version":3,"sources":["styled.d.ts","Layout/Layout.tsx","components/StartPage/style.tsx","components/StartGameButton/style.tsx","components/StartGameButton/StartGameButton.tsx","components/StartPage/StartPage.tsx","components/InGamePage/styles.tsx","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/styles.tsx","components/Hangman/style.tsx","components/Hangman/Hangman.tsx","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing.tsx","components/InGamePage/DrawingAndInfoSection/GameInfo/styles.tsx","components/InGamePage/DrawingAndInfoSection/GameInfo/GameInfo.tsx","components/InGamePage/DrawingAndInfoSection/styles.tsx","components/InGamePage/DrawingAndInfoSection/DrawingAndInfoSection.tsx","components/InGamePage/PhraseToGuessSection/Letters/Letter/styles.tsx","components/InGamePage/PhraseToGuessSection/Letters/Letter/Letter.tsx","components/InGamePage/PhraseToGuessSection/Letters/styles.tsx","components/InGamePage/PhraseToGuessSection/Letters/Letters.tsx","components/InGamePage/PhraseToGuessSection/styles.tsx","components/InGamePage/PhraseToGuessSection/PhraseToGuessSection.tsx","components/InGamePage/LettersToClickSection/style.tsx","components/InGamePage/LettersToClickSection/LetterToClick/style.tsx","components/InGamePage/LettersToClickSection/LetterToClick/LetterToClick.tsx","components/InGamePage/LettersToClickSection/LettersToClickSection.tsx","components/InGamePage/InGamePage.tsx","components/EndGamePage/styles.tsx","hoc/Firebase/context.js","components/EndGamePage/EndGamePage.tsx","hoc/Firebase/Firebase.js","hoc/Firebase/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["myTheme","device","iPad","colors","man","gallow","GlobalStyle","createGlobalStyle","_templateObject","LayoutWrapper","styled","div","_templateObject2","props","theme","Layout","_ref","children","react_default","a","createElement","styled_components_browser_esm","Fragment","StartPageWrapper","style_templateObject","isGameInProgress","isGameEnded","_ref2","_ref3","style_templateObject2","StartGameButtonStyle","button","css","StartGameButton_style_templateObject","StartGameButton","isLoading","onClick","react","disabled","StartPage","startGame","components_StartGameButton_StartGameButton","InGamePageWrapper","styles_templateObject","_ref4","_ref5","HangmanDrawingWrapper","HangmanDrawing_styles_templateObject","HangmanWrapper","styles_templateObject2","StylesForAllParts","font","Hangman_style_templateObject","GallowParts","Hangman_style_templateObject2","ManParts","_templateObject3","GallowsBasis","_templateObject4","GallowBranch","_templateObject5","GallowTopBranch","_templateObject6","GallowsNoose","_templateObject7","mistakesLeft","Head","_templateObject8","_ref6","Body","_templateObject9","_ref7","StylesForArms","_templateObject10","RightArm","_templateObject11","_ref8","LeftArm","_templateObject12","_ref9","StylesForLegs","_templateObject13","LeftLeg","_templateObject14","_ref10","RightLeg","_templateObject15","_ref11","Hangman","HangmanDrawingSection","styles_HangmanWrapper","components_Hangman_Hangman","GameInfoWrapper","GameInfo_styles_templateObject","CategoryTitle","p","GameInfo_styles_templateObject2","HintTitle","styles_templateObject3","Category","span","styles_templateObject4","Hint","styles_templateObject5","BoxWrapper","styles_templateObject6","Box","styles_templateObject7","MistakesLeft","styles_templateObject8","TimeToNextLetter","styles_templateObject9","GameInfoSection","timeToNextLetter","category","hint","DrawingAndInfoSectionWrapper","DrawingAndInfoSection_styles_templateObject","DrawingAndInfoSection","HangmanDrawing","GameInfo","LetterWrapper","isGameWon","Letter_styles_templateObject","Letter","isLetterShowed","letter","LettersWrapper","Letters_styles_templateObject","BreakLine","Letters_styles_templateObject2","Letters","phraseToGuess","letters","map","letterObj","Letters_Letter_Letter","key","id","PhraseToGuessWrapper","PhraseToGuessSection_styles_templateObject","PhraseToGuess","PhraseToGuessSection_Letters_Letters","LettersToClickSection_style_templateObject","isClicked","isHit","LetterToClick_style_templateObject","LetterToClick","clickLetter","style_Letter","LettersToClick","lettersToClick","letterToClick","LettersToClickSection_LetterToClick_LetterToClick","_clickLetter","_x","apply","this","arguments","toString","e","toUpperCase","style_LettersWrapper","InGamePage","InGamePage_DrawingAndInfoSection_DrawingAndInfoSection","PhraseToGuessSection","LettersToClickSection","Component","EndGameWrapper","EndGamePage_styles_templateObject","Title","EndGamePage_styles_templateObject2","Subtitle","EndGamePage_styles_templateObject3","TitbitOrPhrase","EndGamePage_styles_templateObject4","EndGamePage","titbit","guessedPhrase","FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","Object","classCallCheck","app","initializeApp","db","database","TIME_TO_NEXT_LETTER","initialState","allPhrasesFromApi","phraseInfo","App","state","fetchAllPhrasesHandler","_this","setState","firebase","ref","once","snapshot","entries","val","obj","startGameHandler","randomPhrase","giveRandomPhraseHandler","giveRandom","i","Math","floor","random","assertThisInitialized","randomCategory","length","allQuestionsInThisCategory","randomQuestion","phrase","_randomQuestion$","toConsumableArray","index","clickOrPressKeyHandler","keydownLetter","_this$state","console","log","keyPressedOrClickedLetter","target","textContent","findIndex","selectedLetterObj","checkIfLetterIsInPhraseHandler","autoClickLetter","_assertThisInitialize2","notClickedLetters","filter","startTimeToNextLetterHandler","_this$state2","slicedPhrase","slice","slicedLettersToClick","letterToClickIndex","letterInPhrase","find","forEach","isPhraseGuessed","checkIfAllLettersAreShowed","clearInterval","ID","setInterval","includes","_this2","document","addEventListener","prevProps","prevState","_this$state3","removeEventListener","_this$state4","src_Layout_Layout","components_StartPage_StartPage","components_InGamePage_InGamePage","components_EndGamePage_EndGamePage","withFirebase","Consumer","assign","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","value","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oPAmBeA,EAJe,CAC5BC,OAAQ,CAAEC,KAAM,SAChBC,OAAQ,CAAEC,IAAK,UAAWC,OAAQ,uoBCZpC,IAAMC,EAAcC,YAAHC,KAsBXC,EAAgBC,IAAOC,IAAVC,IASI,SAAAC,GAAK,OAAIA,EAAMC,MAAMb,OAAOC,OAepCa,EATA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeP,MAAOd,GACpBkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAG,SAAA,KACEJ,EAAAC,EAAAC,cAACd,EAAD,MACAY,EAAAC,EAAAC,cAACX,EAAD,KAAgBQ,olBCvCf,IAAMM,EAAmBb,IAAOC,IAAVa,IAGhB,SAAAR,GAAA,IAAGS,EAAHT,EAAGS,iBAAkBC,EAArBV,EAAqBU,YAArB,OACTD,GAAoBC,EAAc,IAAM,KAKQ,SAAAC,GAAA,OAAAA,EAAGb,MAC3Cb,OAAOC,MAGgC,SAAA0B,GAAA,OAAAA,EAAGd,MAC1Cb,OAAOC,OAKWQ,IAAOC,IAAVkB,kYCpBpB,IAAMC,EAAuBpB,IAAOqB,OACzC,SAAAf,GAAA,IAAGU,EAAHV,EAAGU,YAAH,OAAqBM,YAApBC,KACcP,GAAe,YAGdA,GAAe,sBCoBlBQ,EAtB2B,SAAAlB,GAIpC,IAHJmB,EAGInB,EAHJmB,UACAC,EAEIpB,EAFJoB,QACAV,EACIV,EADJU,YAEA,OACEW,EAAA,cAACP,EAAD,CACEJ,YAAaA,EACbY,SAAUH,EACVC,QAASA,GAERD,EAAY,aAAe,gBCkBnBI,EA1BqB,SAAAvB,GAK9B,IAJJS,EAIIT,EAJJS,iBACAC,EAGIV,EAHJU,YACAS,EAEInB,EAFJmB,UACAK,EACIxB,EADJwB,UAEA,OACEtB,EAAAC,EAAAC,cAACG,EAAD,CACEG,YAAaA,EACbD,iBAAkBA,GAElBP,EAAAC,EAAAC,cAACqB,EAAD,CACEf,YAAaA,EACbS,UAAWA,EACXC,QAASI,8fCnBV,IAAME,EAAoBhC,IAAOC,IAAVgC,IAUf,SAAA3B,GAAA,IAAGS,EAAHT,EAAGS,iBAAkBC,EAArBV,EAAqBU,YAArB,OACXD,GAAoBC,EAAc,WAAa,YACtC,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,iBAAkBC,EAArBC,EAAqBD,YAArB,OACTD,GAAoBC,EAAc,IAAM,KAC5B,SAAAE,GAAA,OAAAA,EAAGF,YACD,yBAA2B,sBAGM,SAAAkB,GAAA,OAAAA,EAAG9B,MAC1Cb,OAAOC,MAIiC,SAAA2C,GAAA,OAAAA,EAAG/B,MAC3Cb,OAAOC,oiBC7BZ,IAAM4C,EAAwBpC,IAAOC,IAAVoC,KAQrBC,EAAiBtC,IAAOC,IAAVsC,IAOyB,SAAApC,GAAK,OACnDA,EAAMC,MAAMb,OAAOC,MAG0B,SAAAW,GAAK,OAClDA,EAAMC,MAAMb,OAAOC,mxFCVzB,IAAMgD,EAAoBxC,IAAOC,IAC/B,SAAAK,GAAA,IAAGmC,EAAHnC,EAAGmC,KAAH,OAAcnB,YAAboB,IAEcD,GAAc,OAGZA,GAAc,UAK3BE,EAAc3C,YAAOwC,EAAPxC,CAClB,SAAAiB,GAAA,IAAGb,EAAHa,EAAGb,MAAH,OAAekB,YAAdsB,IACqBxC,EAAMX,OAAOE,OAGXS,EAAMX,OAAOE,UAKjCkD,EAAW7C,YAAOwC,EAAPxC,CACf,SAAAkB,GAAA,IAAGd,EAAHc,EAAGd,MAAH,OAAekB,YAAfwB,IACsB1C,EAAMX,OAAOC,IAGXU,EAAMX,OAAOC,OAK1BqD,GAAe/C,YAAO2C,EAAP3C,CAAHgD,KAMZC,GAAejD,YAAO2C,EAAP3C,CAAHkD,KAMZC,GAAkBnD,YAAO2C,EAAP3C,CAAHoD,KAMfC,GAAerD,YAAO2C,EAAP3C,CAAHsD,IAKZ,SAAApB,GAAA,OAAAA,EAAGqB,cAAoC,EAAI,IAAM,MAEjDC,GAAOxD,YAAO6C,EAAP7C,CAAHyD,IAQK,SAAAtB,GAAA,OAAAA,EAAG/B,MAAkBX,OAAOC,KACrC,SAAAgE,GAAA,OAAAA,EAAGH,cAAoC,EAAI,IAAM,MAejDI,GAAO3D,YAAO6C,EAAP7C,CAAH4D,IAMJ,SAAAC,GAAA,OAAAA,EAAGN,cAAoC,EAAI,IAAM,MAEjDO,GAAgB9D,YAAO6C,EAAP7C,CAAH+D,KAObC,GAAWhE,YAAO8D,GAAP9D,CAAHiE,IAIR,SAAAC,GAAA,OAAAA,EAAGX,cAAoC,EAAI,IAAM,MAEjDY,GAAUnE,YAAO8D,GAAP9D,CAAHoE,IAIP,SAAAC,GAAA,OAAAA,EAAGd,cAAoC,EAAI,IAAM,MAEjDe,GAAgBtE,YAAO6C,EAAP7C,CAAHuE,KAObC,GAAUxE,YAAOsE,GAAPtE,CAAHyE,IAGP,SAAAC,GAAA,OAAAA,EAAGnB,cAAoC,EAAI,IAAM,MAEjDoB,GAAW3E,YAAOsE,GAAPtE,CAAH4E,IAIR,SAAAC,GAAA,OAAAA,EAAGtB,cAAoC,EAAI,IAAM,MC9G/CuB,GArBkB,SAAAxE,GAAsB,IAAnBiD,EAAmBjD,EAAnBiD,aAClC,OACE/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAG,SAAA,KACEJ,EAAAC,EAAAC,cAACqC,GAAD,CAAgBQ,aAAcA,IAC9B/C,EAAAC,EAAAC,cAACuC,GAAD,CAAgBM,aAAcA,IAC9B/C,EAAAC,EAAAC,cAACyC,GAAD,CAAmBI,aAAcA,IACjC/C,EAAAC,EAAAC,cAAC2C,GAAD,CAAgBE,aAAcA,IAC9B/C,EAAAC,EAAAC,cAAC8C,GAAD,CAAQD,aAAcA,IACtB/C,EAAAC,EAAAC,cAACiD,GAAD,CAAQJ,aAAcA,IACtB/C,EAAAC,EAAAC,cAACyD,GAAD,CAAWZ,aAAcA,IACzB/C,EAAAC,EAAAC,cAAC8D,GAAD,CAAWjB,aAAcA,IACzB/C,EAAAC,EAAAC,cAACsD,GAAD,CAAYT,aAAcA,IAC1B/C,EAAAC,EAAAC,cAACiE,GAAD,CAAYpB,aAAcA,MCKjBwB,GAZgC,SAAAzE,GAAA,IAAGiD,EAAHjD,EAAGiD,aAAH,OAC7C/C,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAACsE,EAAD,KACExE,EAAAC,EAAAC,cAACuE,GAAD,CAAS1B,aAAcA,6kDCXtB,IAAM2B,GAAkBlF,IAAOC,IAAVkF,MAiBfC,GAAgBpF,IAAOqF,EAAVC,MAGbC,GAAYvF,IAAOqF,EAAVG,MAGTC,GAAWzF,IAAO0F,KAAVC,MAGRC,GAAO5F,IAAO0F,KAAVG,MAGJC,GAAa9F,IAAOC,IAAV8F,MAQjBC,GAAMhG,IAAOC,IAAVgG,MAqBIC,GAAelG,YAAOgG,GAAPhG,CAAHmG,MAKZC,GAAmBpG,YAAOgG,GAAPhG,CAAHqG,MCzBdC,GA5B0B,SAAAhG,GAKnC,IAJJiG,EAIIjG,EAJJiG,iBACAhD,EAGIjD,EAHJiD,aACAiD,EAEIlG,EAFJkG,SACAC,EACInG,EADJmG,KAEA,OACEjG,EAAAC,EAAAC,cAACwE,GAAD,KACE1E,EAAAC,EAAAC,cAAC0E,GAAD,iBACA5E,EAAAC,EAAAC,cAAC+E,GAAD,KAAae,GACbhG,EAAAC,EAAAC,cAAC6E,GAAD,aACA/E,EAAAC,EAAAC,cAACkF,GAAD,KAASa,GAETjG,EAAAC,EAAAC,cAACoF,GAAD,KACEtF,EAAAC,EAAAC,cAACwF,GAAD,KAAiB3C,GACjB/C,EAAAC,EAAAC,cAAC0F,GAAD,KAAqBG,EAArB,wTCxBD,IAAMG,GAA+B1G,IAAOC,IAAV0G,MCqC1BC,GAzBgC,SAAAtG,GAKzC,IAJJiG,EAIIjG,EAJJiG,iBACAhD,EAGIjD,EAHJiD,aACAiD,EAEIlG,EAFJkG,SACAC,EACInG,EADJmG,KAEA,OACEjG,EAAAC,EAAAC,cAACgG,GAAD,KACElG,EAAAC,EAAAC,cAACmG,GAAD,CAAgBtD,aAAcA,IAC9B/C,EAAAC,EAAAC,cAACoG,GAAD,CACEN,SAAUA,EACVC,KAAMA,EACNlD,aAAcA,EACdgD,iBAAkBA,iRCrBnB,IAAMQ,GAAgB/G,IAAO0F,KAClC,SAAApF,GAAA,IAAG0G,EAAH1G,EAAG0G,UAAH,OAAmB1F,YAAlB2F,KAMUD,EAAY,UAAY,aCStBE,GAZiB,SAAA5G,GAAA,IAAG6G,EAAH7G,EAAG6G,eAAgBC,EAAnB9G,EAAmB8G,OAAQJ,EAA3B1G,EAA2B0G,UAA3B,OAC9BxG,EAAAC,EAAAC,cAACqG,GAAD,CAAiBC,UAAWA,GACzBG,EAAiBC,EAAS,sWCVxB,IAAMC,GAAiBrH,IAAOC,IAAVqH,MAUdC,GAAYvH,IAAOC,IAAVuH,MCwBPC,GA1BkB,SAAAnH,GAAkC,IAA/BoH,EAA+BpH,EAA/BoH,cAAeV,EAAgB1G,EAAhB0G,UAC3CW,EAAUD,EAAcE,IAAI,SAAAC,GAChC,IAAIF,EAaJ,MAZyB,MAArBE,EAAUT,OACZO,EACEnH,EAAAC,EAAAC,cAACoH,GAAD,CACEC,IAAKF,EAAUG,GACfb,eAAgBU,EAAUV,eAC1BC,OAAQS,EAAUT,OAClBJ,UAAWA,IAGe,MAArBa,EAAUT,SACnBO,EAAUnH,EAAAC,EAAAC,cAAC6G,GAAD,CAAaQ,IAAKF,EAAUG,MAEjCL,IAGT,OAAOnH,EAAAC,EAAAC,cAAC2G,GAAD,KAAmBM,wUC1BrB,IAAMM,GAAuBjI,IAAOC,IAAViI,MCmBlBC,GAXwB,SAAA7H,GAAA,IAAGoH,EAAHpH,EAAGoH,cAAeV,EAAlB1G,EAAkB0G,UAAlB,OACrCxG,EAAAC,EAAAC,cAACuH,GAAD,KACEzH,EAAAC,EAAAC,cAAC0H,GAAD,CAASpB,UAAWA,EAAWU,cAAeA,kgBCV3C,IAAML,GAAiBrH,IAAOC,IAAVoI,KAcwB,SAAA/H,GAAA,OAAAA,EAAGF,MAC1Cb,OAAOC,MAIiC,SAAAyB,GAAA,OAAAA,EAAGb,MAC3Cb,OAAOC,mbCfZ,IAAM0H,GAASlH,IAAO0F,KAC3B,SAAApF,GAAA,IAAGgI,EAAHhI,EAAGgI,UAAWC,EAAdjI,EAAciI,MAAd,OAA0BjH,YAAzBkH,KAUcF,GAAa,aACNC,EAAQ,UAAYD,EAAY,UAAY,QAI/CA,GAAa,sBCMnBG,GAlBwB,SAAAnI,GAAA,IACrC8G,EADqC9G,EACrC8G,OACAsB,EAFqCpI,EAErCoI,YACAH,EAHqCjI,EAGrCiI,MACAD,EAJqChI,EAIrCgI,UAJqC,OAMrC9H,EAAAC,EAAAC,cAACiI,GAAD,CAAUjH,QAASgH,EAAaJ,UAAWA,EAAWC,MAAOA,GAC1DnB,ICUUwB,GAlByB,SAAAtI,GAAqC,IAAlCuI,EAAkCvI,EAAlCuI,eAAgBH,EAAkBpI,EAAlBoI,YACnDf,EAAUkB,EAAejB,IAAI,SAAAkB,GAAa,OAC9CtI,EAAAC,EAAAC,cAACqI,GAAD,CACEL,YAAW,SAAAM,GAAA,SAAAN,EAAAO,GAAA,OAAAD,EAAAE,MAAAC,KAAAC,WAAA,OAAAV,EAAAW,SAAA,kBAAAL,EAAAK,YAAAX,EAAA,CAAE,SAAAY,GAAC,OAAIZ,EAAYY,KAC9BhB,UAAWQ,EAAcR,UACzBP,IAAKe,EAAc1B,OACnBmB,MAAOO,EAAcP,MACrBnB,OAAQ0B,EAAc1B,OAAOmC,kBAIjC,OAAO/I,EAAAC,EAAAC,cAAC8I,GAAD,KAAmB7B,IC8Cb8B,GA/CqB,SAAAnJ,GAW9B,IAVJiD,EAUIjD,EAVJiD,aACAgD,EASIjG,EATJiG,iBACAmB,EAQIpH,EARJoH,cACAlB,EAOIlG,EAPJkG,SACAC,EAMInG,EANJmG,KACAoC,EAKIvI,EALJuI,eACAH,EAIIpI,EAJJoI,YACA3H,EAGIT,EAHJS,iBACAC,EAEIV,EAFJU,YACAgG,EACI1G,EADJ0G,UAEA,OACExG,EAAAC,EAAAC,cAACsB,EAAD,CACEhB,YAAaA,EACbD,iBAAkBA,GAElBP,EAAAC,EAAAC,cAACgJ,GAAD,CACElD,SAAUA,EACVC,KAAMA,EACNlD,aAAcA,EACdgD,iBAAkBA,IAEpB/F,EAAAC,EAAAC,cAACiJ,GAAD,CACEjC,cAAeA,EACfV,UAAWA,IAEbxG,EAAAC,EAAAC,cAACkJ,GAAD,CACEf,eAAgBA,EAChBH,YAAaA,yhCC3Cd,ICFqBmB,GDEfC,GAAiB9J,IAAOC,IACnC,SAAAK,GAAA,IAAGU,EAAHV,EAAGU,YAAH,OAAqBM,YAApByI,KAWc/I,EAAc,gBAAkB,oBAClCA,EAAc,IAAM,IAQkB,SAAAb,GAAK,OAClDA,EAAMC,MAAMb,OAAOC,MAG2B,SAAAW,GAAK,OACnDA,EAAMC,MAAMb,OAAOC,SAMdwK,GAAQhK,IAAOqF,EAAV4E,MAGLC,GAAWlK,IAAOqF,EAAV8E,MAGRC,GAAiBpK,IAAOC,IAAVoK,MEAZC,GAhCsB,SAAAhK,GAM/B,IALJU,EAKIV,EALJU,YACAgG,EAII1G,EAJJ0G,UACAU,EAGIpH,EAHJoH,cACAhG,EAEIpB,EAFJoB,QACA6I,EACIjK,EADJiK,OAEMC,EAAgB9C,EAAcE,IAAI,SAAA3G,GAAA,OAAAA,EAAGmG,SAC3C,OACE5G,EAAAC,EAAAC,cAACoJ,GAAD,CAAkB9I,YAAaA,GAC7BR,EAAAC,EAAAC,cAACsJ,GAAD,KAAUhD,EAAY,aAAH,cACnBxG,EAAAC,EAAAC,cAACwJ,GAAD,KACGlD,EAAY,WAAa,0BAG5BxG,EAAAC,EAAAC,cAAC0J,GAAD,KAAmBpD,EAAYuD,EAASC,GAExChK,EAAAC,EAAAC,cAACqB,EAAD,CAAiBf,YAAaA,EAAaU,QAASA,GAApD,gBD3BA+I,GAAkBC,IAAMC,cAAc,MAS7BF,yBERTG,UAAS,CACbC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,wCCLMC,GDSb,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAiC,GACbG,KAAIC,cAAcZ,IAClBzB,KAAKsC,GAAKF,KAAIG,YEVZC,GAAsB,EA8BtBC,GAAe,CACnBC,kBAAmB,GACnB9K,kBAAkB,EAClBC,aAAa,EACbgG,WAAW,EACXvF,WAAW,EACXiG,cAAe,GACfoE,WAAY,CACVtF,SAAU,GACVC,KAAM,GACN8D,OAAQ,IAEV1B,eAzC+B,CAC/B,CAAEzB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,IAgBxChC,iBAAkBoF,GAClBpI,aAAc,GAGVwI,8MACJC,qBACKJ,MAULK,uBAAyB,WACvBC,EAAKC,SAAS,CAAE1K,WAAW,IAC3ByK,EAAK/L,MAAMiM,SAASX,GAAGY,MAAMC,KAAK,QAAS,SAAAC,GACzC,IAAMV,EAAoBR,OAAOmB,QAAQD,EAASE,OAAO7E,IAAI,SAAA8E,GAAG,OAAIA,IACpER,EAAKC,SAAS,CACZN,oBACApK,WAAW,SAKjBkL,iBAAmB,WACjB,IAAMC,EAAeV,EAAKW,0BAClBnF,EAA8BkF,EAA9BlF,cAAeoE,EAAec,EAAfd,WAEvBI,EAAKC,SAAS,CACZpL,kBAAkB,EAClB2G,gBACAoE,aACA9K,aAAa,EACbgG,WAAW,EACX6B,eAAgB,CACd,CAAEzB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,GACxC,CAAEnB,OAAQ,IAAKkB,WAAW,EAAOC,OAAO,IAE1ChC,iBAAkBoF,GAClBpI,aAAc,OAIlBuJ,WAAa,SAAAC,GAAC,OAAIC,KAAKC,MAAMD,KAAKE,SAAWH,MAE7CF,wBAA0B,WAAM,IACtBhB,EAAsBK,EAAKF,MAA3BH,kBACAiB,EAFsBzB,OAAA8B,EAAA,EAAA9B,QAAA8B,EAAA,EAAA9B,CAAAa,IAEtBY,WAEFM,EACJvB,EAAkBiB,EAAWjB,EAAkBwB,SAE3CC,EAA6BjC,OAAOmB,QAAQY,EAAe,IAAIxF,IACnE,SAAA8E,GAAG,OAAIA,IAEHa,EACJD,EAA2BR,EAAWQ,EAA2BD,SAE7D7G,EAAW4G,EAAe,GAC1BI,EAASD,EAAe,GAdAE,EAeLF,EAAe,GAAhC9G,EAfsBgH,EAetBhH,KAAM8D,EAfgBkD,EAehBlD,OASd,MAAO,CACL7C,cARoB2D,OAAAqC,EAAA,EAAArC,CAAImC,GAAQ5F,IAAI,SAACR,EAAQuG,GAAT,MAAoB,CACxD3F,GAAI2F,EACJvG,OAAQA,EAAOmC,cACfpC,eACa,MAAXC,GAA6B,MAAXA,GAA6B,MAAXA,KAKtC0E,WAAY,CACVtF,WACAC,OACA8D,cAKNqD,uBAAyB,SAACtE,EAAGuE,GAAkB,IAAAC,EAMzC5B,EAAKF,MAJPjL,EAF2C+M,EAE3C/M,iBACAwF,EAH2CuH,EAG3CvH,iBACAvF,EAJ2C8M,EAI3C9M,YACA6H,EAL2CiF,EAK3CjF,eAGF,GADAkF,QAAQC,IAAIH,GACP9M,IAAoBC,GAAoC,IAArBuF,EAAxC,CAGE,IAAI0H,EAEAJ,EACFI,EAA4BJ,EAActE,cACjCD,EAAE4E,OAAOC,cAClBF,EAA4B3E,EAAE4E,OAAOC,aAGvC,IAAMR,EAAQ9E,EAAeuF,UAC3B,SAAA9N,GAAA,OAAAA,EAAG8G,SAAwB6G,IAG7B,IAAe,IAAXN,IAAgB9E,EAAe8E,GAAOrF,UAA1C,CAGE,IAAM+F,EAAoBxF,EAAe8E,GACzC,OAAOzB,EAAKoC,+BAA+BD,QAKjDE,gBAAkB,WAAM,IAAAC,EAAAnD,OAAA8B,EAAA,EAAA9B,QAAA8B,EAAA,EAAA9B,CAAAa,IACdoC,EADcE,EACdF,+BAAgCxB,EADlB0B,EACkB1B,WAElC2B,EADqBvC,EAAKF,MAAxBnD,eACiC6F,OACvC,SAAAtH,GAAM,OAAKA,EAAOkB,YAIpB,OAAOgG,EADgBG,EADR3B,EAAW2B,EAAkBpB,aAuB9CiB,+BAAiC,SAAAD,GAC/BnC,EAAKyC,+BAD+C,IAAAC,EAEV1C,EAAKF,MAAvCtE,EAF4CkH,EAE5ClH,cAAemB,EAF6B+F,EAE7B/F,eACjBgG,EAAenH,EAAcoH,QAC7BC,EAAuBlG,EAAeiG,QAEtCE,EAAqBD,EAAqBX,UAC9C,SAAA1B,GAAG,OAAIA,EAAItF,SAAWiH,EAAkBjH,SAE1C2H,EAAqBC,GAAoB1G,WAAY,EAErD,IAAM2G,EAAiBvH,EAAcwH,KACnC,SAAAxC,GAAG,OAAIA,EAAItF,SAAWiH,EAAkBjH,SAG1C,GAAI6H,EAAgB,CAClBF,EAAqBC,GAAoBzG,OAAQ,EACjDsG,EAAaM,QACX,SAAAzC,GAAG,OACDA,EAAItF,SAAWiH,EAAkBjH,SAAWsF,EAAIvF,gBAAiB,KAErE,IAAMiI,EAAkBlD,EAAKmD,6BACzBD,GACFE,cAAcpD,EAAKqD,IACnBrD,EAAKC,SAAS,CACZpL,kBAAkB,EAClBC,aAAa,EACbgG,WAAW,KAEHoI,GACVlD,EAAKC,SAAS,CACZzE,cAAemH,EACfhG,eAAgBkG,SAGVE,IACVF,EAAqBC,GAAoBzG,OAAQ,EACjD2D,EAAKC,SAAS,CACZ5I,aAAc2I,EAAKF,MAAMzI,aAAe,EACxCgD,iBAAkBoF,SAKxBgD,6BAA+B,WAC7BW,cAAcpD,EAAKqD,IACnBrD,EAAKqD,GAAKC,YAAY,WACpBtD,EAAKC,SAAS,CAAE5F,iBAAkB2F,EAAKF,MAAMzF,iBAAmB,KAC/D,QAGL8I,2BAA6B,WAI3B,OAH0BnD,EAAKF,MAAvBtE,cAC6BE,IAAI,SAAA8E,GAAG,OAAIA,EAAIvF,iBACRsI,UAAS,uFApNnC,IAAAC,EAAAvG,KAClBwG,SAASC,iBAAiB,UAAW,SAAAtG,GAAC,OACpCoG,EAAK9B,uBAAuBtE,EAAGA,EAAEvB,OAEnCoB,KAAK8C,oEAwIY4D,EAAWC,GAAW,IAAAC,EAEI5G,KAAK6C,MAAxCzF,EAF+BwJ,EAE/BxJ,iBAAkBhD,EAFawM,EAEbxM,aAEtBuM,EAAUvM,eAAiBA,GAAiC,IAAjBA,IAC7C+L,cAAcnG,KAAKoG,IACnBpG,KAAKgD,SAAS,CAAEnL,aAAa,EAAMD,kBAAkB,KAIrD+O,EAAUvJ,mBAAqBA,IACT,IAAtBA,IAEA4C,KAAKoF,kBACLpF,KAAKgD,SAAS,CAAE5F,iBAAkBoF,qDA+DpCgE,SAASK,oBAAoB,UAAW7G,KAAKyE,2DAGtC,IAAAqC,EAWH9G,KAAK6C,MATPtE,EAFKuI,EAELvI,cACAmB,EAHKoH,EAGLpH,eACAtC,EAJK0J,EAIL1J,iBACAhD,EALK0M,EAKL1M,aACAxC,EANKkP,EAMLlP,iBACAC,EAPKiP,EAOLjP,YACA8K,EARKmE,EAQLnE,WACA9E,EATKiJ,EASLjJ,UACAvF,EAVKwO,EAULxO,UAGM+E,EAA2BsF,EAA3BtF,SAAUC,EAAiBqF,EAAjBrF,KAAM8D,EAAWuB,EAAXvB,OAExB,OACE/J,EAAAC,EAAAC,cAACwP,EAAD,CAAQnP,iBAAkBA,GACxBP,EAAAC,EAAAC,cAACyP,EAAD,CACEzI,cAAeA,EACf1G,YAAaA,EACbD,iBAAkBA,EAClBe,UAAWqH,KAAKwD,iBAChBlL,UAAWA,IAEbjB,EAAAC,EAAAC,cAAC0P,GAAD,CACEpP,YAAaA,EACbD,iBAAkBA,EAClByF,SAAUA,EACVC,KAAMA,EACNiB,cAAeA,EACfmB,eAAgBA,EAChBtC,iBAAkBA,EAClBhD,aAAcA,EACdmF,YAAaS,KAAKyE,uBAClB5G,UAAWA,IAEbxG,EAAAC,EAAAC,cAAC2P,GAAD,CACE9F,OAAQA,EACR7I,QAASyH,KAAKwD,iBACdjF,cAAeA,EACfV,UAAWA,EACXhG,YAAaA,YA1QL6I,aAiRHyG,IJlUazG,GIkUAkC,GJlUa,SAAA5L,GAAK,OAC5CK,EAAAC,EAAAC,cAAC+J,GAAgB8F,SAAjB,KACG,SAAAnE,GAAQ,OAAI5L,EAAAC,EAAAC,cAACmJ,GAADwB,OAAAmF,OAAA,GAAerQ,EAAf,CAAsBiM,SAAUA,SKM7BqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACPvQ,EAAAC,EAAAC,cAACsQ,GAAgBC,SAAjB,CAA0BC,MAAO,IAAI9F,IACnC5K,EAAAC,EAAAC,cAACyQ,GAAD,OAGFxB,SAASyB,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.67810aa0.chunk.js","sourcesContent":["import \"styled-components\";\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\ndeclare module \"styled-components\" {\r\n  export interface DefaultTheme {\r\n    device: {\r\n      iPad: string;\r\n    };\r\n    colors: {\r\n      man: string;\r\n      gallow: string;\r\n    };\r\n  }\r\n}\r\n\r\nconst myTheme: DefaultTheme = {\r\n  device: { iPad: \"767px\" },\r\n  colors: { man: \"#EADCCE\", gallow: \"#C47C35\" }\r\n};\r\nexport default myTheme;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport myTheme from \"../styled.d\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody{\r\n  background-color: #644364;\r\n}\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n \r\n}\r\n* ::after, * ::before{\r\n    position: absolute;\r\n    content: '';\r\n}\r\n\r\n\r\n:root{\r\n    color: #000;\r\n    font-size: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n`;\r\nconst LayoutWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 100%;\r\n  width: 100%;\r\n  transform: translate(-50%, -50%);\r\n  overflow: hidden;\r\n\r\n  @media (min-width: ${props => props.theme.device.iPad}) {\r\n    height: 70%;\r\n    width: 70%;\r\n  }\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <ThemeProvider theme={myTheme}>\r\n    <>\r\n      <GlobalStyle />\r\n      <LayoutWrapper>{children}</LayoutWrapper>\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  readonly isGameInProgress: boolean;\r\n  readonly isGameEnded: boolean;\r\n}\r\n\r\nexport const StartPageWrapper = styled.div<Props>`\r\n  height: 100%;\r\n  width: 100%;\r\n  opacity: ${({ isGameInProgress, isGameEnded }) =>\r\n    isGameInProgress || isGameEnded ? \"0\" : \"1\"};\r\n  background-color: #644364;\r\n  transition: 0.4s linear opacity;\r\n  font-size: 1.6rem;\r\n\r\n  @media (orientation: landscape) and (min-width: ${({ theme }) =>\r\n      theme.device.iPad}) {\r\n    font-size: 3rem;\r\n  }\r\n  @media (orientation: portrait) and (min-width: ${({ theme }) =>\r\n      theme.device.iPad}) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nexport const HangmanWrapper = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    opacity: 1;\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameEnded: boolean;\r\n}\r\n\r\nexport const StartGameButtonStyle = styled.button<Props>(\r\n  ({ isGameEnded }) => css`\r\n    position: ${!isGameEnded && \"absolute\"};\r\n    bottom: 20%;\r\n    left: 50%;\r\n    transform: ${!isGameEnded && \"translateX(-50%)\"};\r\n    height: 50px;\r\n    width: 200px;\r\n    border-radius: 5px;\r\n    background-color: #977697;\r\n    color: #fff;\r\n    border: none;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #a998a9;\r\n    }\r\n  `\r\n);\r\n","import * as React from \"react\";\r\nimport * as S from \"./style\";\r\nimport PropTypes from \"prop-types\";\r\nexport interface Props {\r\n  isLoading?: boolean;\r\n  onClick: () => void;\r\n  isGameEnded: boolean;\r\n}\r\n\r\nconst StartGameButton: React.SFC<Props> = ({\r\n  isLoading,\r\n  onClick,\r\n  isGameEnded\r\n}) => {\r\n  return (\r\n    <S.StartGameButtonStyle\r\n      isGameEnded={isGameEnded}\r\n      disabled={isLoading}\r\n      onClick={onClick}\r\n    >\r\n      {isLoading ? \"Loading...\" : \"Start game!\"}\r\n    </S.StartGameButtonStyle>\r\n  );\r\n};\r\n\r\nStartGameButton.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  onClick: PropTypes.func.isRequired,\r\n  isGameEnded: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default StartGameButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./style\";\r\nimport StartGameButton from \"../StartGameButton/StartGameButton\";\r\n\r\ninterface Props {\r\n  isGameInProgress: boolean;\r\n  isGameEnded: boolean;\r\n  isLoading: boolean;\r\n  startGame: () => void;\r\n}\r\n\r\nconst StartPage: React.SFC<Props> = ({\r\n  isGameInProgress,\r\n  isGameEnded,\r\n  isLoading,\r\n  startGame\r\n}) => {\r\n  return (\r\n    <S.StartPageWrapper\r\n      isGameEnded={isGameEnded}\r\n      isGameInProgress={isGameInProgress}\r\n    >\r\n      <StartGameButton\r\n        isGameEnded={isGameEnded}\r\n        isLoading={isLoading}\r\n        onClick={startGame}\r\n      />\r\n    </S.StartPageWrapper>\r\n  );\r\n};\r\n\r\nStartPage.propTypes = {\r\n  isGameInProgress: PropTypes.bool.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  isGameEnded: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default StartPage;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameInProgress: boolean;\r\n  isGameEnded: boolean;\r\n}\r\n\r\nexport const InGamePageWrapper = styled.div<Props>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  transform: ${({ isGameInProgress, isGameEnded }) =>\r\n    isGameInProgress || isGameEnded ? \"scale(1)\" : \"scale(0)\"};\r\n  opacity: ${({ isGameInProgress, isGameEnded }) =>\r\n    isGameInProgress || isGameEnded ? \"1\" : \"0\"};\r\n  transition: ${({ isGameEnded }) =>\r\n    isGameEnded ? \".4s .4s linear opacity\" : \".4s linear opacity\"};\r\n  font-size: 1rem;\r\n\r\n  @media (orientation: portrait) and (min-width: ${({ theme }) =>\r\n      theme.device.iPad}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (orientation: landscape) and (min-width: ${({ theme }) =>\r\n      theme.device.iPad}) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HangmanDrawingWrapper = styled.div`\r\n  flex-basis: 50%;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #222333;\r\n`;\r\n\r\nexport const HangmanWrapper = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  z-index: 1;\r\n\r\n  @media (orientation: landscape) and (min-width: ${props =>\r\n      props.theme.device.iPad}) {\r\n    font-size: 1.7rem;\r\n  }\r\n  @media (orientation: portrait) and (min-width: ${props =>\r\n      props.theme.device.iPad}) {\r\n    font-size: 1.7rem;\r\n  }\r\n  * {\r\n    position: absolute;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\n// IF U WANT TO USE THIS COMPONENT => WRAPPER FOR IT NEEDS POSITION RELATIVE, SOME WIDTH AND HEIGHT AND *{\r\n//     POSITION: ABSOLUTE\r\n//               }\r\n\r\nexport interface Props {\r\n  readonly mistakesLeft: number;\r\n  readonly font?: string;\r\n}\r\n\r\n//HangmanDrawingParts\r\nconst StylesForAllParts = styled.div<Props>(\r\n  ({ font }) => css`\r\n    /* GIVE FONT PROPS IF U WANT MAKE BIGGER HANGMAN */\r\n    font-size: ${font ? font : \"10px\"};\r\n    transition: 0.4s;\r\n    @media (min-width: 1000px) {\r\n      font-size: ${font ? font : \"15px\"};\r\n    }\r\n  `\r\n);\r\n\r\nconst GallowParts = styled(StylesForAllParts)<Props>(\r\n  ({ theme }) => css`\r\n    background-color: ${theme.colors.gallow};\r\n    &::after,\r\n    &::before {\r\n      background-color: ${theme.colors.gallow};\r\n    }\r\n  `\r\n);\r\n\r\nconst ManParts = styled(StylesForAllParts)<Props>(\r\n  ({ theme }) => css`\r\n    background-color: ${theme.colors.man};\r\n    &::after,\r\n    &::before {\r\n      background-color: ${theme.colors.man};\r\n    }\r\n  `\r\n);\r\n\r\nexport const GallowsBasis = styled(GallowParts)`\r\n  bottom: 1%;\r\n  height: 1em;\r\n  left: 2%;\r\n  width: 40%;\r\n`;\r\nexport const GallowBranch = styled(GallowParts)`\r\n  bottom: 1%;\r\n  height: 95%;\r\n  left: 2%;\r\n  width: 1em;\r\n`;\r\nexport const GallowTopBranch = styled(GallowParts)`\r\n  top: 4%;\r\n  height: 0.8em;\r\n  left: 2%;\r\n  width: 60%;\r\n`;\r\nexport const GallowsNoose = styled(GallowParts)`\r\n  top: 4%;\r\n  height: 20%;\r\n  left: 61%;\r\n  width: 0.7em;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 6 ? \"1\" : \"0\")};\r\n`;\r\nexport const Head = styled(ManParts)`\r\n  height: 4em;\r\n  width: 4em;\r\n  left: calc(61% + 0.35em);\r\n  top: 25%;\r\n  transform: translateX(-50%);\r\n  border-radius: 50%;\r\n  background-color: transparent;\r\n  border: 3px solid ${({ theme }) => theme.colors.man};\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 5 ? \"1\" : \"0\")};\r\n  ::after,\r\n  ::before {\r\n    top: 20%;\r\n    height: 10%;\r\n    width: 10%;\r\n    border-radius: 50%;\r\n  }\r\n  ::after {\r\n    left: 25%;\r\n  }\r\n  ::before {\r\n    right: 25%;\r\n  }\r\n`;\r\nexport const Body = styled(ManParts)`\r\n  top: calc(25% + 4em);\r\n  height: 25%;\r\n  left: calc(61% + 0.35em);\r\n  width: 0.5em;\r\n  transform: translateX(-50%);\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 4 ? \"1\" : \"0\")};\r\n`;\r\nexport const StylesForArms = styled(ManParts)`\r\n  height: 0.4em;\r\n  width: 3em;\r\n  border-radius: 30%;\r\n  top: calc(25% + 4em + 7.5%);\r\n`;\r\n\r\nexport const RightArm = styled(StylesForArms)`\r\n  left: calc(61% + 0.35em);\r\n  transform: rotate(-30deg);\r\n  transform-origin: top right;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 3 ? \"1\" : \"0\")};\r\n`;\r\nexport const LeftArm = styled(StylesForArms)`\r\n  left: calc(61% + 0.35em - 3em);\r\n  transform: rotate(30deg);\r\n  transform-origin: top left;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 2 ? \"1\" : \"0\")};\r\n`;\r\nexport const StylesForLegs = styled(ManParts)`\r\n  top: calc(50% + 4em);\r\n  border-radius: 30%;\r\n  width: 0.4em;\r\n  height: 3.2em;\r\n  left: calc(61% + 0.35em);\r\n`;\r\nexport const LeftLeg = styled(StylesForLegs)`\r\n  transform: translateX(-50%) rotate(50deg);\r\n  transform-origin: top right;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 1 ? \"1\" : \"0\")};\r\n`;\r\nexport const RightLeg = styled(StylesForLegs)`\r\n  left: calc(61%);\r\n  transform: translateX(50%) rotate(-50deg);\r\n  transform-origin: top left;\r\n  opacity: ${({ mistakesLeft }) => (mistakesLeft <= 0 ? \"1\" : \"0\")};\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Props } from \"./style\";\r\nimport * as S from \"./style\";\r\nconst Hangman: React.FC<Props> = ({ mistakesLeft }) => {\r\n  return (\r\n    <>\r\n      <S.GallowsBasis mistakesLeft={mistakesLeft} />\r\n      <S.GallowBranch mistakesLeft={mistakesLeft} />\r\n      <S.GallowTopBranch mistakesLeft={mistakesLeft} />\r\n      <S.GallowsNoose mistakesLeft={mistakesLeft} />\r\n      <S.Head mistakesLeft={mistakesLeft} />\r\n      <S.Body mistakesLeft={mistakesLeft} />\r\n      <S.LeftArm mistakesLeft={mistakesLeft} />\r\n      <S.LeftLeg mistakesLeft={mistakesLeft} />\r\n      <S.RightArm mistakesLeft={mistakesLeft} />\r\n      <S.RightLeg mistakesLeft={mistakesLeft} />\r\n    </>\r\n  );\r\n};\r\n\r\nHangman.propTypes = {\r\n  mistakesLeft: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Hangman;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Hangman from \"../../../Hangman/Hangman\";\r\n\r\ninterface Props {\r\n  mistakesLeft: number;\r\n}\r\n\r\nconst HangmanDrawingSection: React.FC<Props> = ({ mistakesLeft }) => (\r\n  <S.HangmanDrawingWrapper>\r\n    <S.HangmanWrapper>\r\n      <Hangman mistakesLeft={mistakesLeft} />\r\n    </S.HangmanWrapper>\r\n  </S.HangmanDrawingWrapper>\r\n);\r\n\r\nHangmanDrawingSection.propTypes = {\r\n  mistakesLeft: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HangmanDrawingSection;\r\n","import styled from \"styled-components\";\r\nexport const GameInfoWrapper = styled.div`\r\n  flex-basis: 50%;\r\n  padding: 5px;\r\n  background-color: #fce5fc;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: #3d2f3d;\r\n  font-size: 12px;\r\n  line-height: 140%;\r\n  @media (min-width: 1000px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const CategoryTitle = styled.p`\r\n  font-weight: 700;\r\n`;\r\nexport const HintTitle = styled.p`\r\n  font-weight: 700;\r\n`;\r\nexport const Category = styled.span`\r\n  font-style: italic;\r\n`;\r\nexport const Hint = styled.span`\r\n  font-style: italic;\r\n`;\r\nexport const BoxWrapper = styled.div`\r\n  flex-basis: 30%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 45%;\r\n  height: 35px;\r\n  border-radius: 9px 0 9px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #977697;\r\n  color: white;\r\n  position: relative;\r\n\r\n  &::after {\r\n    top: -20px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 20px;\r\n    color: #111;\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nexport const MistakesLeft = styled(Box)`\r\n  &::after {\r\n    content: \"Mistakes left\";\r\n  }\r\n`;\r\nexport const TimeToNextLetter = styled(Box)`\r\n  &::after {\r\n    content: \"Next letter in\";\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  timeToNextLetter: number;\r\n  mistakesLeft: number;\r\n  category: string;\r\n  hint: string;\r\n}\r\n\r\nconst GameInfoSection: React.FC<Props> = ({\r\n  timeToNextLetter,\r\n  mistakesLeft,\r\n  category,\r\n  hint\r\n}) => {\r\n  return (\r\n    <S.GameInfoWrapper>\r\n      <S.CategoryTitle>Category</S.CategoryTitle>\r\n      <S.Category>{category}</S.Category>\r\n      <S.HintTitle>Hint</S.HintTitle>\r\n      <S.Hint>{hint}</S.Hint>\r\n\r\n      <S.BoxWrapper>\r\n        <S.MistakesLeft>{mistakesLeft}</S.MistakesLeft>\r\n        <S.TimeToNextLetter>{timeToNextLetter} </S.TimeToNextLetter>\r\n      </S.BoxWrapper>\r\n    </S.GameInfoWrapper>\r\n  );\r\n};\r\n\r\nGameInfoSection.propTypes = {\r\n  timeToNextLetter: PropTypes.number.isRequired,\r\n  mistakesLeft: PropTypes.number.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  hint: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GameInfoSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DrawingAndInfoSectionWrapper = styled.div`\r\n  flex-basis: 40%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-basis: 100%;\r\n    width: 60%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport HangmanDrawing from \"./HangmanDrawing/HangmanDrawing\";\r\nimport GameInfo from \"./GameInfo/GameInfo\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  timeToNextLetter: number;\r\n  mistakesLeft: number;\r\n  category: string;\r\n  hint: string;\r\n}\r\n\r\nconst DrawingAndInfoSection: React.FC<Props> = ({\r\n  timeToNextLetter,\r\n  mistakesLeft,\r\n  category,\r\n  hint\r\n}) => {\r\n  return (\r\n    <S.DrawingAndInfoSectionWrapper>\r\n      <HangmanDrawing mistakesLeft={mistakesLeft} />\r\n      <GameInfo\r\n        category={category}\r\n        hint={hint}\r\n        mistakesLeft={mistakesLeft}\r\n        timeToNextLetter={timeToNextLetter}\r\n      />\r\n    </S.DrawingAndInfoSectionWrapper>\r\n  );\r\n};\r\n\r\nDrawingAndInfoSection.propTypes = {\r\n  timeToNextLetter: PropTypes.number.isRequired,\r\n  mistakesLeft: PropTypes.number.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  hint: PropTypes.string.isRequired\r\n};\r\nexport default DrawingAndInfoSection;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameWon: boolean;\r\n}\r\n\r\nexport const LetterWrapper = styled.span<Props>(\r\n  ({ isGameWon }) => css`\r\n    display: block;\r\n    height: 0.7em;\r\n    width: 0.7em;\r\n    font-size: 1.6em;\r\n    margin: 0 0.8em;\r\n    color: ${isGameWon ? \"#fed123\" : \"#dbd4eb\"};\r\n    @media (orientation: landscape) {\r\n      margin: 0 0.4em;\r\n    }\r\n  `\r\n);\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\ninterface Props {\r\n  isLetterShowed: boolean;\r\n  letter: string;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst Letter: React.FC<Props> = ({ isLetterShowed, letter, isGameWon }) => (\r\n  <S.LetterWrapper isGameWon={isGameWon}>\r\n    {isLetterShowed ? letter : \"__\"}\r\n  </S.LetterWrapper>\r\n);\r\n\r\nLetter.propTypes = {\r\n  isLetterShowed: PropTypes.bool.isRequired,\r\n  letter: PropTypes.string.isRequired,\r\n  isGameWon: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Letter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LettersWrapper = styled.div`\r\n  flex-basis: 90%;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-content: space-around;\r\n  text-align: center;\r\n`;\r\n\r\nexport const BreakLine = styled.div`\r\n  flex-basis: 100%;\r\n  height: 1%;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Letter from \"./Letter/Letter\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  phraseToGuess: Array<any>;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst Letters: React.FC<Props> = ({ phraseToGuess, isGameWon }) => {\r\n  const letters = phraseToGuess.map(letterObj => {\r\n    let letters;\r\n    if (letterObj.letter !== \" \") {\r\n      letters = (\r\n        <Letter\r\n          key={letterObj.id}\r\n          isLetterShowed={letterObj.isLetterShowed}\r\n          letter={letterObj.letter}\r\n          isGameWon={isGameWon}\r\n        />\r\n      );\r\n    } else if (letterObj.letter === \" \") {\r\n      letters = <S.BreakLine key={letterObj.id} />;\r\n    }\r\n    return letters;\r\n  });\r\n\r\n  return <S.LettersWrapper>{letters}</S.LettersWrapper>;\r\n};\r\n\r\nLetters.propTypes = {\r\n  phraseToGuess: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isGameWon: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Letters;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PhraseToGuessWrapper = styled.div`\r\n  flex-basis: 25%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: space-around;\r\n  border-radius: 5px;\r\n  background-color: #644364;\r\n\r\n  @media (orientation: landscape) {\r\n    flex-basis: 40%;\r\n    width: 40%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Letters from \"./Letters/Letters\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface Props {\r\n  phraseToGuess: Array<any>;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst PhraseToGuess: React.FC<Props> = ({ phraseToGuess, isGameWon }) => (\r\n  <S.PhraseToGuessWrapper>\r\n    <Letters isGameWon={isGameWon} phraseToGuess={phraseToGuess} />\r\n  </S.PhraseToGuessWrapper>\r\n);\r\n\r\nPhraseToGuess.propTypes = {\r\n  phraseToGuess: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isGameWon: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default PhraseToGuess;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LettersWrapper = styled.div`\r\n  flex-basis: 35%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #977697;\r\n  font-size: 1.5rem;\r\n  @media (orientation: landscape) {\r\n    flex-grow: 1;\r\n    width: 40%;\r\n  }\r\n\r\n  @media (orientation: portrait) and (min-width: ${({ theme }) =>\r\n      theme.device.iPad}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (orientation: landscape) and (min-width: ${({ theme }) =>\r\n      theme.device.iPad}) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isClicked: boolean;\r\n  isHit: boolean;\r\n}\r\n\r\nexport const Letter = styled.span<Props>(\r\n  ({ isClicked, isHit }) => css`\r\n    flex-basis: 10%;\r\n    height: 15%;\r\n    margin: 1% 2%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    font-weight: 700;\r\n    transition: 0.2s ease all;\r\n    transform: ${isClicked && \"scale(0.9)\"};\r\n    background-color: ${isHit ? \"#69a982\" : isClicked ? \"#d92121\" : \"#fff\"};\r\n    color: #977697;\r\n    cursor: pointer;\r\n    :hover {\r\n      box-shadow: ${!isClicked && \"0 0 5px 5px #ddd\"};\r\n    }\r\n  `\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./style\";\r\n\r\ninterface Props {\r\n  letter: string;\r\n  isHit: boolean;\r\n  isClicked: boolean;\r\n  clickLetter: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\r\n}\r\n\r\nconst LetterToClick: React.FC<Props> = ({\r\n  letter,\r\n  clickLetter,\r\n  isHit,\r\n  isClicked\r\n}) => (\r\n  <S.Letter onClick={clickLetter} isClicked={isClicked} isHit={isHit}>\r\n    {letter}\r\n  </S.Letter>\r\n);\r\n\r\nLetterToClick.propTypes = {\r\n  letter: PropTypes.string.isRequired,\r\n  isHit: PropTypes.bool.isRequired,\r\n  isClicked: PropTypes.bool.isRequired,\r\n  clickLetter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LetterToClick;\r\n","import React from \"react\";\r\nimport * as S from \"./style\";\r\nimport PropTypes from \"prop-types\";\r\nimport LetterToClick from \"./LetterToClick/LetterToClick\";\r\n\r\ninterface Props {\r\n  lettersToClick: Array<any>;\r\n  clickLetter: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\r\n}\r\n\r\nconst LettersToClick: React.FC<Props> = ({ lettersToClick, clickLetter }) => {\r\n  const letters = lettersToClick.map(letterToClick => (\r\n    <LetterToClick\r\n      clickLetter={e => clickLetter(e)}\r\n      isClicked={letterToClick.isClicked}\r\n      key={letterToClick.letter}\r\n      isHit={letterToClick.isHit}\r\n      letter={letterToClick.letter.toUpperCase()}\r\n    />\r\n  ));\r\n\r\n  return <S.LettersWrapper>{letters}</S.LettersWrapper>;\r\n};\r\n\r\nLettersToClick.propTypes = {\r\n  lettersToClick: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  clickLetter: PropTypes.func.isRequired\r\n};\r\nexport default LettersToClick;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport DrawingAndInfoSection from \"./DrawingAndInfoSection/DrawingAndInfoSection\";\r\nimport PhraseToGuessSection from \"./PhraseToGuessSection/PhraseToGuessSection\";\r\nimport LettersToClickSection from \"./LettersToClickSection/LettersToClickSection\";\r\n\r\ninterface Props {\r\n  clickLetter: (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\r\n  mistakesLeft: number;\r\n  timeToNextLetter: number;\r\n  phraseToGuess: Array<any>;\r\n  hint: string;\r\n  category: string;\r\n  lettersToClick: Array<any>;\r\n  isGameInProgress: boolean;\r\n  isGameEnded: boolean;\r\n  isGameWon: boolean;\r\n}\r\n\r\nconst InGamePage: React.FC<Props> = ({\r\n  mistakesLeft,\r\n  timeToNextLetter,\r\n  phraseToGuess,\r\n  category,\r\n  hint,\r\n  lettersToClick,\r\n  clickLetter,\r\n  isGameInProgress,\r\n  isGameEnded,\r\n  isGameWon\r\n}) => {\r\n  return (\r\n    <S.InGamePageWrapper\r\n      isGameEnded={isGameEnded}\r\n      isGameInProgress={isGameInProgress}\r\n    >\r\n      <DrawingAndInfoSection\r\n        category={category}\r\n        hint={hint}\r\n        mistakesLeft={mistakesLeft}\r\n        timeToNextLetter={timeToNextLetter}\r\n      />\r\n      <PhraseToGuessSection\r\n        phraseToGuess={phraseToGuess}\r\n        isGameWon={isGameWon}\r\n      />\r\n      <LettersToClickSection\r\n        lettersToClick={lettersToClick}\r\n        clickLetter={clickLetter}\r\n      />\r\n    </S.InGamePageWrapper>\r\n  );\r\n};\r\n\r\nInGamePage.propTypes = {\r\n  mistakesLeft: PropTypes.number.isRequired,\r\n  timeToNextLetter: PropTypes.number.isRequired,\r\n  phraseToGuess: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  hint: PropTypes.string.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n  lettersToClick: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  clickLetter: PropTypes.func.isRequired,\r\n  isGameInProgress: PropTypes.bool.isRequired,\r\n  isGameEnded: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default InGamePage;\r\n","import styled, { css } from \"styled-components\";\r\n\r\ninterface Props {\r\n  isGameEnded: boolean;\r\n}\r\n\r\nexport const EndGameWrapper = styled.div<Props>(\r\n  ({ isGameEnded }) => css`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 35%;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    transform: ${isGameEnded ? \"translateY(0)\" : \"translateY(-100%)\"};\r\n    opacity: ${isGameEnded ? \"1\" : \"0\"};\r\n    transition: 0.3s linear all;\r\n    background-color: #644364;\r\n    color: white;\r\n    @media (orientation: landscape) {\r\n      bottom: 0;\r\n      right: 40%;\r\n    }\r\n    @media (orientation: portrait) and (min-width: ${props =>\r\n        props.theme.device.iPad}) {\r\n      font-size: 2rem;\r\n    }\r\n    @media (orientation: landscape) and (min-width: ${props =>\r\n        props.theme.device.iPad}) {\r\n      font-size: 1.6rem;\r\n    }\r\n  `\r\n);\r\n\r\nexport const Title = styled.p`\r\n  font-size: 22px;\r\n`;\r\nexport const Subtitle = styled.p`\r\n  font-size: 18px;\r\n`;\r\nexport const TitbitOrPhrase = styled.div`\r\n  width: 85%;\r\n  color: #f9fc4e;\r\n  text-align: center;\r\n  max-height: 130px;\r\n  overflow: auto;\r\n`;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport StartGameButton from \"../StartGameButton/StartGameButton\";\r\ninterface Props {\r\n  isGameEnded: boolean;\r\n  isGameWon: boolean;\r\n  phraseToGuess: Array<any>;\r\n  onClick: () => void;\r\n  titbit?: string;\r\n}\r\n\r\nconst EndGamePage: React.FC<Props> = ({\r\n  isGameEnded,\r\n  isGameWon,\r\n  phraseToGuess,\r\n  onClick,\r\n  titbit\r\n}) => {\r\n  const guessedPhrase = phraseToGuess.map(({ letter }) => letter);\r\n  return (\r\n    <S.EndGameWrapper isGameEnded={isGameEnded}>\r\n      <S.Title>{isGameWon ? \"Excellent!\" : `Try again!`}</S.Title>\r\n      <S.Subtitle>\r\n        {isGameWon ? \"Fun Fact\" : \"The correct phrase was\"}\r\n      </S.Subtitle>\r\n\r\n      <S.TitbitOrPhrase>{isGameWon ? titbit : guessedPhrase}</S.TitbitOrPhrase>\r\n\r\n      <StartGameButton isGameEnded={isGameEnded} onClick={onClick}>\r\n        Play again\r\n      </StartGameButton>\r\n    </S.EndGameWrapper>\r\n  );\r\n};\r\n\r\nEndGamePage.propTypes = {\r\n  isGameEnded: PropTypes.bool.isRequired,\r\n  isGameWon: PropTypes.bool.isRequired,\r\n  phraseToGuess: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  titbit: PropTypes.string\r\n};\r\n\r\nexport default EndGamePage;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyC6vn4EfK3J_Cad5dnysic1OZv3vP7hQ0Q\",\r\n  authDomain: \"hangman-239ba.firebaseapp.com\",\r\n  databaseURL: \"https://hangman-239ba.firebaseio.com\",\r\n  projectId: \"hangman-239ba\",\r\n  storageBucket: \"hangman-239ba.appspot.com\",\r\n  messagingSenderId: \"101819977682\",\r\n  appId: \"1:101819977682:web:0362f0cb597b13dc\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.db = app.database();\r\n  }\r\n\r\n  // REFERENCES\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./Firebase\";\r\n\r\nexport { FirebaseContext, withFirebase };\r\n\r\nexport default Firebase;\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport StartPage from \"../components/StartPage/StartPage\";\r\nimport InGamePage from \"../components/InGamePage/InGamePage\";\r\nimport EndGamePage from \"../components/EndGamePage/EndGamePage\";\r\nimport { withFirebase } from \"../hoc/Firebase\";\r\nconst TIME_TO_NEXT_LETTER = 5;\r\nconst INITIAL_LETTERS_TO_CLICK = [\r\n  { letter: \"Q\", isClicked: false, isHit: false },\r\n  { letter: \"W\", isClicked: false, isHit: false },\r\n  { letter: \"E\", isClicked: false, isHit: false },\r\n  { letter: \"R\", isClicked: false, isHit: false },\r\n  { letter: \"T\", isClicked: false, isHit: false },\r\n  { letter: \"Y\", isClicked: false, isHit: false },\r\n  { letter: \"U\", isClicked: false, isHit: false },\r\n  { letter: \"I\", isClicked: false, isHit: false },\r\n  { letter: \"O\", isClicked: false, isHit: false },\r\n  { letter: \"P\", isClicked: false, isHit: false },\r\n  { letter: \"A\", isClicked: false, isHit: false },\r\n  { letter: \"S\", isClicked: false, isHit: false },\r\n  { letter: \"D\", isClicked: false, isHit: false },\r\n  { letter: \"F\", isClicked: false, isHit: false },\r\n  { letter: \"G\", isClicked: false, isHit: false },\r\n  { letter: \"H\", isClicked: false, isHit: false },\r\n  { letter: \"J\", isClicked: false, isHit: false },\r\n  { letter: \"K\", isClicked: false, isHit: false },\r\n  { letter: \"L\", isClicked: false, isHit: false },\r\n  { letter: \"Z\", isClicked: false, isHit: false },\r\n  { letter: \"X\", isClicked: false, isHit: false },\r\n  { letter: \"C\", isClicked: false, isHit: false },\r\n  { letter: \"V\", isClicked: false, isHit: false },\r\n  { letter: \"B\", isClicked: false, isHit: false },\r\n  { letter: \"N\", isClicked: false, isHit: false },\r\n  { letter: \"M\", isClicked: false, isHit: false }\r\n];\r\n\r\nconst initialState = {\r\n  allPhrasesFromApi: [],\r\n  isGameInProgress: false,\r\n  isGameEnded: false,\r\n  isGameWon: false,\r\n  isLoading: false,\r\n  phraseToGuess: [],\r\n  phraseInfo: {\r\n    category: \"\",\r\n    hint: \"\",\r\n    titbit: \"\"\r\n  },\r\n  lettersToClick: INITIAL_LETTERS_TO_CLICK,\r\n  timeToNextLetter: TIME_TO_NEXT_LETTER, //if time === 0 => random letter is clicked\r\n  mistakesLeft: 7 // if we select wrong letter => mistakes--. If mistakes ===0 => game is over\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...initialState\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", e =>\r\n      this.clickOrPressKeyHandler(e, e.key)\r\n    );\r\n    this.fetchAllPhrasesHandler();\r\n  }\r\n\r\n  fetchAllPhrasesHandler = () => {\r\n    this.setState({ isLoading: true });\r\n    this.props.firebase.db.ref().once(\"value\", snapshot => {\r\n      const allPhrasesFromApi = Object.entries(snapshot.val()).map(obj => obj);\r\n      this.setState({\r\n        allPhrasesFromApi,\r\n        isLoading: false\r\n      });\r\n    });\r\n  };\r\n\r\n  startGameHandler = () => {\r\n    const randomPhrase = this.giveRandomPhraseHandler();\r\n    const { phraseToGuess, phraseInfo } = randomPhrase;\r\n\r\n    this.setState({\r\n      isGameInProgress: true,\r\n      phraseToGuess,\r\n      phraseInfo,\r\n      isGameEnded: false,\r\n      isGameWon: false,\r\n      lettersToClick: [\r\n        { letter: \"Q\", isClicked: false, isHit: false },\r\n        { letter: \"W\", isClicked: false, isHit: false },\r\n        { letter: \"E\", isClicked: false, isHit: false },\r\n        { letter: \"R\", isClicked: false, isHit: false },\r\n        { letter: \"T\", isClicked: false, isHit: false },\r\n        { letter: \"Y\", isClicked: false, isHit: false },\r\n        { letter: \"U\", isClicked: false, isHit: false },\r\n        { letter: \"I\", isClicked: false, isHit: false },\r\n        { letter: \"O\", isClicked: false, isHit: false },\r\n        { letter: \"P\", isClicked: false, isHit: false },\r\n        { letter: \"A\", isClicked: false, isHit: false },\r\n        { letter: \"S\", isClicked: false, isHit: false },\r\n        { letter: \"D\", isClicked: false, isHit: false },\r\n        { letter: \"F\", isClicked: false, isHit: false },\r\n        { letter: \"G\", isClicked: false, isHit: false },\r\n        { letter: \"H\", isClicked: false, isHit: false },\r\n        { letter: \"J\", isClicked: false, isHit: false },\r\n        { letter: \"K\", isClicked: false, isHit: false },\r\n        { letter: \"L\", isClicked: false, isHit: false },\r\n        { letter: \"Z\", isClicked: false, isHit: false },\r\n        { letter: \"X\", isClicked: false, isHit: false },\r\n        { letter: \"C\", isClicked: false, isHit: false },\r\n        { letter: \"V\", isClicked: false, isHit: false },\r\n        { letter: \"B\", isClicked: false, isHit: false },\r\n        { letter: \"N\", isClicked: false, isHit: false },\r\n        { letter: \"M\", isClicked: false, isHit: false }\r\n      ],\r\n      timeToNextLetter: TIME_TO_NEXT_LETTER,\r\n      mistakesLeft: 7\r\n    });\r\n  };\r\n\r\n  giveRandom = i => Math.floor(Math.random() * i);\r\n\r\n  giveRandomPhraseHandler = () => {\r\n    const { allPhrasesFromApi } = this.state;\r\n    const { giveRandom } = this;\r\n\r\n    const randomCategory =\r\n      allPhrasesFromApi[giveRandom(allPhrasesFromApi.length)];\r\n\r\n    const allQuestionsInThisCategory = Object.entries(randomCategory[1]).map(\r\n      obj => obj\r\n    );\r\n    const randomQuestion =\r\n      allQuestionsInThisCategory[giveRandom(allQuestionsInThisCategory.length)];\r\n\r\n    const category = randomCategory[0];\r\n    const phrase = randomQuestion[0];\r\n    const { hint, titbit } = randomQuestion[1];\r\n\r\n    const phraseToGuess = [...phrase].map((letter, index) => ({\r\n      id: index,\r\n      letter: letter.toUpperCase(),\r\n      isLetterShowed:\r\n        letter === \",\" || letter === \"-\" || letter === \" \" ? true : false\r\n    }));\r\n\r\n    return {\r\n      phraseToGuess,\r\n      phraseInfo: {\r\n        category,\r\n        hint,\r\n        titbit\r\n      }\r\n    };\r\n  };\r\n\r\n  clickOrPressKeyHandler = (e, keydownLetter) => {\r\n    const {\r\n      isGameInProgress,\r\n      timeToNextLetter,\r\n      isGameEnded,\r\n      lettersToClick\r\n    } = this.state;\r\n    console.log(keydownLetter);\r\n    if (!isGameInProgress || isGameEnded || timeToNextLetter === 0) {\r\n      return;\r\n    } else {\r\n      let keyPressedOrClickedLetter;\r\n\r\n      if (keydownLetter) {\r\n        keyPressedOrClickedLetter = keydownLetter.toUpperCase();\r\n      } else if (e.target.textContent) {\r\n        keyPressedOrClickedLetter = e.target.textContent;\r\n      }\r\n\r\n      const index = lettersToClick.findIndex(\r\n        ({ letter }) => letter === keyPressedOrClickedLetter\r\n      );\r\n\r\n      if (index === -1 || lettersToClick[index].isClicked) {\r\n        return;\r\n      } else {\r\n        const selectedLetterObj = lettersToClick[index];\r\n        return this.checkIfLetterIsInPhraseHandler(selectedLetterObj);\r\n      }\r\n    }\r\n  };\r\n\r\n  autoClickLetter = () => {\r\n    const { checkIfLetterIsInPhraseHandler, giveRandom } = this;\r\n    const { lettersToClick } = this.state;\r\n    const notClickedLetters = lettersToClick.filter(\r\n      letter => !letter.isClicked\r\n    );\r\n    const random = giveRandom(notClickedLetters.length);\r\n    const selectedLetter = notClickedLetters[random];\r\n    return checkIfLetterIsInPhraseHandler(selectedLetter);\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //END GAME HANDLER\r\n    const { timeToNextLetter, mistakesLeft } = this.state;\r\n\r\n    if (prevState.mistakesLeft !== mistakesLeft && mistakesLeft === 0) {\r\n      clearInterval(this.ID);\r\n      this.setState({ isGameEnded: true, isGameInProgress: false });\r\n    }\r\n\r\n    if (\r\n      prevState.timeToNextLetter !== timeToNextLetter &&\r\n      timeToNextLetter === -1\r\n    ) {\r\n      this.autoClickLetter();\r\n      this.setState({ timeToNextLetter: TIME_TO_NEXT_LETTER });\r\n    }\r\n  }\r\n\r\n  checkIfLetterIsInPhraseHandler = selectedLetterObj => {\r\n    this.startTimeToNextLetterHandler();\r\n    const { phraseToGuess, lettersToClick } = this.state;\r\n    const slicedPhrase = phraseToGuess.slice();\r\n    const slicedLettersToClick = lettersToClick.slice();\r\n\r\n    const letterToClickIndex = slicedLettersToClick.findIndex(\r\n      obj => obj.letter === selectedLetterObj.letter\r\n    );\r\n    slicedLettersToClick[letterToClickIndex].isClicked = true;\r\n\r\n    const letterInPhrase = phraseToGuess.find(\r\n      obj => obj.letter === selectedLetterObj.letter\r\n    );\r\n\r\n    if (letterInPhrase) {\r\n      slicedLettersToClick[letterToClickIndex].isHit = true;\r\n      slicedPhrase.forEach(\r\n        obj =>\r\n          obj.letter === selectedLetterObj.letter && (obj.isLetterShowed = true)\r\n      );\r\n      const isPhraseGuessed = this.checkIfAllLettersAreShowed();\r\n      if (isPhraseGuessed) {\r\n        clearInterval(this.ID);\r\n        this.setState({\r\n          isGameInProgress: false,\r\n          isGameEnded: true,\r\n          isGameWon: true\r\n        });\r\n      } else if (!isPhraseGuessed) {\r\n        this.setState({\r\n          phraseToGuess: slicedPhrase,\r\n          lettersToClick: slicedLettersToClick\r\n        });\r\n      }\r\n    } else if (!letterInPhrase) {\r\n      slicedLettersToClick[letterToClickIndex].isHit = false;\r\n      this.setState({\r\n        mistakesLeft: this.state.mistakesLeft - 1,\r\n        timeToNextLetter: TIME_TO_NEXT_LETTER\r\n      });\r\n    }\r\n  };\r\n\r\n  startTimeToNextLetterHandler = () => {\r\n    clearInterval(this.ID);\r\n    this.ID = setInterval(() => {\r\n      this.setState({ timeToNextLetter: this.state.timeToNextLetter - 1 });\r\n    }, 1000);\r\n  };\r\n\r\n  checkIfAllLettersAreShowed = () => {\r\n    const { phraseToGuess } = this.state;\r\n    const arrayOfBoolean = phraseToGuess.map(obj => obj.isLetterShowed);\r\n    const areAllLettersShowed = !arrayOfBoolean.includes(false);\r\n    return areAllLettersShowed;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.clickOrPressKeyHandler());\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      phraseToGuess,\r\n      lettersToClick,\r\n      timeToNextLetter,\r\n      mistakesLeft,\r\n      isGameInProgress,\r\n      isGameEnded,\r\n      phraseInfo,\r\n      isGameWon,\r\n      isLoading\r\n    } = this.state;\r\n\r\n    const { category, hint, titbit } = phraseInfo;\r\n\r\n    return (\r\n      <Layout isGameInProgress={isGameInProgress}>\r\n        <StartPage\r\n          phraseToGuess={phraseToGuess}\r\n          isGameEnded={isGameEnded}\r\n          isGameInProgress={isGameInProgress}\r\n          startGame={this.startGameHandler}\r\n          isLoading={isLoading}\r\n        />\r\n        <InGamePage\r\n          isGameEnded={isGameEnded}\r\n          isGameInProgress={isGameInProgress}\r\n          category={category}\r\n          hint={hint}\r\n          phraseToGuess={phraseToGuess}\r\n          lettersToClick={lettersToClick}\r\n          timeToNextLetter={timeToNextLetter}\r\n          mistakesLeft={mistakesLeft}\r\n          clickLetter={this.clickOrPressKeyHandler}\r\n          isGameWon={isGameWon}\r\n        />\r\n        <EndGamePage\r\n          titbit={titbit}\r\n          onClick={this.startGameHandler}\r\n          phraseToGuess={phraseToGuess}\r\n          isGameWon={isGameWon}\r\n          isGameEnded={isGameEnded}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App.js\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Firebase, { FirebaseContext } from \"./hoc/Firebase\";\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}