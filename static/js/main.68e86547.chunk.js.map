{"version":3,"sources":["theme/theme.js","components/Layout/Layout.js","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanParts/HangmanParts.js","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing.js","components/StartPage/StartPage.js","components/InGamePage/DrawingAndInfoSection/GameInfo/GameInfo.js","components/InGamePage/DrawingAndInfoSection/DrawingAndInfoSection.js","components/InGamePage/PhraseToGuessSection/Letters/Letter/Letter.js","components/InGamePage/PhraseToGuessSection/Letters/Letters.js","components/InGamePage/PhraseToGuessSection/PhraseToGuessSection.js","components/InGamePage/LettersToClickSection/LetterToClick/LetterToClick.js","components/InGamePage/LettersToClickSection/LettersToClickSection.js","components/InGamePage/InGamePage.js","components/EndGamePage/EndGamePage.js","containers/App.js","serviceWorker.js","index.js"],"names":["theme","colors","white","black","gray","deep","green","red","GlobalStyle","createGlobalStyle","_templateObject","_ref","_ref2","isGameStarted","Layout","styled","div","_templateObject2","layout","_ref3","children","react_default","a","createElement","styled_components_browser_esm","Fragment","StylesForAllParts","HangmanParts_templateObject","GallowsBasis","HangmanParts_templateObject2","GallowBranch","_templateObject3","GallowTopBranch","_templateObject4","GallowsNoose","_templateObject5","_ref4","mistakesLeft","Head","_templateObject6","_ref5","_ref6","Body","_templateObject7","_ref7","_ref8","StylesForArms","_templateObject8","_ref9","StylesForLegs","_templateObject9","_ref10","LeftArm","_templateObject10","_ref11","RightArm","_templateObject11","_ref12","LeftLeg","_templateObject12","_ref13","RightLeg","_templateObject13","_ref14","HangmanDrawingWrapper","HangmanDrawing_templateObject","hangmanDrawingSection","StartPageWrapper","StartPage_templateObject","StartGameButton","button","StartPage_templateObject2","startPage","startGame","HangmanDrawing","onClick","GameInfoWrapper","GameInfo_templateObject","Info","GameInfo_templateObject2","Category","p","GameInfo_templateObject3","Hint","GameInfo_templateObject4","MistakesLeft","GameInfo_templateObject5","TimeToNextLetterWrapper","GameInfo_templateObject6","GameInfoSection","timeToNextLetter","DrawingAndInfoSectionWrapper","DrawingAndInfoSection_templateObject","DrawingAndInfoSection","GameInfo","LetterWrapper","span","Letter_templateObject","letter","letterObj","isLetterShowed","LettersWrapper","Letters_templateObject","BreakLine","Letters_templateObject2","letters","phraseToGuess","map","Letter","key","id","PhraseToGuessWrapper","PhraseToGuessSection_templateObject","PhraseToGuess","Letters","LetterToClick_templateObject","isClicked","isHit","concat","letterToClick","clickLetter","LetterToClick_Letter","LettersToClickSection_templateObject","LettersToClick","lettersToClick","LetterToClick","e","toUpperCase","LettersToClickSection_LettersWrapper","InGamePageWrapper","InGamePage_templateObject","inGamePage","InGamePage_DrawingAndInfoSection_DrawingAndInfoSection","PhraseToGuessSection","LettersToClickSection","EndGameWrapper","EndGamePage_templateObject","isGameEnded","endGamePage","TIME_TO_NEXT_LETTER","App","state","startGameHandler","_this","setState","startTimeToNextLetterHandler","ID","setInterval","isSelectedLetterInPhraseHandler","selectedLetterObj","letterInPhrase","find","selectedLetter","forEach","clickOrPressKeyLetterHandler","pressedOrClickedLetter","_this$state","clickedLetter","target","textContent","index","findIndex","clearInterval","prevProps","prevState","_this2","this","allLettersAreShowed","filter","phrase","length","noMistakesLeft","clearTimeout","TimeoutID","filteredLetters","autoClicked","Math","floor","random","console","log","setTimeout","_this3","document","addEventListener","Object","toConsumableArray","push","removeEventListener","_this$state2","Layout_Layout","StartPage","InGamePage","EndGamePage","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68e86547.chunk.js","sourcesContent":["export const theme = {\r\n\r\n    colors: {\r\n        white: '#fff',\r\n        black: '#000',\r\n        gray: '#D6D6D8',\r\n        deep: '#0B091F',\r\n        green: '#69a982',\r\n        red: '#6f2232',\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport { theme } from '../../theme/theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-weight: normal;\r\n    color:${({ theme }) => theme.colors.black};\r\n}\r\n* ::after, * ::before{\r\n    position: absolute;\r\n    content: '';\r\n}\r\n\r\n\r\n:root{\r\n    font-size:${({ isGameStarted }) => isGameStarted ? '10px' : '15px'};\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n`\r\nconst Layout = styled.div`\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\nheight: 100%;\r\nwidth: 100%;\r\noverflow: hidden;\r\nmax-width: 1000px;\r\ntransform: translate(-50%,-50%);\r\n`\r\n\r\nconst layout = ({ isGameStarted, children }) =>\r\n    (\r\n        <ThemeProvider theme={theme}>\r\n            <>\r\n                <GlobalStyle\r\n                    isGameStarted={isGameStarted} />\r\n                <Layout>\r\n                    {children}\r\n                </Layout>\r\n            </>\r\n        </ThemeProvider>\r\n\r\n    )\r\n\r\nexport default layout;","import styled from 'styled-components';\r\n\r\n\r\n\r\n\r\nconst StylesForAllParts = styled.div`\r\n    position: absolute;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    transition: .4s;\r\n    &::after,&::before{\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n    }\r\n`\r\n\r\nexport const GallowsBasis = styled(StylesForAllParts)`\r\n    top: 95%;\r\n    height: .3rem;\r\n    left: 5%;\r\n    width: 70%;\r\n\r\n`\r\n\r\nexport const GallowBranch = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    bottom: 5%;\r\n    left: 5%;\r\n    width: .4rem;\r\n    &::after{\r\n        top: 0%;\r\n        height: 4rem;\r\n        left: 300%;\r\n        width: 100%;\r\n        transform: rotate(35deg);\r\n    }\r\n`\r\n\r\nexport const GallowTopBranch = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    height: .4rem;\r\n    left: 5%;\r\n    right: 50%;\r\n`\r\n\r\nexport const GallowsNoose = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    bottom: ${({ isGameStarted }) => isGameStarted ? '82.5%' : '70%'};\r\n    left: 50%;\r\n    width: .4rem;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 6 || !isGameStarted ? '1' : '0'};\r\n\r\n\r\n\r\n\r\n`\r\n\r\nexport const Head = styled(StylesForAllParts)`\r\n    top: ${({ isGameStarted }) => isGameStarted ? '17.5%' : '30%'};\r\n    height: 3.5rem;\r\n    left: 50%;\r\n    width: 3.5rem;\r\n    transform: translate(-50%);\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 5 || !isGameStarted ? '1' : '0'};\r\n    border: .1rem solid white;\r\n    border-radius: 50%;\r\n   ;\r\n\r\n    background-color: transparent;\r\n    ::after,::before{\r\n        top: 20%;\r\n        height: 10%;\r\n        width: 10%;\r\n        border-radius: 50%;\r\n    }\r\n    ::after{\r\n        left: 25%;\r\n    \r\n    }\r\n    ::before{\r\n        right: 25%;\r\n    }\r\n`\r\n\r\nexport const Body = styled(StylesForAllParts)`\r\n    top: ${({ isGameStarted }) => isGameStarted ? `calc(3.5rem + 17.5%)` : `calc(3.5rem + 30%)`};\r\n    height: 5rem;\r\n    left: 50%;\r\n    width: .3rem;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 4 || !isGameStarted ? '1' : '0'};\r\n`\r\n\r\nconst StylesForArms = styled(StylesForAllParts)`\r\n    top: ${({ isGameStarted }) => isGameStarted ? `calc(3.5rem + 17.5%)` : `calc(3.5rem + 30%)`};\r\n   height: .2rem;\r\n   width: 3rem;\r\n   border-radius: 30%;\r\n`\r\n\r\n\r\nconst StylesForLegs = styled(StylesForAllParts)`\r\n    top: ${({ isGameStarted }) => isGameStarted ? `calc(3.5rem + 17.5% + 4.8rem)` : `calc(4.8rem + 3.5rem + 30%)`};\r\n    width: 4rem;\r\n    height: .2rem;\r\n    border-radius: 30%;\r\n\r\n`\r\n\r\nexport const LeftArm = styled(StylesForArms)`\r\n    left: 50%;\r\n    transform: translateX(-100%) rotate(-30deg);\r\n    transform-origin: top right;\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 3 || !isGameStarted ? '1' : '0'};\r\n\r\n`\r\n\r\nexport const RightArm = styled(StylesForArms)`\r\n    right: 50%;\r\n    transform: translateX(100%) rotate(30deg);\r\n    transform-origin: top left;\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 2 || !isGameStarted ? '1' : '0'};\r\n`\r\n\r\nexport const LeftLeg = styled(StylesForLegs)`\r\n    left: 50%;\r\n    transform: translateX(-100%) rotate(-50deg);\r\n    transform-origin: top right;\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 1 || !isGameStarted ? '1' : '0'};\r\n\r\n`\r\n\r\nexport const RightLeg = styled(StylesForLegs)`\r\n    right: 50%;\r\n    transform: translateX(100%) rotate(50deg);\r\n    transform-origin: top left;\r\n    opacity: ${({ mistakesLeft, isGameStarted }) => mistakesLeft <= 0 || !isGameStarted ? '1' : '0'};\r\n\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Body, Head, LeftArm, LeftLeg, RightArm, GallowsBasis, RightLeg, GallowBranch, GallowTopBranch, GallowsNoose } from './HangmanParts/HangmanParts';\r\n\r\nexport const HangmanDrawingWrapper = styled.div`\r\n    width: ${({ isGameStarted }) => isGameStarted ? '50%' : '100%'};\r\n    height: 100%;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n    position: ${({ isGameStarted }) => isGameStarted ? 'relative' : 'absolute'};\r\ntop: 0;\r\nleft: 0;\r\n`\r\n\r\n\r\n\r\nconst hangmanDrawingSection = ({ mistakesLeft, isGameStarted }) => (\r\n    <HangmanDrawingWrapper\r\n        isGameStarted={isGameStarted}>\r\n\r\n        <GallowsBasis />\r\n        <GallowBranch />\r\n        <GallowTopBranch />\r\n        <GallowsNoose\r\n            mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted}\r\n        />\r\n\r\n        <Head\r\n            mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted} />\r\n        <Body mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted} />\r\n        <LeftArm mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted} />\r\n        <LeftLeg mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted} />\r\n        <RightArm mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted} />\r\n        <RightLeg mistakesLeft={mistakesLeft}\r\n            isGameStarted={isGameStarted} />\r\n\r\n    </HangmanDrawingWrapper>\r\n)\r\nexport default hangmanDrawingSection;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport HangmanDrawingSection from '../InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing';\r\n\r\n\r\n\r\nconst StartPageWrapper = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\ntransform: ${({ isGameStarted }) => isGameStarted ? 'translateX(-100%)' : 'translateX(0)'};\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\ntransition: .5s linear all;\r\n`\r\n\r\nconst StartGameButton = styled.button`\r\nposition: absolute;\r\ntop: 80%;\r\nleft: 50%;\r\ntransform:translateX(-50%);\r\nheight: 3rem;\r\nwidth: 10rem;\r\nborder-radius: 100px;\r\nfont-size: 1.2rem;\r\nletter-spacing: 3px;\r\nbackground-color: ${({ theme }) => theme.colors.black};\r\ncolor: ${({ theme }) => theme.colors.gray};\r\n\r\n`\r\n\r\nconst startPage = ({ isGameStarted, startGame }) => {\r\n    return (\r\n        <StartPageWrapper\r\n            isGameStarted={isGameStarted}>\r\n\r\n            <HangmanDrawingSection />\r\n\r\n            <StartGameButton\r\n                onClick={startGame}>Start Game</StartGameButton>\r\n        </StartPageWrapper>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default startPage;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GameInfoWrapper = styled.div`\r\n    flex-basis: 50%;\r\n    background-color: ${({ theme }) => theme.colors.gray};\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-end;\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\nspan{\r\n    display: block;\r\n}\r\n\r\n`\r\nconst Info = styled.div`\r\n    flex-basis: 92.5%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;\r\n    align-items: flex-end;\r\n`\r\n\r\nconst Category = styled.p`\r\n    flex-basis: 100%;\r\n    height: 25%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: space-around;\r\n    font-weight: 700;\r\n`\r\nconst Hint = styled.p`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: space-around;\r\n    height: 40%;\r\n    font-weight: 700;\r\n`\r\n\r\nconst MistakesLeft = styled.div`\r\n    flex-basis: 40%;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 2rem;\r\n    margin-bottom: .1rem;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n    border-radius: 100px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n    &::before{\r\n        top: 50%;\r\n        transform: translate(-90%, -50%);\r\n        left: 0;\r\n        width: 5rem;\r\n        height: 1rem;\r\n        border-radius: 20%;\r\n        background-color: ${({ theme }) => theme.colors.deep};\r\n    }\r\n`\r\n\r\n\r\nconst TimeToNextLetterWrapper = styled.div`\r\n    flex-basis: 40%;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: .1rem;\r\n    font-size: 2rem;\r\n    background-color: ${({ theme }) => theme.colors.black};\r\n    border-radius: 100px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n    &::before{\r\n        top: 100%;\r\n        transform: translate(-50%, -10%);\r\n        left: 50%;\r\n        width: 1rem;\r\n        height: 3rem;\r\n        border-radius: 20%;\r\n        background-color:${({ theme }) => theme.colors.black};\r\n    }\r\n`\r\n\r\nconst GameInfoSection = ({ timeToNextLetter, mistakesLeft }) => (\r\n    <GameInfoWrapper>\r\n        <Info>\r\n            <Category>Category <span>Famous Buildings </span> </Category>\r\n            <Hint>Hint <span> One of the highest buildings in Europe</span></Hint>\r\n            <MistakesLeft>{mistakesLeft}</MistakesLeft>\r\n            <TimeToNextLetterWrapper>{timeToNextLetter} </TimeToNextLetterWrapper>\r\n        </Info>\r\n    </GameInfoWrapper>\r\n)\r\n\r\nexport default GameInfoSection;","import React from 'react';\r\nimport HangmanDrawing from './HangmanDrawing/HangmanDrawing';\r\nimport GameInfo from './GameInfo/GameInfo';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DrawingAndInfoSectionWrapper = styled.div`\r\n    flex-basis: 35%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    overflow: hidden;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    &::after{\r\n        top: -10%;\r\n        left: 35%;\r\n        right: 47%;\r\n        height: 110%;\r\n        transform: rotate(5deg);\r\n        background-color:${({ theme }) => theme.colors.deep};\r\n    }\r\n`\r\nconst DrawingAndInfoSection = ({ timeToNextLetter, mistakesLeft, isGameStarted }) => (\r\n\r\n    <DrawingAndInfoSectionWrapper>\r\n        <HangmanDrawing\r\n            isGameStarted={isGameStarted}\r\n            mistakesLeft={mistakesLeft}\r\n        />\r\n        <GameInfo\r\n            mistakesLeft={mistakesLeft}\r\n            timeToNextLetter={timeToNextLetter}\r\n        />\r\n    </DrawingAndInfoSectionWrapper>\r\n)\r\n\r\nexport default DrawingAndInfoSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LetterWrapper = styled.span`\r\n    display: block;\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    font-size: 2rem;\r\n    margin-left: 1.4rem;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n`\r\n\r\nconst letter = ({ letterObj }) => (\r\n\r\n    <LetterWrapper>\r\n        {letterObj.isLetterShowed ? letterObj.letter : \"__\"}\r\n    </LetterWrapper>\r\n\r\n);\r\n\r\n\r\nexport default letter;","import React from 'react';\r\nimport Letter from './Letter/Letter';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\n\r\n    flex-basis: 90%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: space-around;\r\n    text-align: center;\r\n\r\n`\r\n\r\nconst BreakLine = styled.div`\r\n\r\n    flex-basis: 100%;\r\n    height: 1%;\r\n\r\n`\r\n\r\n\r\n\r\nconst letters = ({ phraseToGuess }) => {\r\n\r\n    const letters = phraseToGuess.map(letterObj => {\r\n        let letters;\r\n        if (letterObj.letter !== \" \") {\r\n            letters = <Letter\r\n                key={letterObj.id}\r\n                letterObj={letterObj} />\r\n        }\r\n        else if (letterObj.letter === \" \") {\r\n            letters = <BreakLine\r\n                key={letterObj.id} />\r\n        }\r\n        return letters;\r\n    })\r\n\r\n    return (\r\n\r\n        <LettersWrapper>{letters}</LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default letters;","import React from 'react';\r\nimport Letters from './Letters/Letters';\r\nimport styled from 'styled-components';\r\n\r\nconst PhraseToGuessWrapper = styled.div`\r\n    flex-basis: 25%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-around;\r\n    background-color: ${({ theme }) => theme.colors.black};\r\n`\r\n\r\nconst PhraseToGuess = ({ phraseToGuess }) => (\r\n\r\n    <PhraseToGuessWrapper>\r\n\r\n        <Letters phraseToGuess={phraseToGuess} />\r\n\r\n    </PhraseToGuessWrapper>\r\n\r\n)\r\n\r\nexport default PhraseToGuess;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Letter = styled.span`\r\n\r\n    flex-basis: 10%;\r\n    height: 15%;\r\n    margin: .5rem;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n    font-weight: 400;\r\n    transform: ${({ isClicked }) => isClicked && 'translateY(.3rem)'};  \r\n    box-shadow:${({ isClicked, isHit, theme }) =>\r\n        isHit ? `0 .5rem 0 0 ${theme.colors.green}`\r\n            : isClicked ? `0 .5rem  0 0 ${theme.colors.red}`\r\n                : `0 0 .1rem 0 ${theme.colors.gray}`};\r\n    background-color: ${({ isClicked, theme }) => isClicked ? theme.colors.deep : theme.colors.black};\r\n    opacity: ${({ isClicked }) => isClicked ? '.8' : '1'};\r\n    transition-duration: .1s;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    cursor: pointer;\r\n\r\n\r\n`\r\n\r\nconst letterToClick = ({ letter, clickLetter, isHit, isClicked }) => (\r\n\r\n    <Letter\r\n        isClicked={isClicked}\r\n        onClick={clickLetter}\r\n        isHit={isHit}\r\n    >\r\n        {letter}\r\n    </Letter>\r\n)\r\n\r\nexport default letterToClick;","import React from 'react';\r\nimport LetterToClick from './LetterToClick/LetterToClick';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\n\r\n    flex-basis: 40%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n\r\n`\r\n\r\nconst LettersToClick = ({ lettersToClick, clickLetter }) => {\r\n\r\n    const letters = lettersToClick.map(letterToClick => (\r\n        <LetterToClick\r\n            clickLetter={(e, key) => clickLetter(e, key)}\r\n            isClicked={letterToClick.isClicked}\r\n            key={letterToClick.letter}\r\n            isHit={letterToClick.isHit}\r\n            letter={letterToClick.letter.toUpperCase()} />\r\n    ))\r\n\r\n    return (\r\n        <LettersWrapper>\r\n            {letters}\r\n        </LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default LettersToClick;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport DrawingAndInfoSection from './DrawingAndInfoSection/DrawingAndInfoSection';\r\nimport PhraseToGuessSection from './PhraseToGuessSection/PhraseToGuessSection';\r\nimport LettersToClickSection from './LettersToClickSection/LettersToClickSection';\r\n\r\n\r\nconst InGamePageWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    transform: ${({ isGameStarted }) => isGameStarted ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition: .5s linear all;\r\n`\r\n\r\n\r\n\r\n\r\nconst inGamePage = ({ mistakesLeft, timeToNextLetter, phraseToGuess, lettersToClick, clickLetter, isGameStarted }) => (\r\n    <InGamePageWrapper\r\n        isGameStarted={isGameStarted}>\r\n        <DrawingAndInfoSection\r\n            isGameStarted={isGameStarted}\r\n            mistakesLeft={mistakesLeft}\r\n            timeToNextLetter={timeToNextLetter}\r\n        />\r\n        <PhraseToGuessSection\r\n            phraseToGuess={phraseToGuess}\r\n        />\r\n        <LettersToClickSection\r\n            lettersToClick={lettersToClick}\r\n            clickLetter={clickLetter} />\r\n    </InGamePageWrapper>\r\n)\r\n\r\nexport default inGamePage;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst EndGameWrapper = styled.div`\r\nposition: absolute;\r\ntop:0;\r\nleft: 0;\r\nheight: 100%;\r\nwidth: 100%;\r\nbackground-color: #333;\r\ntransform: ${({ isGameEnded }) => isGameEnded ? 'translate(-100%, -100%)' : 'translate(100%,100%)'}\r\n`\r\n\r\nconst endGamePage = ({ isGameEnded }) => (\r\n    <EndGameWrapper\r\n        isGameEnded={isGameEnded}>\r\n    </EndGameWrapper>\r\n);\r\n\r\nexport default endGamePage;","import React, { Component } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport StartPage from '../components/StartPage/StartPage';\nimport InGamePage from '../components/InGamePage/InGamePage';\nimport EndGamePage from '../components/EndGamePage/EndGamePage';\n\nconst TIME_TO_NEXT_LETTER = 7;\n// const API = ' https://hangman-239ba.firebaseio.com/.json';\n\nclass App extends Component {\n\n  state = {\n    phraseToGuess: [],          //phrase comes from API in componentDidMount\n    lettersToClick: [           //letters in layout, possible to click or press (keyboard)\n      { letter: 'a', isClicked: false, isHit: false },\n      { letter: 'b', isClicked: false, isHit: false },\n      { letter: 'c', isClicked: false, isHit: false },\n      { letter: 'd', isClicked: false, isHit: false },\n      { letter: 'e', isClicked: false, isHit: false },\n      { letter: 'f', isClicked: false, isHit: false },\n      { letter: 'g', isClicked: false, isHit: false },\n      { letter: 'h', isClicked: false, isHit: false },\n      { letter: 'i', isClicked: false, isHit: false },\n      { letter: 'j', isClicked: false, isHit: false },\n      { letter: 'k', isClicked: false, isHit: false },\n      { letter: 'l', isClicked: false, isHit: false },\n      { letter: 'm', isClicked: false, isHit: false },\n      { letter: 'n', isClicked: false, isHit: false },\n      { letter: 'o', isClicked: false, isHit: false },\n      { letter: 'p', isClicked: false, isHit: false },\n      { letter: 'q', isClicked: false, isHit: false },\n      { letter: 'r', isClicked: false, isHit: false },\n      { letter: 's', isClicked: false, isHit: false },\n      { letter: 't', isClicked: false, isHit: false },\n      { letter: 'u', isClicked: false, isHit: false },\n      { letter: 'v', isClicked: false, isHit: false },\n      { letter: 'w', isClicked: false, isHit: false },\n      { letter: 'y', isClicked: false, isHit: false },\n      { letter: 'x', isClicked: false, isHit: false },\n      { letter: 'z', isClicked: false, isHit: false },\n    ],\n    timeToNextLetter: 7,        //if time === 0 => random letter is clicked \n    mistakesLeft: 7,            // if we select wrong letter => mistakes--. If mistakes ===0 => game is over\n    isGameStarted: false,\n    isGameEnded: false,\n  }\n\n  startGameHandler = () => {\n    this.setState({ isGameStarted: true });\n  }\n\n  startTimeToNextLetterHandler = () => {\n    if (this.state.isGameEnded) return;\n    this.ID = setInterval(() => {\n      this.setState({ timeToNextLetter: this.state.timeToNextLetter - 1 })\n    }, 1000);\n  }\n\n  isSelectedLetterInPhraseHandler = (selectedLetterObj) => {\n    const { phraseToGuess } = this.state\n    const letterInPhrase = phraseToGuess.find(letterObj => letterObj.letter === selectedLetterObj.letter.toUpperCase())\n    const selectedLetter = selectedLetterObj.letter.toUpperCase()\n    selectedLetterObj.isClicked = true;\n    if (letterInPhrase) {\n      selectedLetterObj.isHit = true;\n      phraseToGuess.forEach(letterObj => {\n        if (letterObj.letter === selectedLetter) {\n          letterObj.isLetterShowed = true;\n        }\n      })\n    }\n    else {\n      this.setState({ mistakesLeft: this.state.mistakesLeft - 1 })\n    }\n  }\n\n  clickOrPressKeyLetterHandler = (e, key) => {\n    //Do only if game is not ended\n    if (this.state.isGameEnded || this.state.timeToNextLetter === 0) return;\n\n    const { lettersToClick, phraseToGuess, } = this.state\n    const clickedLetter = e.target.textContent\n    let pressedOrClickedLetter;\n\n    if (key) {\n      pressedOrClickedLetter = key.toUpperCase()\n    }\n    else if (clickedLetter) {\n      pressedOrClickedLetter = e.target.textContent;\n    }\n\n    const index = lettersToClick.findIndex(letter => letter.letter.toUpperCase() === pressedOrClickedLetter);\n\n    if (index === -1 || lettersToClick[index].isClicked) return\n\n    const selectedLetterObj = lettersToClick[index]\n    this.isSelectedLetterInPhraseHandler(selectedLetterObj)\n    clearInterval(this.ID)\n    this.startTimeToNextLetterHandler();\n    this.setState({ phraseToGuess, lettersToClick, timeToNextLetter: TIME_TO_NEXT_LETTER });\n\n\n  }\n\n  //autoclick letter\n  componentDidUpdate(prevProps, prevState) {\n    //END GAME HANDLER\n    if (this.state.isGameEnded) return;\n\n    const allLettersAreShowed = this.state.phraseToGuess.filter(phrase => !phrase.isLetterShowed).length === 0;\n    const noMistakesLeft = this.state.mistakesLeft === 0 && true;\n    if (allLettersAreShowed || noMistakesLeft) {\n      clearInterval(this.ID)\n      clearTimeout(this.TimeoutID)\n      this.setState({ isGameEnded: true })\n\n    }\n\n    if (prevState.timeToNextLetter !== this.state.timeToNextLetter) {\n\n      const { phraseToGuess } = this.state\n      const lettersToClick = prevState.lettersToClick;\n\n      if (phraseToGuess.filter(phrase => !phrase.isLetterShowed).length === 0) return; // if the phrase is guessed\n      if (lettersToClick.filter(letterObj => !letterObj.isClicked).length === 0) return; // if all letters are clicked\n\n      const filteredLetters = lettersToClick.filter(letterToClick => !letterToClick.isClicked);\n      const random = Math.floor(Math.random() * filteredLetters.length);\n      //this is random clicked letter\n      const autoClicked = filteredLetters[random];\n\n      if (this.state.timeToNextLetter === 0) {\n        console.log('sss');\n        this.isSelectedLetterInPhraseHandler(autoClicked);\n        this.setState({ phraseToGuess, lettersToClick });\n        clearInterval(this.ID);\n        this.TimeoutID = setTimeout(() => {\n          this.setState({ timeToNextLetter: TIME_TO_NEXT_LETTER })\n          this.startTimeToNextLetterHandler();\n        }, 1000)\n      }\n\n    }\n\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => this.clickOrPressKeyLetterHandler(e, e.key));\n    const fetchedPhrase = 'The Eiffel Tower';\n    const { phraseToGuess } = this.state;\n    [...fetchedPhrase].map((phrase, index) => {\n      return phraseToGuess.push({\n        letter: phrase.toUpperCase(),\n        id: index,\n        isLetterShowed: false,\n      })\n    })\n    phraseToGuess.filter(letterObj => (\n      letterObj.letter === \" \" || letterObj.letter === \",\" || letterObj.letter === \"-\" ? letterObj.isLetterShowed = true : letterObj.isLetterShowed = false)\n    )\n    this.setState({ phraseToGuess })\n  }\n\n\n\n  componentWillUnmount() {\n\n    document.removeEventListener('keydown', this.clickOrPressKeyLetterHandler())\n  }\n\n  render() {\n    const {\n      phraseToGuess,\n      lettersToClick,\n      timeToNextLetter,\n      mistakesLeft,\n      isGameStarted,\n      isGameEnded\n    } = this.state\n\n    return (\n\n      <Layout\n        isGameStarted={isGameStarted}>\n        <StartPage\n          isGameStarted={isGameStarted}\n          startGame={this.startGameHandler} />\n        <InGamePage\n          isGameStarted={isGameStarted}\n          phraseToGuess={phraseToGuess}\n          lettersToClick={lettersToClick}\n          timeToNextLetter={timeToNextLetter}\n          mistakesLeft={mistakesLeft}\n          clickLetter={this.clickOrPressKeyLetterHandler}\n        />\n        <EndGamePage\n          isGameEnded={isGameEnded} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}