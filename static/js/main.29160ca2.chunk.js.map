{"version":3,"sources":["theme/theme.js","components/Layout/Layout.js","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanParts/HangmanParts.js","components/StartPage/StartPage.js","components/InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanDrawing.js","components/InGamePage/DrawingAndInfoSection/GameInfo/GameInfo.js","components/InGamePage/DrawingAndInfoSection/DrawingAndInfoSection.js","components/InGamePage/PhraseToGuessSection/Letters/Letter/Letter.js","components/InGamePage/PhraseToGuessSection/Letters/Letters.js","components/InGamePage/PhraseToGuessSection/PhraseToGuessSection.js","components/InGamePage/LettersToClickSection/LetterToClick/LetterToClick.js","components/InGamePage/LettersToClickSection/LettersToClickSection.js","components/InGamePage/InGamePage.js","components/EndGamePage/EndGamePage.js","containers/App.js","serviceWorker.js","index.js"],"names":["theme","colors","white","black","gray","deep","green","red","GlobalStyle","createGlobalStyle","_templateObject","_ref","Layout","styled","div","_templateObject2","layout","_ref2","isGameInProgress","children","react_default","a","createElement","styled_components_browser_esm","Fragment","StylesForAllParts","HangmanParts_templateObject","GallowsBasis","HangmanParts_templateObject2","GallowBranch","_templateObject3","GallowTopBranch","_templateObject4","GallowsNoose","_templateObject5","_ref3","_ref4","mistakesLeft","_ref5","isGameEnded","Head","_templateObject6","_ref6","_ref7","_ref8","Body","_templateObject7","_ref9","_ref10","_ref11","StylesForArms","_templateObject8","_ref12","StylesForLegs","_templateObject9","_ref13","LeftArm","_templateObject10","_ref14","_ref15","RightArm","_templateObject11","_ref16","_ref17","LeftLeg","_templateObject12","_ref18","_ref19","RightLeg","_templateObject13","_ref20","_ref21","HangmanDrawingWrapper","_templateObject14","_ref22","Hangman","_ref23","StartPageWrapper","StartPage_templateObject","StartGameButton","button","StartPage_templateObject2","startPage","startGame","HangmanParts","onClick","HangmanSectionWrapper","HangmanDrawing_templateObject","hangmanDrawingSection","GameInfoWrapper","GameInfo_templateObject","Info","GameInfo_templateObject2","Category","p","GameInfo_templateObject3","Hint","GameInfo_templateObject4","MistakesLeft","GameInfo_templateObject5","TimeToNextLetterWrapper","GameInfo_templateObject6","GameInfoSection","timeToNextLetter","DrawingAndInfoSectionWrapper","DrawingAndInfoSection_templateObject","DrawingAndInfoSection","HangmanDrawing","GameInfo","LetterWrapper","span","Letter_templateObject","letter","letterObj","isLetterShowed","LettersWrapper","Letters_templateObject","BreakLine","Letters_templateObject2","letters","phraseToGuess","map","Letter","key","id","PhraseToGuessWrapper","PhraseToGuessSection_templateObject","PhraseToGuess","Letters","LetterToClick_templateObject","isClicked","isHit","concat","letterToClick","clickLetter","LetterToClick_Letter","LettersToClickSection_templateObject","LettersToClick","lettersToClick","LetterToClick","e","toUpperCase","LettersToClickSection_LettersWrapper","InGamePageWrapper","InGamePage_templateObject","inGamePage","InGamePage_DrawingAndInfoSection_DrawingAndInfoSection","PhraseToGuessSection","LettersToClickSection","EndGameWrapper","EndGamePage_templateObject","endGamePage","TIME_TO_NEXT_LETTER","App","state","startGameHandler","_this","setState","startTimeToNextLetterHandler","ID","setInterval","isSelectedLetterInPhraseHandler","selectedLetterObj","letterInPhrase","find","selectedLetter","forEach","clickOrPressKeyLetterHandler","pressedOrClickedLetter","_this$state","clickedLetter","target","textContent","index","findIndex","clearInterval","prevProps","prevState","_this2","this","allLettersAreShowed","filter","phrase","length","noMistakesLeft","clearTimeout","TimeoutID","filteredLetters","autoClicked","Math","floor","random","console","log","setTimeout","_this3","document","addEventListener","Object","toConsumableArray","push","removeEventListener","_this$state2","Layout_Layout","StartPage","InGamePage","EndGamePage","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29160ca2.chunk.js","sourcesContent":["export const theme = {\r\n\r\n    colors: {\r\n        white: '#fff',\r\n        black: '#000',\r\n        gray: '#D6D6D8',\r\n        deep: '#0B091F',\r\n        green: '#69a982',\r\n        red: '#6f2232',\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport { theme } from '../../theme/theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-weight: normal;\r\n    color:${({ theme }) => theme.colors.black};\r\n}\r\n* ::after, * ::before{\r\n    position: absolute;\r\n    content: '';\r\n}\r\n\r\n\r\n:root{\r\n    font-size: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n}\r\n`\r\nconst Layout = styled.div`\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\nheight: 100%;\r\nwidth: 100%;\r\noverflow:hidden;\r\nmax-width: 1000px;\r\ntransform: translate(-50%,-50%);\r\n`\r\n\r\nconst layout = ({ isGameInProgress, children }) =>\r\n    (\r\n        <ThemeProvider theme={theme}>\r\n            <>\r\n                <GlobalStyle\r\n                    isGameInProgress={isGameInProgress} />\r\n                <Layout>\r\n                    {children}\r\n                </Layout>\r\n            </>\r\n        </ThemeProvider>\r\n\r\n    )\r\n\r\nexport default layout;","import styled from 'styled-components';\r\nimport React from 'react';\r\n\r\n//HangmanDrawingParts\r\nconst StylesForAllParts = styled.div`\r\n    position: absolute;\r\n    /* transition-delay: .5s; */\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    &::after,&::before{\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n    }\r\n`\r\nconst GallowsBasis = styled(StylesForAllParts)`\r\n    top: 95%;\r\n    height: .3em;\r\n    left: 5%;\r\n    width: 70%;\r\n`\r\nconst GallowBranch = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    bottom: 5%;\r\n    left: 5%;\r\n    width: .4em;\r\n    &::after{\r\n        top: 0%;\r\n        height: 4em;\r\n        left: 300%;\r\n        width: 100%;\r\n        transform: rotate(35deg);\r\n    }\r\n    `\r\nconst GallowTopBranch = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    height: .4em;\r\n    left: 5%;\r\n    right: 50%;\r\n`\r\nconst GallowsNoose = styled(StylesForAllParts)`\r\n    top: 5%;\r\n    bottom: ${({ isGameInProgress }) => isGameInProgress ? '82.5%' : '70%'};\r\n    left: 50%;\r\n    width: .4em;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 6 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n`\r\n\r\nconst Head = styled(StylesForAllParts)`\r\n    top: ${({ isGameInProgress }) => isGameInProgress ? '17.5%' : '30%'};\r\n    height: 3.5em;\r\n    left: 50%;\r\n    width: 3.5em;\r\n    transform: translate(-50%);\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 5 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n    border: .1em solid white;\r\n    border-radius: 50%;\r\n    background-color: transparent;\r\n    ::after,::before{\r\n        top: 20%;\r\n        height: 10%;\r\n        width: 10%;\r\n        border-radius: 50%;\r\n    }\r\n    ::after{\r\n        left: 25%;\r\n    \r\n    }\r\n    ::before{\r\n        right: 25%;\r\n    }\r\n`\r\nconst Body = styled(StylesForAllParts)`\r\n    top: ${({ isGameInProgress }) => isGameInProgress ? `calc(3.5em + 17.5%)` : `calc(3.5em + 30%)`};\r\n    height: 5em;\r\n    left: 50%;\r\n    width: .3em;\r\n    transform: translateX(-50%);\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 4 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n`\r\nconst StylesForArms = styled(StylesForAllParts)`\r\n    top: ${({ isGameInProgress }) => isGameInProgress ? `calc(3.5em + 17.5%)` : `calc(3.5em + 30%)`};\r\n   height: .2em;\r\n   width: 3em;\r\n   border-radius: 30%;\r\n`\r\nconst StylesForLegs = styled(StylesForAllParts)`\r\n    top: ${({ isGameInProgress }) => isGameInProgress ? `calc(3.5em + 17.5% + 4.8em)` : `calc(4.8em + 3.5em + 30%)`};\r\n    width: 4em;\r\n    height: .2em;\r\n    border-radius: 30%;\r\n`\r\nconst LeftArm = styled(StylesForArms)`\r\n    left: 50%;\r\n    transform: translateX(-100%) rotate(-30deg);\r\n    transform-origin: top right;\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 3 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n`\r\nconst RightArm = styled(StylesForArms)`\r\n    right: 50%;\r\n    transform: translateX(100%) rotate(30deg);\r\n    transform-origin: top left;\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 2 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n`\r\nconst LeftLeg = styled(StylesForLegs)`\r\n    left: 50%;\r\n    transform: translateX(-100%) rotate(-50deg);\r\n    transform-origin: top right;\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 1 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n`\r\nconst RightLeg = styled(StylesForLegs)`\r\n    right: 50%;\r\n    transform: translateX(100%) rotate(50deg);\r\n    transform-origin: top left;\r\n    opacity: ${({ mistakesLeft, isGameInProgress }) => mistakesLeft <= 0 || !isGameInProgress ? '1' : '0'};\r\n    transition-delay:${({ isGameEnded }) => isGameEnded ? '1s' : ''};\r\n`\r\nconst HangmanDrawingWrapper = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\nbackground-color: ${({ theme }) => theme.colors.deep};\r\n`\r\nconst Hangman = ({ mistakesLeft, isGameInProgress, isGameEnded }) => (\r\n    <HangmanDrawingWrapper\r\n\r\n    >\r\n        <GallowsBasis />\r\n        <GallowBranch />\r\n        <GallowTopBranch />\r\n        <GallowsNoose\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress}\r\n        />\r\n        <Head\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress} />\r\n        <Body\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress} />\r\n        <LeftArm\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress} />\r\n        <LeftLeg\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress} />\r\n        <RightArm\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress} />\r\n        <RightLeg\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress} />\r\n    </HangmanDrawingWrapper>\r\n);\r\n\r\nexport default Hangman;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Hangman from '../InGamePage/DrawingAndInfoSection/HangmanDrawing/HangmanParts/HangmanParts';\r\n\r\n\r\n\r\nconst StartPageWrapper = styled.div`\r\nheight: 100%;\r\nwidth: 100%;\r\nopacity: ${({ isGameInProgress, isGameEnded }) => isGameInProgress || isGameEnded ? '0' : '1'};\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\ntransition: .4s linear all;\r\n`\r\n\r\nconst StartGameButton = styled.button`\r\nposition: absolute;\r\ntop: 80%;\r\nleft: 50%;\r\ntransform:translateX(-50%);\r\nheight: 3rem;\r\nwidth: 10rem;\r\nborder-radius: 100px;\r\nfont-size: 1.2rem;\r\nletter-spacing: 3px;\r\nbackground-color: ${({ theme }) => theme.colors.black};\r\ncolor: ${({ theme }) => theme.colors.gray};\r\n\r\n`\r\n\r\nconst startPage = ({ isGameInProgress, startGame, isGameEnded }) => {\r\n    return (\r\n        <StartPageWrapper\r\n            isGameEnded={isGameEnded}\r\n            isGameInProgress={isGameInProgress}>\r\n\r\n            <Hangman />\r\n\r\n            <StartGameButton\r\n                onClick={startGame}>Start Game</StartGameButton>\r\n        </StartPageWrapper>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default startPage;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Hangman from './HangmanParts/HangmanParts'\r\n\r\nconst HangmanSectionWrapper = styled.div`\r\n    flex-grow: 1;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n`\r\n\r\n\r\nconst hangmanDrawingSection = ({ mistakesLeft, isGameInProgress, isGameEnded }) => (\r\n    <HangmanSectionWrapper\r\n        isGameEnded={isGameEnded}\r\n        isGameInProgress={isGameInProgress}>\r\n        <Hangman\r\n            isGameEnded={isGameEnded}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameInProgress={isGameInProgress}\r\n        />\r\n\r\n\r\n    </HangmanSectionWrapper>\r\n)\r\nexport default hangmanDrawingSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst GameInfoWrapper = styled.div`\r\n    flex-basis: 50%;\r\n    background-color: ${({ theme }) => theme.colors.gray};\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: flex-end;\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\nspan{\r\n    display: block;\r\n}\r\n\r\n`\r\nconst Info = styled.div`\r\n    flex-basis: 92.5%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;\r\n    align-items: flex-end;\r\n`\r\n\r\nconst Category = styled.p`\r\n    flex-basis: 100%;\r\n    height: 25%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: space-around;\r\n    font-weight: 700;\r\n`\r\nconst Hint = styled.p`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: space-around;\r\n    height: 40%;\r\n    font-weight: 700;\r\n`\r\n\r\nconst MistakesLeft = styled.div`\r\n    flex-basis: 40%;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 2rem;\r\n    margin-bottom: .1rem;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n    border-radius: 100px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n    &::before{\r\n        top: 50%;\r\n        transform: translate(-90%, -50%);\r\n        left: 0;\r\n        width: 5rem;\r\n        height: 1rem;\r\n        border-radius: 20%;\r\n        background-color: ${({ theme }) => theme.colors.deep};\r\n    }\r\n`\r\n\r\n\r\nconst TimeToNextLetterWrapper = styled.div`\r\n    flex-basis: 40%;\r\n    height: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: .1rem;\r\n    font-size: 2rem;\r\n    background-color: ${({ theme }) => theme.colors.black};\r\n    border-radius: 100px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n    &::before{\r\n        top: 100%;\r\n        transform: translate(-50%, -10%);\r\n        left: 50%;\r\n        width: 1rem;\r\n        height: 3rem;\r\n        border-radius: 20%;\r\n        background-color:${({ theme }) => theme.colors.black};\r\n    }\r\n`\r\n\r\nconst GameInfoSection = ({ timeToNextLetter, mistakesLeft }) => (\r\n    <GameInfoWrapper>\r\n        <Info>\r\n            <Category>Category <span>Famous Buildings </span> </Category>\r\n            <Hint>Hint <span> One of the highest buildings in Europe</span></Hint>\r\n            <MistakesLeft>{mistakesLeft}</MistakesLeft>\r\n            <TimeToNextLetterWrapper>{timeToNextLetter} </TimeToNextLetterWrapper>\r\n        </Info>\r\n    </GameInfoWrapper>\r\n)\r\n\r\nexport default GameInfoSection;","import React from 'react';\r\nimport HangmanDrawing from './HangmanDrawing/HangmanDrawing';\r\nimport GameInfo from './GameInfo/GameInfo';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst DrawingAndInfoSectionWrapper = styled.div`\r\n    flex-basis: 35%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    &::after{\r\n        top: -10%;\r\n        left: 35%;\r\n        right: 47%;\r\n        height: 110%;\r\n        transform: rotate(5deg);\r\n        background-color:${({ theme }) => theme.colors.deep};\r\n    }\r\n`\r\nconst DrawingAndInfoSection = ({ timeToNextLetter, mistakesLeft, isGameInProgress, isGameEnded }) => (\r\n\r\n    <DrawingAndInfoSectionWrapper>\r\n        <HangmanDrawing\r\n            isGameInProgress={isGameInProgress}\r\n            mistakesLeft={mistakesLeft}\r\n            isGameEnded={isGameEnded}\r\n        />\r\n        <GameInfo\r\n            mistakesLeft={mistakesLeft}\r\n            timeToNextLetter={timeToNextLetter}\r\n        />\r\n    </DrawingAndInfoSectionWrapper>\r\n)\r\n\r\nexport default DrawingAndInfoSection;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LetterWrapper = styled.span`\r\n    display: block;\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    font-size: 2rem;\r\n    margin-left: 1.4rem;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n`\r\n\r\nconst letter = ({ letterObj }) => (\r\n\r\n    <LetterWrapper>\r\n        {letterObj.isLetterShowed ? letterObj.letter : \"__\"}\r\n    </LetterWrapper>\r\n\r\n);\r\n\r\n\r\nexport default letter;","import React from 'react';\r\nimport Letter from './Letter/Letter';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\n\r\n    flex-basis: 90%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: space-around;\r\n    text-align: center;\r\n\r\n`\r\n\r\nconst BreakLine = styled.div`\r\n\r\n    flex-basis: 100%;\r\n    height: 1%;\r\n\r\n`\r\n\r\n\r\n\r\nconst letters = ({ phraseToGuess }) => {\r\n\r\n    const letters = phraseToGuess.map(letterObj => {\r\n        let letters;\r\n        if (letterObj.letter !== \" \") {\r\n            letters = <Letter\r\n                key={letterObj.id}\r\n                letterObj={letterObj} />\r\n        }\r\n        else if (letterObj.letter === \" \") {\r\n            letters = <BreakLine\r\n                key={letterObj.id} />\r\n        }\r\n        return letters;\r\n    })\r\n\r\n    return (\r\n\r\n        <LettersWrapper>{letters}</LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default letters;","import React from 'react';\r\nimport Letters from './Letters/Letters';\r\nimport styled from 'styled-components';\r\n\r\nconst PhraseToGuessWrapper = styled.div`\r\n    flex-basis: 25%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-around;\r\n    background-color: ${({ theme }) => theme.colors.black};\r\n`\r\n\r\nconst PhraseToGuess = ({ phraseToGuess }) => (\r\n\r\n    <PhraseToGuessWrapper>\r\n\r\n        <Letters phraseToGuess={phraseToGuess} />\r\n\r\n    </PhraseToGuessWrapper>\r\n\r\n)\r\n\r\nexport default PhraseToGuess;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Letter = styled.span`\r\n\r\n    flex-basis: 10%;\r\n    height: 15%;\r\n    margin: .5rem;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n    font-weight: 400;\r\n    transform: ${({ isClicked }) => isClicked && 'translateY(.3rem)'};  \r\n    box-shadow:${({ isClicked, isHit, theme }) =>\r\n        isHit ? `0 .5rem 0 0 ${theme.colors.green}`\r\n            : isClicked ? `0 .5rem  0 0 ${theme.colors.red}`\r\n                : `0 0 .1rem 0 ${theme.colors.gray}`};\r\n    background-color: ${({ isClicked, theme }) => isClicked ? theme.colors.deep : theme.colors.black};\r\n    opacity: ${({ isClicked }) => isClicked ? '.8' : '1'};\r\n    transition-duration: .1s;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    cursor: pointer;\r\n\r\n\r\n`\r\n\r\nconst letterToClick = ({ letter, clickLetter, isHit, isClicked }) => (\r\n\r\n    <Letter\r\n        isClicked={isClicked}\r\n        onClick={clickLetter}\r\n        isHit={isHit}\r\n    >\r\n        {letter}\r\n    </Letter>\r\n)\r\n\r\nexport default letterToClick;","import React from 'react';\r\nimport LetterToClick from './LetterToClick/LetterToClick';\r\nimport styled from 'styled-components';\r\n\r\nconst LettersWrapper = styled.div`\r\n\r\n    flex-basis: 40%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.deep};\r\n\r\n`\r\n\r\nconst LettersToClick = ({ lettersToClick, clickLetter }) => {\r\n\r\n    const letters = lettersToClick.map(letterToClick => (\r\n        <LetterToClick\r\n            clickLetter={(e, key) => clickLetter(e, key)}\r\n            isClicked={letterToClick.isClicked}\r\n            key={letterToClick.letter}\r\n            isHit={letterToClick.isHit}\r\n            letter={letterToClick.letter.toUpperCase()} />\r\n    ))\r\n\r\n    return (\r\n        <LettersWrapper>\r\n            {letters}\r\n        </LettersWrapper>\r\n    );\r\n}\r\n\r\nexport default LettersToClick;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport DrawingAndInfoSection from './DrawingAndInfoSection/DrawingAndInfoSection';\r\nimport PhraseToGuessSection from './PhraseToGuessSection/PhraseToGuessSection';\r\nimport LettersToClickSection from './LettersToClickSection/LettersToClickSection';\r\n\r\n\r\nconst InGamePageWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    transform: ${({ isGameInProgress, isGameEnded }) => isGameInProgress ? 'translateX(0)' : isGameEnded ? 'translateX(-100%)' : 'translateX(100%)'};\r\n    transition: ${({ isGameEnded }) => isGameEnded ? '.4s .4s linear all' : '.4s linear all'};\r\n`\r\n\r\n\r\n\r\n\r\nconst inGamePage = ({ mistakesLeft, timeToNextLetter, phraseToGuess, lettersToClick, clickLetter, isGameInProgress, isGameEnded }) => (\r\n    <InGamePageWrapper\r\n        isGameEnded={isGameEnded}\r\n        isGameInProgress={isGameInProgress}>\r\n        <DrawingAndInfoSection\r\n            isGameInProgress={isGameInProgress}\r\n            mistakesLeft={mistakesLeft}\r\n            timeToNextLetter={timeToNextLetter}\r\n            isGameEnded={isGameEnded}\r\n        />\r\n        <PhraseToGuessSection\r\n            phraseToGuess={phraseToGuess}\r\n        />\r\n        <LettersToClickSection\r\n            lettersToClick={lettersToClick}\r\n            clickLetter={clickLetter} />\r\n    </InGamePageWrapper>\r\n)\r\n\r\nexport default inGamePage;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst EndGameWrapper = styled.div`\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nheight: 100%;\r\nwidth: 100%;\r\nbackground-color: #333;\r\ntransform: ${({ isGameEnded, isGameInProgress }) => isGameInProgress ? 'translateX(100%)' : isGameEnded ? 'translateX(0)' : 'translateX(200%)'};\r\ntransition: .4s .4s linear all;\r\n`\r\n\r\nconst endGamePage = ({ isGameEnded, isGameInProgress }) => (\r\n    <EndGameWrapper\r\n        isGameInProgress={isGameInProgress}\r\n        isGameEnded={isGameEnded}>\r\n    </EndGameWrapper>\r\n);\r\n\r\nexport default endGamePage;","import React, { Component } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport StartPage from '../components/StartPage/StartPage';\nimport InGamePage from '../components/InGamePage/InGamePage';\nimport EndGamePage from '../components/EndGamePage/EndGamePage';\n\nconst TIME_TO_NEXT_LETTER = 7;\n// const API = ' https://hangman-239ba.firebaseio.com/.json';\n\nclass App extends Component {\n\n  state = {\n    phraseToGuess: [],          //phrase comes from API in componentDidMount\n    lettersToClick: [           //letters in layout, possible to click or press (keyboard)\n      { letter: 'a', isClicked: false, isHit: false },\n      { letter: 'b', isClicked: false, isHit: false },\n      { letter: 'c', isClicked: false, isHit: false },\n      { letter: 'd', isClicked: false, isHit: false },\n      { letter: 'e', isClicked: false, isHit: false },\n      { letter: 'f', isClicked: false, isHit: false },\n      { letter: 'g', isClicked: false, isHit: false },\n      { letter: 'h', isClicked: false, isHit: false },\n      { letter: 'i', isClicked: false, isHit: false },\n      { letter: 'j', isClicked: false, isHit: false },\n      { letter: 'k', isClicked: false, isHit: false },\n      { letter: 'l', isClicked: false, isHit: false },\n      { letter: 'm', isClicked: false, isHit: false },\n      { letter: 'n', isClicked: false, isHit: false },\n      { letter: 'o', isClicked: false, isHit: false },\n      { letter: 'p', isClicked: false, isHit: false },\n      { letter: 'q', isClicked: false, isHit: false },\n      { letter: 'r', isClicked: false, isHit: false },\n      { letter: 's', isClicked: false, isHit: false },\n      { letter: 't', isClicked: false, isHit: false },\n      { letter: 'u', isClicked: false, isHit: false },\n      { letter: 'v', isClicked: false, isHit: false },\n      { letter: 'w', isClicked: false, isHit: false },\n      { letter: 'y', isClicked: false, isHit: false },\n      { letter: 'x', isClicked: false, isHit: false },\n      { letter: 'z', isClicked: false, isHit: false },\n    ],\n    timeToNextLetter: 7,        //if time === 0 => random letter is clicked \n    mistakesLeft: 7,            // if we select wrong letter => mistakes--. If mistakes ===0 => game is over\n    isGameInProgress: false,\n    isGameEnded: false,\n  }\n\n  startGameHandler = () => {\n    this.setState({ isGameInProgress: true });\n  }\n\n  startTimeToNextLetterHandler = () => {\n    if (this.state.isGameEnded) return;\n    this.ID = setInterval(() => {\n      this.setState({ timeToNextLetter: this.state.timeToNextLetter - 1 })\n    }, 1000);\n  }\n\n  isSelectedLetterInPhraseHandler = (selectedLetterObj) => {\n    const { phraseToGuess } = this.state\n    const letterInPhrase = phraseToGuess.find(letterObj => letterObj.letter === selectedLetterObj.letter.toUpperCase())\n    const selectedLetter = selectedLetterObj.letter.toUpperCase()\n    selectedLetterObj.isClicked = true;\n    if (letterInPhrase) {\n      selectedLetterObj.isHit = true;\n      phraseToGuess.forEach(letterObj => {\n        if (letterObj.letter === selectedLetter) {\n          letterObj.isLetterShowed = true;\n        }\n      })\n    }\n    else {\n      this.setState({ mistakesLeft: this.state.mistakesLeft - 1 })\n    }\n  }\n\n  clickOrPressKeyLetterHandler = (e, key) => {\n    if (!this.state.isGameInProgress) return;\n    //Do only if game is not ended\n    if (this.state.isGameEnded || this.state.timeToNextLetter === 0) return;\n\n    const { lettersToClick, phraseToGuess, } = this.state\n    const clickedLetter = e.target.textContent\n    let pressedOrClickedLetter;\n\n    if (key) {\n      pressedOrClickedLetter = key.toUpperCase()\n    }\n    else if (clickedLetter) {\n      pressedOrClickedLetter = e.target.textContent;\n    }\n\n    const index = lettersToClick.findIndex(letter => letter.letter.toUpperCase() === pressedOrClickedLetter);\n\n    if (index === -1 || lettersToClick[index].isClicked) return\n\n    const selectedLetterObj = lettersToClick[index]\n    this.isSelectedLetterInPhraseHandler(selectedLetterObj)\n    clearInterval(this.ID)\n    this.startTimeToNextLetterHandler();\n    this.setState({ phraseToGuess, lettersToClick, timeToNextLetter: TIME_TO_NEXT_LETTER });\n\n\n  }\n\n  //autoclick letter\n  componentDidUpdate(prevProps, prevState) {\n    //END GAME HANDLER\n    if (this.state.isGameEnded) return;\n\n    const allLettersAreShowed = this.state.phraseToGuess.filter(phrase => !phrase.isLetterShowed).length === 0;\n    const noMistakesLeft = this.state.mistakesLeft === 0 && true;\n    if (allLettersAreShowed || noMistakesLeft) {\n      clearInterval(this.ID)\n      clearTimeout(this.TimeoutID)\n      this.setState({ isGameEnded: true, isGameInProgress: false })\n\n    }\n\n    if (prevState.timeToNextLetter !== this.state.timeToNextLetter) {\n\n      const { phraseToGuess } = this.state\n      const lettersToClick = prevState.lettersToClick;\n\n      if (phraseToGuess.filter(phrase => !phrase.isLetterShowed).length === 0) return; // if the phrase is guessed\n      if (lettersToClick.filter(letterObj => !letterObj.isClicked).length === 0) return; // if all letters are clicked\n\n      const filteredLetters = lettersToClick.filter(letterToClick => !letterToClick.isClicked);\n      const random = Math.floor(Math.random() * filteredLetters.length);\n      //this is random clicked letter\n      const autoClicked = filteredLetters[random];\n\n      if (this.state.timeToNextLetter === 0) {\n        console.log('sss');\n        this.isSelectedLetterInPhraseHandler(autoClicked);\n        this.setState({ phraseToGuess, lettersToClick });\n        clearInterval(this.ID);\n        this.TimeoutID = setTimeout(() => {\n          this.setState({ timeToNextLetter: TIME_TO_NEXT_LETTER })\n          this.startTimeToNextLetterHandler();\n        }, 1000)\n      }\n\n    }\n\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => this.clickOrPressKeyLetterHandler(e, e.key));\n    const fetchedPhrase = 'The Eiffel Tower';\n    const { phraseToGuess } = this.state;\n    [...fetchedPhrase].map((phrase, index) => {\n      return phraseToGuess.push({\n        letter: phrase.toUpperCase(),\n        id: index,\n        isLetterShowed: false,\n      })\n    })\n    phraseToGuess.filter(letterObj => (\n      letterObj.letter === \" \" || letterObj.letter === \",\" || letterObj.letter === \"-\" ? letterObj.isLetterShowed = true : letterObj.isLetterShowed = false)\n    )\n    this.setState({ phraseToGuess })\n  }\n\n\n\n  componentWillUnmount() {\n\n    document.removeEventListener('keydown', this.clickOrPressKeyLetterHandler())\n  }\n\n  render() {\n    const {\n      phraseToGuess,\n      lettersToClick,\n      timeToNextLetter,\n      mistakesLeft,\n      isGameInProgress,\n      isGameEnded\n    } = this.state\n\n    return (\n\n      <Layout\n        isGameInProgress={isGameInProgress}>\n        <StartPage\n          isGameEnded={isGameEnded}\n          isGameInProgress={isGameInProgress}\n          startGame={this.startGameHandler} />\n        <InGamePage\n          isGameEnded={isGameEnded}\n          isGameInProgress={isGameInProgress}\n\n          phraseToGuess={phraseToGuess}\n          lettersToClick={lettersToClick}\n          timeToNextLetter={timeToNextLetter}\n          mistakesLeft={mistakesLeft}\n          clickLetter={this.clickOrPressKeyLetterHandler}\n        />\n        <EndGamePage\n          isGameInProgress={isGameInProgress}\n          isGameEnded={isGameEnded} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}